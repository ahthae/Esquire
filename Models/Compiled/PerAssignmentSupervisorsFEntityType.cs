// <auto-generated />
using System;
using System.Reflection;
using Microsoft.EntityFrameworkCore.Metadata;
using Oracle.EntityFrameworkCore.Metadata;
using esquire.Models.Fusion;

#pragma warning disable 219, 612, 618
#nullable enable

namespace esquire.Models.Compiled
{
    internal partial class PerAssignmentSupervisorsFEntityType
    {
        public static RuntimeEntityType Create(RuntimeModel model, RuntimeEntityType? baseEntityType = null)
        {
            var runtimeEntityType = model.AddEntityType(
                "esquire.Models.Fusion.PerAssignmentSupervisorsF",
                typeof(PerAssignmentSupervisorsF),
                baseEntityType);

            var actionOccurrenceId = runtimeEntityType.AddProperty(
                "ActionOccurrenceId",
                typeof(string),
                propertyInfo: typeof(PerAssignmentSupervisorsF).GetProperty("ActionOccurrenceId", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(PerAssignmentSupervisorsF).GetField("<ActionOccurrenceId>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                nullable: true,
                maxLength: 50,
                unicode: false);
            actionOccurrenceId.AddAnnotation("Oracle:ValueGenerationStrategy", OracleValueGenerationStrategy.None);
            actionOccurrenceId.AddAnnotation("Relational:ColumnName", "ACTION_OCCURRENCE_ID");

            var assignmentId = runtimeEntityType.AddProperty(
                "AssignmentId",
                typeof(decimal?),
                propertyInfo: typeof(PerAssignmentSupervisorsF).GetProperty("AssignmentId", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(PerAssignmentSupervisorsF).GetField("<AssignmentId>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                nullable: true);
            assignmentId.AddAnnotation("Oracle:ValueGenerationStrategy", OracleValueGenerationStrategy.None);
            assignmentId.AddAnnotation("Relational:ColumnName", "ASSIGNMENT_ID");
            assignmentId.AddAnnotation("Relational:ColumnType", "NUMBER(38)");

            var assignmentSupervisorId = runtimeEntityType.AddProperty(
                "AssignmentSupervisorId",
                typeof(decimal?),
                propertyInfo: typeof(PerAssignmentSupervisorsF).GetProperty("AssignmentSupervisorId", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(PerAssignmentSupervisorsF).GetField("<AssignmentSupervisorId>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                nullable: true);
            assignmentSupervisorId.AddAnnotation("Oracle:ValueGenerationStrategy", OracleValueGenerationStrategy.None);
            assignmentSupervisorId.AddAnnotation("Relational:ColumnName", "ASSIGNMENT_SUPERVISOR_ID");
            assignmentSupervisorId.AddAnnotation("Relational:ColumnType", "NUMBER(38)");

            var businessGroupId = runtimeEntityType.AddProperty(
                "BusinessGroupId",
                typeof(decimal?),
                propertyInfo: typeof(PerAssignmentSupervisorsF).GetProperty("BusinessGroupId", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(PerAssignmentSupervisorsF).GetField("<BusinessGroupId>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                nullable: true);
            businessGroupId.AddAnnotation("Oracle:ValueGenerationStrategy", OracleValueGenerationStrategy.None);
            businessGroupId.AddAnnotation("Relational:ColumnName", "BUSINESS_GROUP_ID");
            businessGroupId.AddAnnotation("Relational:ColumnType", "NUMBER(38)");

            var createdBy = runtimeEntityType.AddProperty(
                "CreatedBy",
                typeof(string),
                propertyInfo: typeof(PerAssignmentSupervisorsF).GetProperty("CreatedBy", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(PerAssignmentSupervisorsF).GetField("<CreatedBy>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                nullable: true,
                maxLength: 50,
                unicode: false);
            createdBy.AddAnnotation("Oracle:ValueGenerationStrategy", OracleValueGenerationStrategy.None);
            createdBy.AddAnnotation("Relational:ColumnName", "CREATED_BY");

            var creationDate = runtimeEntityType.AddProperty(
                "CreationDate",
                typeof(DateTime?),
                propertyInfo: typeof(PerAssignmentSupervisorsF).GetProperty("CreationDate", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(PerAssignmentSupervisorsF).GetField("<CreationDate>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                nullable: true);
            creationDate.AddAnnotation("Oracle:ValueGenerationStrategy", OracleValueGenerationStrategy.None);
            creationDate.AddAnnotation("Relational:ColumnName", "CREATION_DATE");
            creationDate.AddAnnotation("Relational:ColumnType", "DATE");

            var effectiveEndDate = runtimeEntityType.AddProperty(
                "EffectiveEndDate",
                typeof(DateTime?),
                propertyInfo: typeof(PerAssignmentSupervisorsF).GetProperty("EffectiveEndDate", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(PerAssignmentSupervisorsF).GetField("<EffectiveEndDate>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                nullable: true);
            effectiveEndDate.AddAnnotation("Oracle:ValueGenerationStrategy", OracleValueGenerationStrategy.None);
            effectiveEndDate.AddAnnotation("Relational:ColumnName", "EFFECTIVE_END_DATE");
            effectiveEndDate.AddAnnotation("Relational:ColumnType", "DATE");

            var effectiveStartDate = runtimeEntityType.AddProperty(
                "EffectiveStartDate",
                typeof(DateTime?),
                propertyInfo: typeof(PerAssignmentSupervisorsF).GetProperty("EffectiveStartDate", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(PerAssignmentSupervisorsF).GetField("<EffectiveStartDate>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                nullable: true);
            effectiveStartDate.AddAnnotation("Oracle:ValueGenerationStrategy", OracleValueGenerationStrategy.None);
            effectiveStartDate.AddAnnotation("Relational:ColumnName", "EFFECTIVE_START_DATE");
            effectiveStartDate.AddAnnotation("Relational:ColumnType", "DATE");

            var freezeStartDate = runtimeEntityType.AddProperty(
                "FreezeStartDate",
                typeof(DateTime?),
                propertyInfo: typeof(PerAssignmentSupervisorsF).GetProperty("FreezeStartDate", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(PerAssignmentSupervisorsF).GetField("<FreezeStartDate>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                nullable: true);
            freezeStartDate.AddAnnotation("Oracle:ValueGenerationStrategy", OracleValueGenerationStrategy.None);
            freezeStartDate.AddAnnotation("Relational:ColumnName", "FREEZE_START_DATE");
            freezeStartDate.AddAnnotation("Relational:ColumnType", "DATE");

            var freezeUntilDate = runtimeEntityType.AddProperty(
                "FreezeUntilDate",
                typeof(DateTime?),
                propertyInfo: typeof(PerAssignmentSupervisorsF).GetProperty("FreezeUntilDate", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(PerAssignmentSupervisorsF).GetField("<FreezeUntilDate>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                nullable: true);
            freezeUntilDate.AddAnnotation("Oracle:ValueGenerationStrategy", OracleValueGenerationStrategy.None);
            freezeUntilDate.AddAnnotation("Relational:ColumnName", "FREEZE_UNTIL_DATE");
            freezeUntilDate.AddAnnotation("Relational:ColumnType", "DATE");

            var lastUpdateDate = runtimeEntityType.AddProperty(
                "LastUpdateDate",
                typeof(DateTime?),
                propertyInfo: typeof(PerAssignmentSupervisorsF).GetProperty("LastUpdateDate", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(PerAssignmentSupervisorsF).GetField("<LastUpdateDate>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                nullable: true);
            lastUpdateDate.AddAnnotation("Oracle:ValueGenerationStrategy", OracleValueGenerationStrategy.None);
            lastUpdateDate.AddAnnotation("Relational:ColumnName", "LAST_UPDATE_DATE");
            lastUpdateDate.AddAnnotation("Relational:ColumnType", "DATE");

            var lastUpdateLogin = runtimeEntityType.AddProperty(
                "LastUpdateLogin",
                typeof(string),
                propertyInfo: typeof(PerAssignmentSupervisorsF).GetProperty("LastUpdateLogin", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(PerAssignmentSupervisorsF).GetField("<LastUpdateLogin>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                nullable: true,
                maxLength: 50,
                unicode: false);
            lastUpdateLogin.AddAnnotation("Oracle:ValueGenerationStrategy", OracleValueGenerationStrategy.None);
            lastUpdateLogin.AddAnnotation("Relational:ColumnName", "LAST_UPDATE_LOGIN");

            var lastUpdatedBy = runtimeEntityType.AddProperty(
                "LastUpdatedBy",
                typeof(string),
                propertyInfo: typeof(PerAssignmentSupervisorsF).GetProperty("LastUpdatedBy", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(PerAssignmentSupervisorsF).GetField("<LastUpdatedBy>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                nullable: true,
                maxLength: 50,
                unicode: false);
            lastUpdatedBy.AddAnnotation("Oracle:ValueGenerationStrategy", OracleValueGenerationStrategy.None);
            lastUpdatedBy.AddAnnotation("Relational:ColumnName", "LAST_UPDATED_BY");

            var managerAssignmentId = runtimeEntityType.AddProperty(
                "ManagerAssignmentId",
                typeof(decimal?),
                propertyInfo: typeof(PerAssignmentSupervisorsF).GetProperty("ManagerAssignmentId", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(PerAssignmentSupervisorsF).GetField("<ManagerAssignmentId>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                nullable: true);
            managerAssignmentId.AddAnnotation("Oracle:ValueGenerationStrategy", OracleValueGenerationStrategy.None);
            managerAssignmentId.AddAnnotation("Relational:ColumnName", "MANAGER_ASSIGNMENT_ID");
            managerAssignmentId.AddAnnotation("Relational:ColumnType", "NUMBER(38)");

            var managerId = runtimeEntityType.AddProperty(
                "ManagerId",
                typeof(decimal?),
                propertyInfo: typeof(PerAssignmentSupervisorsF).GetProperty("ManagerId", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(PerAssignmentSupervisorsF).GetField("<ManagerId>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                nullable: true);
            managerId.AddAnnotation("Oracle:ValueGenerationStrategy", OracleValueGenerationStrategy.None);
            managerId.AddAnnotation("Relational:ColumnName", "MANAGER_ID");
            managerId.AddAnnotation("Relational:ColumnType", "NUMBER(38)");

            var managerType = runtimeEntityType.AddProperty(
                "ManagerType",
                typeof(string),
                propertyInfo: typeof(PerAssignmentSupervisorsF).GetProperty("ManagerType", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(PerAssignmentSupervisorsF).GetField("<ManagerType>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                nullable: true,
                maxLength: 50,
                unicode: false);
            managerType.AddAnnotation("Oracle:ValueGenerationStrategy", OracleValueGenerationStrategy.None);
            managerType.AddAnnotation("Relational:ColumnName", "MANAGER_TYPE");

            var objectVersionNumber = runtimeEntityType.AddProperty(
                "ObjectVersionNumber",
                typeof(string),
                propertyInfo: typeof(PerAssignmentSupervisorsF).GetProperty("ObjectVersionNumber", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(PerAssignmentSupervisorsF).GetField("<ObjectVersionNumber>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                nullable: true,
                maxLength: 50,
                unicode: false);
            objectVersionNumber.AddAnnotation("Oracle:ValueGenerationStrategy", OracleValueGenerationStrategy.None);
            objectVersionNumber.AddAnnotation("Relational:ColumnName", "OBJECT_VERSION_NUMBER");

            var personId = runtimeEntityType.AddProperty(
                "PersonId",
                typeof(decimal?),
                propertyInfo: typeof(PerAssignmentSupervisorsF).GetProperty("PersonId", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(PerAssignmentSupervisorsF).GetField("<PersonId>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                nullable: true);
            personId.AddAnnotation("Oracle:ValueGenerationStrategy", OracleValueGenerationStrategy.None);
            personId.AddAnnotation("Relational:ColumnName", "PERSON_ID");
            personId.AddAnnotation("Relational:ColumnType", "NUMBER(38)");

            var primaryFlag = runtimeEntityType.AddProperty(
                "PrimaryFlag",
                typeof(string),
                propertyInfo: typeof(PerAssignmentSupervisorsF).GetProperty("PrimaryFlag", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(PerAssignmentSupervisorsF).GetField("<PrimaryFlag>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                nullable: true,
                maxLength: 50,
                unicode: false);
            primaryFlag.AddAnnotation("Oracle:ValueGenerationStrategy", OracleValueGenerationStrategy.None);
            primaryFlag.AddAnnotation("Relational:ColumnName", "PRIMARY_FLAG");

            var workingPercentage = runtimeEntityType.AddProperty(
                "WorkingPercentage",
                typeof(string),
                propertyInfo: typeof(PerAssignmentSupervisorsF).GetProperty("WorkingPercentage", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(PerAssignmentSupervisorsF).GetField("<WorkingPercentage>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                nullable: true,
                maxLength: 50,
                unicode: false);
            workingPercentage.AddAnnotation("Oracle:ValueGenerationStrategy", OracleValueGenerationStrategy.None);
            workingPercentage.AddAnnotation("Relational:ColumnName", "WORKING_PERCENTAGE");

            return runtimeEntityType;
        }

        public static void CreateAnnotations(RuntimeEntityType runtimeEntityType)
        {
            runtimeEntityType.AddAnnotation("Relational:FunctionName", null);
            runtimeEntityType.AddAnnotation("Relational:Schema", "FUSION");
            runtimeEntityType.AddAnnotation("Relational:SqlQuery", null);
            runtimeEntityType.AddAnnotation("Relational:TableName", "PER_ASSIGNMENT_SUPERVISORS_F");
            runtimeEntityType.AddAnnotation("Relational:ViewName", null);
            runtimeEntityType.AddAnnotation("Relational:ViewSchema", null);

            Customize(runtimeEntityType);
        }

        static partial void Customize(RuntimeEntityType runtimeEntityType);
    }
}
