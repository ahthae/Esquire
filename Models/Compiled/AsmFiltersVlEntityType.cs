// <auto-generated />
using System;
using System.Reflection;
using Microsoft.EntityFrameworkCore.Metadata;
using Oracle.EntityFrameworkCore.Metadata;
using esquire.Models.Fusion;

#pragma warning disable 219, 612, 618
#nullable enable

namespace esquire.Models.Compiled
{
    internal partial class AsmFiltersVlEntityType
    {
        public static RuntimeEntityType Create(RuntimeModel model, RuntimeEntityType? baseEntityType = null)
        {
            var runtimeEntityType = model.AddEntityType(
                "esquire.Models.Fusion.AsmFiltersVl",
                typeof(AsmFiltersVl),
                baseEntityType);

            var applicationId = runtimeEntityType.AddProperty(
                "ApplicationId",
                typeof(decimal?),
                propertyInfo: typeof(AsmFiltersVl).GetProperty("ApplicationId", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(AsmFiltersVl).GetField("<ApplicationId>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                nullable: true);
            applicationId.AddAnnotation("Oracle:ValueGenerationStrategy", OracleValueGenerationStrategy.None);
            applicationId.AddAnnotation("Relational:ColumnName", "APPLICATION_ID");
            applicationId.AddAnnotation("Relational:ColumnType", "NUMBER(38)");

            var availableFlag = runtimeEntityType.AddProperty(
                "AvailableFlag",
                typeof(string),
                propertyInfo: typeof(AsmFiltersVl).GetProperty("AvailableFlag", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(AsmFiltersVl).GetField("<AvailableFlag>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                nullable: true,
                maxLength: 50,
                unicode: false);
            availableFlag.AddAnnotation("Oracle:ValueGenerationStrategy", OracleValueGenerationStrategy.None);
            availableFlag.AddAnnotation("Relational:ColumnName", "AVAILABLE_FLAG");

            var availableReleaseVersion = runtimeEntityType.AddProperty(
                "AvailableReleaseVersion",
                typeof(string),
                propertyInfo: typeof(AsmFiltersVl).GetProperty("AvailableReleaseVersion", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(AsmFiltersVl).GetField("<AvailableReleaseVersion>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                nullable: true,
                maxLength: 50,
                unicode: false);
            availableReleaseVersion.AddAnnotation("Oracle:ValueGenerationStrategy", OracleValueGenerationStrategy.None);
            availableReleaseVersion.AddAnnotation("Relational:ColumnName", "AVAILABLE_RELEASE_VERSION");

            var businessObjectId = runtimeEntityType.AddProperty(
                "BusinessObjectId",
                typeof(decimal?),
                propertyInfo: typeof(AsmFiltersVl).GetProperty("BusinessObjectId", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(AsmFiltersVl).GetField("<BusinessObjectId>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                nullable: true);
            businessObjectId.AddAnnotation("Oracle:ValueGenerationStrategy", OracleValueGenerationStrategy.None);
            businessObjectId.AddAnnotation("Relational:ColumnName", "BUSINESS_OBJECT_ID");
            businessObjectId.AddAnnotation("Relational:ColumnType", "NUMBER(38)");

            var cfgTemplateId = runtimeEntityType.AddProperty(
                "CfgTemplateId",
                typeof(decimal?),
                propertyInfo: typeof(AsmFiltersVl).GetProperty("CfgTemplateId", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(AsmFiltersVl).GetField("<CfgTemplateId>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                nullable: true);
            cfgTemplateId.AddAnnotation("Oracle:ValueGenerationStrategy", OracleValueGenerationStrategy.None);
            cfgTemplateId.AddAnnotation("Relational:ColumnName", "CFG_TEMPLATE_ID");
            cfgTemplateId.AddAnnotation("Relational:ColumnType", "NUMBER(38)");

            var classification = runtimeEntityType.AddProperty(
                "Classification",
                typeof(string),
                propertyInfo: typeof(AsmFiltersVl).GetProperty("Classification", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(AsmFiltersVl).GetField("<Classification>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                nullable: true,
                maxLength: 50,
                unicode: false);
            classification.AddAnnotation("Oracle:ValueGenerationStrategy", OracleValueGenerationStrategy.None);
            classification.AddAnnotation("Relational:ColumnName", "CLASSIFICATION");

            var createdBy = runtimeEntityType.AddProperty(
                "CreatedBy",
                typeof(string),
                propertyInfo: typeof(AsmFiltersVl).GetProperty("CreatedBy", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(AsmFiltersVl).GetField("<CreatedBy>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                nullable: true,
                maxLength: 50,
                unicode: false);
            createdBy.AddAnnotation("Oracle:ValueGenerationStrategy", OracleValueGenerationStrategy.None);
            createdBy.AddAnnotation("Relational:ColumnName", "CREATED_BY");

            var creationDate = runtimeEntityType.AddProperty(
                "CreationDate",
                typeof(DateTime?),
                propertyInfo: typeof(AsmFiltersVl).GetProperty("CreationDate", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(AsmFiltersVl).GetField("<CreationDate>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                nullable: true);
            creationDate.AddAnnotation("Oracle:ValueGenerationStrategy", OracleValueGenerationStrategy.None);
            creationDate.AddAnnotation("Relational:ColumnName", "CREATION_DATE");
            creationDate.AddAnnotation("Relational:ColumnType", "DATE");

            var dbCacheEnableFlag = runtimeEntityType.AddProperty(
                "DbCacheEnableFlag",
                typeof(string),
                propertyInfo: typeof(AsmFiltersVl).GetProperty("DbCacheEnableFlag", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(AsmFiltersVl).GetField("<DbCacheEnableFlag>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                nullable: true,
                maxLength: 50,
                unicode: false);
            dbCacheEnableFlag.AddAnnotation("Oracle:ValueGenerationStrategy", OracleValueGenerationStrategy.None);
            dbCacheEnableFlag.AddAnnotation("Relational:ColumnName", "DB_CACHE_ENABLE_FLAG");

            var deliveryReleaseVersion = runtimeEntityType.AddProperty(
                "DeliveryReleaseVersion",
                typeof(string),
                propertyInfo: typeof(AsmFiltersVl).GetProperty("DeliveryReleaseVersion", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(AsmFiltersVl).GetField("<DeliveryReleaseVersion>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                nullable: true,
                maxLength: 50,
                unicode: false);
            deliveryReleaseVersion.AddAnnotation("Oracle:ValueGenerationStrategy", OracleValueGenerationStrategy.None);
            deliveryReleaseVersion.AddAnnotation("Relational:ColumnName", "DELIVERY_RELEASE_VERSION");

            var enterpriseId = runtimeEntityType.AddProperty(
                "EnterpriseId",
                typeof(decimal?),
                propertyInfo: typeof(AsmFiltersVl).GetProperty("EnterpriseId", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(AsmFiltersVl).GetField("<EnterpriseId>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                nullable: true);
            enterpriseId.AddAnnotation("Oracle:ValueGenerationStrategy", OracleValueGenerationStrategy.None);
            enterpriseId.AddAnnotation("Relational:ColumnName", "ENTERPRISE_ID");
            enterpriseId.AddAnnotation("Relational:ColumnType", "NUMBER(38)");

            var expirationReleaseVersion = runtimeEntityType.AddProperty(
                "ExpirationReleaseVersion",
                typeof(string),
                propertyInfo: typeof(AsmFiltersVl).GetProperty("ExpirationReleaseVersion", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(AsmFiltersVl).GetField("<ExpirationReleaseVersion>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                nullable: true,
                maxLength: 50,
                unicode: false);
            expirationReleaseVersion.AddAnnotation("Oracle:ValueGenerationStrategy", OracleValueGenerationStrategy.None);
            expirationReleaseVersion.AddAnnotation("Relational:ColumnName", "EXPIRATION_RELEASE_VERSION");

            var extSourceId = runtimeEntityType.AddProperty(
                "ExtSourceId",
                typeof(string),
                propertyInfo: typeof(AsmFiltersVl).GetProperty("ExtSourceId", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(AsmFiltersVl).GetField("<ExtSourceId>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                nullable: true,
                maxLength: 50,
                unicode: false);
            extSourceId.AddAnnotation("Oracle:ValueGenerationStrategy", OracleValueGenerationStrategy.None);
            extSourceId.AddAnnotation("Relational:ColumnName", "EXT_SOURCE_ID");

            var extSourceLastUpdateDate = runtimeEntityType.AddProperty(
                "ExtSourceLastUpdateDate",
                typeof(DateTime?),
                propertyInfo: typeof(AsmFiltersVl).GetProperty("ExtSourceLastUpdateDate", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(AsmFiltersVl).GetField("<ExtSourceLastUpdateDate>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                nullable: true);
            extSourceLastUpdateDate.AddAnnotation("Oracle:ValueGenerationStrategy", OracleValueGenerationStrategy.None);
            extSourceLastUpdateDate.AddAnnotation("Relational:ColumnName", "EXT_SOURCE_LAST_UPDATE_DATE");
            extSourceLastUpdateDate.AddAnnotation("Relational:ColumnType", "DATE");

            var extSourceLastUpdatedBy = runtimeEntityType.AddProperty(
                "ExtSourceLastUpdatedBy",
                typeof(string),
                propertyInfo: typeof(AsmFiltersVl).GetProperty("ExtSourceLastUpdatedBy", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(AsmFiltersVl).GetField("<ExtSourceLastUpdatedBy>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                nullable: true,
                maxLength: 50,
                unicode: false);
            extSourceLastUpdatedBy.AddAnnotation("Oracle:ValueGenerationStrategy", OracleValueGenerationStrategy.None);
            extSourceLastUpdatedBy.AddAnnotation("Relational:ColumnName", "EXT_SOURCE_LAST_UPDATED_BY");

            var extSourceName = runtimeEntityType.AddProperty(
                "ExtSourceName",
                typeof(string),
                propertyInfo: typeof(AsmFiltersVl).GetProperty("ExtSourceName", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(AsmFiltersVl).GetField("<ExtSourceName>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                nullable: true,
                maxLength: 50,
                unicode: false);
            extSourceName.AddAnnotation("Oracle:ValueGenerationStrategy", OracleValueGenerationStrategy.None);
            extSourceName.AddAnnotation("Relational:ColumnName", "EXT_SOURCE_NAME");

            var filterDesc = runtimeEntityType.AddProperty(
                "FilterDesc",
                typeof(string),
                propertyInfo: typeof(AsmFiltersVl).GetProperty("FilterDesc", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(AsmFiltersVl).GetField("<FilterDesc>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                nullable: true,
                maxLength: 300,
                unicode: false);
            filterDesc.AddAnnotation("Oracle:ValueGenerationStrategy", OracleValueGenerationStrategy.None);
            filterDesc.AddAnnotation("Relational:ColumnName", "FILTER_DESC");

            var filterFile = runtimeEntityType.AddProperty(
                "FilterFile",
                typeof(string),
                propertyInfo: typeof(AsmFiltersVl).GetProperty("FilterFile", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(AsmFiltersVl).GetField("<FilterFile>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                nullable: true,
                maxLength: 50,
                unicode: false);
            filterFile.AddAnnotation("Oracle:ValueGenerationStrategy", OracleValueGenerationStrategy.None);
            filterFile.AddAnnotation("Relational:ColumnName", "FILTER_FILE");

            var filterId = runtimeEntityType.AddProperty(
                "FilterId",
                typeof(decimal?),
                propertyInfo: typeof(AsmFiltersVl).GetProperty("FilterId", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(AsmFiltersVl).GetField("<FilterId>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                nullable: true);
            filterId.AddAnnotation("Oracle:ValueGenerationStrategy", OracleValueGenerationStrategy.None);
            filterId.AddAnnotation("Relational:ColumnName", "FILTER_ID");
            filterId.AddAnnotation("Relational:ColumnType", "NUMBER(38)");

            var filterName = runtimeEntityType.AddProperty(
                "FilterName",
                typeof(string),
                propertyInfo: typeof(AsmFiltersVl).GetProperty("FilterName", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(AsmFiltersVl).GetField("<FilterName>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                nullable: true,
                maxLength: 100,
                unicode: false);
            filterName.AddAnnotation("Oracle:ValueGenerationStrategy", OracleValueGenerationStrategy.None);
            filterName.AddAnnotation("Relational:ColumnName", "FILTER_NAME");

            var filterShortName = runtimeEntityType.AddProperty(
                "FilterShortName",
                typeof(string),
                propertyInfo: typeof(AsmFiltersVl).GetProperty("FilterShortName", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(AsmFiltersVl).GetField("<FilterShortName>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                nullable: true,
                maxLength: 100,
                unicode: false);
            filterShortName.AddAnnotation("Oracle:ValueGenerationStrategy", OracleValueGenerationStrategy.None);
            filterShortName.AddAnnotation("Relational:ColumnName", "FILTER_SHORT_NAME");

            var helpTopicId = runtimeEntityType.AddProperty(
                "HelpTopicId",
                typeof(string),
                propertyInfo: typeof(AsmFiltersVl).GetProperty("HelpTopicId", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(AsmFiltersVl).GetField("<HelpTopicId>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                nullable: true,
                maxLength: 100,
                unicode: false);
            helpTopicId.AddAnnotation("Oracle:ValueGenerationStrategy", OracleValueGenerationStrategy.None);
            helpTopicId.AddAnnotation("Relational:ColumnName", "HELP_TOPIC_ID");

            var image = runtimeEntityType.AddProperty(
                "Image",
                typeof(string),
                propertyInfo: typeof(AsmFiltersVl).GetProperty("Image", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(AsmFiltersVl).GetField("<Image>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                nullable: true,
                maxLength: 50,
                unicode: false);
            image.AddAnnotation("Oracle:ValueGenerationStrategy", OracleValueGenerationStrategy.None);
            image.AddAnnotation("Relational:ColumnName", "IMAGE");

            var imageFile = runtimeEntityType.AddProperty(
                "ImageFile",
                typeof(string),
                propertyInfo: typeof(AsmFiltersVl).GetProperty("ImageFile", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(AsmFiltersVl).GetField("<ImageFile>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                nullable: true,
                maxLength: 50,
                unicode: false);
            imageFile.AddAnnotation("Oracle:ValueGenerationStrategy", OracleValueGenerationStrategy.None);
            imageFile.AddAnnotation("Relational:ColumnName", "IMAGE_FILE");

            var lastUpdateDate = runtimeEntityType.AddProperty(
                "LastUpdateDate",
                typeof(DateTime?),
                propertyInfo: typeof(AsmFiltersVl).GetProperty("LastUpdateDate", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(AsmFiltersVl).GetField("<LastUpdateDate>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                nullable: true);
            lastUpdateDate.AddAnnotation("Oracle:ValueGenerationStrategy", OracleValueGenerationStrategy.None);
            lastUpdateDate.AddAnnotation("Relational:ColumnName", "LAST_UPDATE_DATE");
            lastUpdateDate.AddAnnotation("Relational:ColumnType", "DATE");

            var lastUpdateLogin = runtimeEntityType.AddProperty(
                "LastUpdateLogin",
                typeof(decimal?),
                propertyInfo: typeof(AsmFiltersVl).GetProperty("LastUpdateLogin", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(AsmFiltersVl).GetField("<LastUpdateLogin>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                nullable: true);
            lastUpdateLogin.AddAnnotation("Oracle:ValueGenerationStrategy", OracleValueGenerationStrategy.None);
            lastUpdateLogin.AddAnnotation("Relational:ColumnName", "LAST_UPDATE_LOGIN");
            lastUpdateLogin.AddAnnotation("Relational:ColumnType", "NUMBER(38)");

            var lastUpdatedBy = runtimeEntityType.AddProperty(
                "LastUpdatedBy",
                typeof(string),
                propertyInfo: typeof(AsmFiltersVl).GetProperty("LastUpdatedBy", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(AsmFiltersVl).GetField("<LastUpdatedBy>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                nullable: true,
                maxLength: 50,
                unicode: false);
            lastUpdatedBy.AddAnnotation("Oracle:ValueGenerationStrategy", OracleValueGenerationStrategy.None);
            lastUpdatedBy.AddAnnotation("Relational:ColumnName", "LAST_UPDATED_BY");

            var moduleId = runtimeEntityType.AddProperty(
                "ModuleId",
                typeof(string),
                propertyInfo: typeof(AsmFiltersVl).GetProperty("ModuleId", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(AsmFiltersVl).GetField("<ModuleId>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                nullable: true,
                maxLength: 50,
                unicode: false);
            moduleId.AddAnnotation("Oracle:ValueGenerationStrategy", OracleValueGenerationStrategy.None);
            moduleId.AddAnnotation("Relational:ColumnName", "MODULE_ID");

            var objectVersionNumber = runtimeEntityType.AddProperty(
                "ObjectVersionNumber",
                typeof(decimal?),
                propertyInfo: typeof(AsmFiltersVl).GetProperty("ObjectVersionNumber", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(AsmFiltersVl).GetField("<ObjectVersionNumber>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                nullable: true);
            objectVersionNumber.AddAnnotation("Oracle:ValueGenerationStrategy", OracleValueGenerationStrategy.None);
            objectVersionNumber.AddAnnotation("Relational:ColumnName", "OBJECT_VERSION_NUMBER");
            objectVersionNumber.AddAnnotation("Relational:ColumnType", "NUMBER(38)");

            var optInTaskShortName = runtimeEntityType.AddProperty(
                "OptInTaskShortName",
                typeof(string),
                propertyInfo: typeof(AsmFiltersVl).GetProperty("OptInTaskShortName", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(AsmFiltersVl).GetField("<OptInTaskShortName>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                nullable: true,
                maxLength: 50,
                unicode: false);
            optInTaskShortName.AddAnnotation("Oracle:ValueGenerationStrategy", OracleValueGenerationStrategy.None);
            optInTaskShortName.AddAnnotation("Relational:ColumnName", "OPT_IN_TASK_SHORT_NAME");

            var optionTypeCode = runtimeEntityType.AddProperty(
                "OptionTypeCode",
                typeof(string),
                propertyInfo: typeof(AsmFiltersVl).GetProperty("OptionTypeCode", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(AsmFiltersVl).GetField("<OptionTypeCode>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                nullable: true,
                maxLength: 50,
                unicode: false);
            optionTypeCode.AddAnnotation("Oracle:ValueGenerationStrategy", OracleValueGenerationStrategy.None);
            optionTypeCode.AddAnnotation("Relational:ColumnName", "OPTION_TYPE_CODE");

            var owner = runtimeEntityType.AddProperty(
                "Owner",
                typeof(string),
                propertyInfo: typeof(AsmFiltersVl).GetProperty("Owner", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(AsmFiltersVl).GetField("<Owner>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                nullable: true,
                maxLength: 50,
                unicode: false);
            owner.AddAnnotation("Oracle:ValueGenerationStrategy", OracleValueGenerationStrategy.None);
            owner.AddAnnotation("Relational:ColumnName", "OWNER");

            var promoCodeFlag = runtimeEntityType.AddProperty(
                "PromoCodeFlag",
                typeof(string),
                propertyInfo: typeof(AsmFiltersVl).GetProperty("PromoCodeFlag", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(AsmFiltersVl).GetField("<PromoCodeFlag>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                nullable: true,
                maxLength: 50,
                unicode: false);
            promoCodeFlag.AddAnnotation("Oracle:ValueGenerationStrategy", OracleValueGenerationStrategy.None);
            promoCodeFlag.AddAnnotation("Relational:ColumnName", "PROMO_CODE_FLAG");

            var prompt = runtimeEntityType.AddProperty(
                "Prompt",
                typeof(string),
                propertyInfo: typeof(AsmFiltersVl).GetProperty("Prompt", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(AsmFiltersVl).GetField("<Prompt>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                nullable: true,
                maxLength: 300,
                unicode: false);
            prompt.AddAnnotation("Oracle:ValueGenerationStrategy", OracleValueGenerationStrategy.None);
            prompt.AddAnnotation("Relational:ColumnName", "PROMPT");

            var publishInWhatsnewFlag = runtimeEntityType.AddProperty(
                "PublishInWhatsnewFlag",
                typeof(string),
                propertyInfo: typeof(AsmFiltersVl).GetProperty("PublishInWhatsnewFlag", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(AsmFiltersVl).GetField("<PublishInWhatsnewFlag>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                nullable: true,
                maxLength: 50,
                unicode: false);
            publishInWhatsnewFlag.AddAnnotation("Oracle:ValueGenerationStrategy", OracleValueGenerationStrategy.None);
            publishInWhatsnewFlag.AddAnnotation("Relational:ColumnName", "PUBLISH_IN_WHATSNEW_FLAG");

            var publishedDate = runtimeEntityType.AddProperty(
                "PublishedDate",
                typeof(DateTime?),
                propertyInfo: typeof(AsmFiltersVl).GetProperty("PublishedDate", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(AsmFiltersVl).GetField("<PublishedDate>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                nullable: true);
            publishedDate.AddAnnotation("Oracle:ValueGenerationStrategy", OracleValueGenerationStrategy.None);
            publishedDate.AddAnnotation("Relational:ColumnName", "PUBLISHED_DATE");
            publishedDate.AddAnnotation("Relational:ColumnType", "DATE");

            var quickSetupTaskListId = runtimeEntityType.AddProperty(
                "QuickSetupTaskListId",
                typeof(decimal?),
                propertyInfo: typeof(AsmFiltersVl).GetProperty("QuickSetupTaskListId", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(AsmFiltersVl).GetField("<QuickSetupTaskListId>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                nullable: true);
            quickSetupTaskListId.AddAnnotation("Oracle:ValueGenerationStrategy", OracleValueGenerationStrategy.None);
            quickSetupTaskListId.AddAnnotation("Relational:ColumnName", "QUICK_SETUP_TASK_LIST_ID");
            quickSetupTaskListId.AddAnnotation("Relational:ColumnType", "NUMBER(38)");

            var serviceId = runtimeEntityType.AddProperty(
                "ServiceId",
                typeof(decimal?),
                propertyInfo: typeof(AsmFiltersVl).GetProperty("ServiceId", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(AsmFiltersVl).GetField("<ServiceId>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                nullable: true);
            serviceId.AddAnnotation("Oracle:ValueGenerationStrategy", OracleValueGenerationStrategy.None);
            serviceId.AddAnnotation("Relational:ColumnName", "SERVICE_ID");
            serviceId.AddAnnotation("Relational:ColumnType", "NUMBER(38)");

            var taskListId = runtimeEntityType.AddProperty(
                "TaskListId",
                typeof(decimal?),
                propertyInfo: typeof(AsmFiltersVl).GetProperty("TaskListId", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(AsmFiltersVl).GetField("<TaskListId>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                nullable: true);
            taskListId.AddAnnotation("Oracle:ValueGenerationStrategy", OracleValueGenerationStrategy.None);
            taskListId.AddAnnotation("Relational:ColumnName", "TASK_LIST_ID");
            taskListId.AddAnnotation("Relational:ColumnType", "NUMBER(38)");

            var usageState = runtimeEntityType.AddProperty(
                "UsageState",
                typeof(string),
                propertyInfo: typeof(AsmFiltersVl).GetProperty("UsageState", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(AsmFiltersVl).GetField("<UsageState>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                nullable: true,
                maxLength: 50,
                unicode: false);
            usageState.AddAnnotation("Oracle:ValueGenerationStrategy", OracleValueGenerationStrategy.None);
            usageState.AddAnnotation("Relational:ColumnName", "USAGE_STATE");

            var whatsnewReleaseVersion = runtimeEntityType.AddProperty(
                "WhatsnewReleaseVersion",
                typeof(string),
                propertyInfo: typeof(AsmFiltersVl).GetProperty("WhatsnewReleaseVersion", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(AsmFiltersVl).GetField("<WhatsnewReleaseVersion>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                nullable: true,
                maxLength: 50,
                unicode: false);
            whatsnewReleaseVersion.AddAnnotation("Oracle:ValueGenerationStrategy", OracleValueGenerationStrategy.None);
            whatsnewReleaseVersion.AddAnnotation("Relational:ColumnName", "WHATSNEW_RELEASE_VERSION");

            return runtimeEntityType;
        }

        public static void CreateAnnotations(RuntimeEntityType runtimeEntityType)
        {
            runtimeEntityType.AddAnnotation("Relational:FunctionName", null);
            runtimeEntityType.AddAnnotation("Relational:Schema", "FUSION");
            runtimeEntityType.AddAnnotation("Relational:SqlQuery", null);
            runtimeEntityType.AddAnnotation("Relational:TableName", "ASM_FILTERS_VL");
            runtimeEntityType.AddAnnotation("Relational:ViewName", null);
            runtimeEntityType.AddAnnotation("Relational:ViewSchema", null);

            Customize(runtimeEntityType);
        }

        static partial void Customize(RuntimeEntityType runtimeEntityType);
    }
}
