// <auto-generated />
using System;
using System.Reflection;
using Microsoft.EntityFrameworkCore.Metadata;
using Oracle.EntityFrameworkCore.Metadata;
using esquire.Models.Fusion;

#pragma warning disable 219, 612, 618
#nullable enable

namespace esquire.Models.Compiled
{
    internal partial class AsmFilterOptionsVlEntityType
    {
        public static RuntimeEntityType Create(RuntimeModel model, RuntimeEntityType? baseEntityType = null)
        {
            var runtimeEntityType = model.AddEntityType(
                "esquire.Models.Fusion.AsmFilterOptionsVl",
                typeof(AsmFilterOptionsVl),
                baseEntityType);

            var applicationId = runtimeEntityType.AddProperty(
                "ApplicationId",
                typeof(decimal?),
                propertyInfo: typeof(AsmFilterOptionsVl).GetProperty("ApplicationId", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(AsmFilterOptionsVl).GetField("<ApplicationId>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                nullable: true);
            applicationId.AddAnnotation("Oracle:ValueGenerationStrategy", OracleValueGenerationStrategy.None);
            applicationId.AddAnnotation("Relational:ColumnName", "APPLICATION_ID");
            applicationId.AddAnnotation("Relational:ColumnType", "NUMBER(38)");

            var availableFlag = runtimeEntityType.AddProperty(
                "AvailableFlag",
                typeof(string),
                propertyInfo: typeof(AsmFilterOptionsVl).GetProperty("AvailableFlag", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(AsmFilterOptionsVl).GetField("<AvailableFlag>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                nullable: true,
                maxLength: 50,
                unicode: false);
            availableFlag.AddAnnotation("Oracle:ValueGenerationStrategy", OracleValueGenerationStrategy.None);
            availableFlag.AddAnnotation("Relational:ColumnName", "AVAILABLE_FLAG");

            var availableReleaseVersion = runtimeEntityType.AddProperty(
                "AvailableReleaseVersion",
                typeof(string),
                propertyInfo: typeof(AsmFilterOptionsVl).GetProperty("AvailableReleaseVersion", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(AsmFilterOptionsVl).GetField("<AvailableReleaseVersion>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                nullable: true,
                maxLength: 50,
                unicode: false);
            availableReleaseVersion.AddAnnotation("Oracle:ValueGenerationStrategy", OracleValueGenerationStrategy.None);
            availableReleaseVersion.AddAnnotation("Relational:ColumnName", "AVAILABLE_RELEASE_VERSION");

            var checkedFlag = runtimeEntityType.AddProperty(
                "CheckedFlag",
                typeof(string),
                propertyInfo: typeof(AsmFilterOptionsVl).GetProperty("CheckedFlag", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(AsmFilterOptionsVl).GetField("<CheckedFlag>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                nullable: true,
                maxLength: 50,
                unicode: false);
            checkedFlag.AddAnnotation("Oracle:ValueGenerationStrategy", OracleValueGenerationStrategy.None);
            checkedFlag.AddAnnotation("Relational:ColumnName", "CHECKED_FLAG");

            var createdBy = runtimeEntityType.AddProperty(
                "CreatedBy",
                typeof(string),
                propertyInfo: typeof(AsmFilterOptionsVl).GetProperty("CreatedBy", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(AsmFilterOptionsVl).GetField("<CreatedBy>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                nullable: true,
                maxLength: 50,
                unicode: false);
            createdBy.AddAnnotation("Oracle:ValueGenerationStrategy", OracleValueGenerationStrategy.None);
            createdBy.AddAnnotation("Relational:ColumnName", "CREATED_BY");

            var creationDate = runtimeEntityType.AddProperty(
                "CreationDate",
                typeof(DateTime?),
                propertyInfo: typeof(AsmFilterOptionsVl).GetProperty("CreationDate", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(AsmFilterOptionsVl).GetField("<CreationDate>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                nullable: true);
            creationDate.AddAnnotation("Oracle:ValueGenerationStrategy", OracleValueGenerationStrategy.None);
            creationDate.AddAnnotation("Relational:ColumnName", "CREATION_DATE");
            creationDate.AddAnnotation("Relational:ColumnType", "DATE");

            var defaultOptionFlag = runtimeEntityType.AddProperty(
                "DefaultOptionFlag",
                typeof(string),
                propertyInfo: typeof(AsmFilterOptionsVl).GetProperty("DefaultOptionFlag", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(AsmFilterOptionsVl).GetField("<DefaultOptionFlag>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                nullable: true,
                maxLength: 50,
                unicode: false);
            defaultOptionFlag.AddAnnotation("Oracle:ValueGenerationStrategy", OracleValueGenerationStrategy.None);
            defaultOptionFlag.AddAnnotation("Relational:ColumnName", "DEFAULT_OPTION_FLAG");

            var defaultOptionOnUpgradeFlag = runtimeEntityType.AddProperty(
                "DefaultOptionOnUpgradeFlag",
                typeof(string),
                propertyInfo: typeof(AsmFilterOptionsVl).GetProperty("DefaultOptionOnUpgradeFlag", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(AsmFilterOptionsVl).GetField("<DefaultOptionOnUpgradeFlag>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                nullable: true,
                maxLength: 50,
                unicode: false);
            defaultOptionOnUpgradeFlag.AddAnnotation("Oracle:ValueGenerationStrategy", OracleValueGenerationStrategy.None);
            defaultOptionOnUpgradeFlag.AddAnnotation("Relational:ColumnName", "DEFAULT_OPTION_ON_UPGRADE_FLAG");

            var deliveryReleaseVersion = runtimeEntityType.AddProperty(
                "DeliveryReleaseVersion",
                typeof(string),
                propertyInfo: typeof(AsmFilterOptionsVl).GetProperty("DeliveryReleaseVersion", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(AsmFilterOptionsVl).GetField("<DeliveryReleaseVersion>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                nullable: true,
                maxLength: 50,
                unicode: false);
            deliveryReleaseVersion.AddAnnotation("Oracle:ValueGenerationStrategy", OracleValueGenerationStrategy.None);
            deliveryReleaseVersion.AddAnnotation("Relational:ColumnName", "DELIVERY_RELEASE_VERSION");

            var displaySequence = runtimeEntityType.AddProperty(
                "DisplaySequence",
                typeof(decimal?),
                propertyInfo: typeof(AsmFilterOptionsVl).GetProperty("DisplaySequence", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(AsmFilterOptionsVl).GetField("<DisplaySequence>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                nullable: true);
            displaySequence.AddAnnotation("Oracle:ValueGenerationStrategy", OracleValueGenerationStrategy.None);
            displaySequence.AddAnnotation("Relational:ColumnName", "DISPLAY_SEQUENCE");
            displaySequence.AddAnnotation("Relational:ColumnType", "NUMBER(38)");

            var enterpriseId = runtimeEntityType.AddProperty(
                "EnterpriseId",
                typeof(decimal?),
                propertyInfo: typeof(AsmFilterOptionsVl).GetProperty("EnterpriseId", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(AsmFilterOptionsVl).GetField("<EnterpriseId>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                nullable: true);
            enterpriseId.AddAnnotation("Oracle:ValueGenerationStrategy", OracleValueGenerationStrategy.None);
            enterpriseId.AddAnnotation("Relational:ColumnName", "ENTERPRISE_ID");
            enterpriseId.AddAnnotation("Relational:ColumnType", "NUMBER(38)");

            var expirationReleaseVersion = runtimeEntityType.AddProperty(
                "ExpirationReleaseVersion",
                typeof(string),
                propertyInfo: typeof(AsmFilterOptionsVl).GetProperty("ExpirationReleaseVersion", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(AsmFilterOptionsVl).GetField("<ExpirationReleaseVersion>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                nullable: true,
                maxLength: 50,
                unicode: false);
            expirationReleaseVersion.AddAnnotation("Oracle:ValueGenerationStrategy", OracleValueGenerationStrategy.None);
            expirationReleaseVersion.AddAnnotation("Relational:ColumnName", "EXPIRATION_RELEASE_VERSION");

            var filterId = runtimeEntityType.AddProperty(
                "FilterId",
                typeof(decimal?),
                propertyInfo: typeof(AsmFilterOptionsVl).GetProperty("FilterId", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(AsmFilterOptionsVl).GetField("<FilterId>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                nullable: true);
            filterId.AddAnnotation("Oracle:ValueGenerationStrategy", OracleValueGenerationStrategy.None);
            filterId.AddAnnotation("Relational:ColumnName", "FILTER_ID");
            filterId.AddAnnotation("Relational:ColumnType", "NUMBER(38)");

            var filterOptionDesc = runtimeEntityType.AddProperty(
                "FilterOptionDesc",
                typeof(string),
                propertyInfo: typeof(AsmFilterOptionsVl).GetProperty("FilterOptionDesc", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(AsmFilterOptionsVl).GetField("<FilterOptionDesc>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                nullable: true,
                maxLength: 400,
                unicode: false);
            filterOptionDesc.AddAnnotation("Oracle:ValueGenerationStrategy", OracleValueGenerationStrategy.None);
            filterOptionDesc.AddAnnotation("Relational:ColumnName", "FILTER_OPTION_DESC");

            var filterOptionId = runtimeEntityType.AddProperty(
                "FilterOptionId",
                typeof(decimal?),
                propertyInfo: typeof(AsmFilterOptionsVl).GetProperty("FilterOptionId", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(AsmFilterOptionsVl).GetField("<FilterOptionId>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                nullable: true);
            filterOptionId.AddAnnotation("Oracle:ValueGenerationStrategy", OracleValueGenerationStrategy.None);
            filterOptionId.AddAnnotation("Relational:ColumnName", "FILTER_OPTION_ID");
            filterOptionId.AddAnnotation("Relational:ColumnType", "NUMBER(38)");

            var filterOptionName = runtimeEntityType.AddProperty(
                "FilterOptionName",
                typeof(string),
                propertyInfo: typeof(AsmFilterOptionsVl).GetProperty("FilterOptionName", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(AsmFilterOptionsVl).GetField("<FilterOptionName>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                nullable: true,
                maxLength: 100,
                unicode: false);
            filterOptionName.AddAnnotation("Oracle:ValueGenerationStrategy", OracleValueGenerationStrategy.None);
            filterOptionName.AddAnnotation("Relational:ColumnName", "FILTER_OPTION_NAME");

            var filterOptionShortName = runtimeEntityType.AddProperty(
                "FilterOptionShortName",
                typeof(string),
                propertyInfo: typeof(AsmFilterOptionsVl).GetProperty("FilterOptionShortName", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(AsmFilterOptionsVl).GetField("<FilterOptionShortName>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                nullable: true,
                maxLength: 150,
                unicode: false);
            filterOptionShortName.AddAnnotation("Oracle:ValueGenerationStrategy", OracleValueGenerationStrategy.None);
            filterOptionShortName.AddAnnotation("Relational:ColumnName", "FILTER_OPTION_SHORT_NAME");

            var lastUpdateDate = runtimeEntityType.AddProperty(
                "LastUpdateDate",
                typeof(DateTime?),
                propertyInfo: typeof(AsmFilterOptionsVl).GetProperty("LastUpdateDate", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(AsmFilterOptionsVl).GetField("<LastUpdateDate>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                nullable: true);
            lastUpdateDate.AddAnnotation("Oracle:ValueGenerationStrategy", OracleValueGenerationStrategy.None);
            lastUpdateDate.AddAnnotation("Relational:ColumnName", "LAST_UPDATE_DATE");
            lastUpdateDate.AddAnnotation("Relational:ColumnType", "DATE");

            var lastUpdateLogin = runtimeEntityType.AddProperty(
                "LastUpdateLogin",
                typeof(string),
                propertyInfo: typeof(AsmFilterOptionsVl).GetProperty("LastUpdateLogin", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(AsmFilterOptionsVl).GetField("<LastUpdateLogin>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                nullable: true,
                maxLength: 50,
                unicode: false);
            lastUpdateLogin.AddAnnotation("Oracle:ValueGenerationStrategy", OracleValueGenerationStrategy.None);
            lastUpdateLogin.AddAnnotation("Relational:ColumnName", "LAST_UPDATE_LOGIN");

            var lastUpdatedBy = runtimeEntityType.AddProperty(
                "LastUpdatedBy",
                typeof(string),
                propertyInfo: typeof(AsmFilterOptionsVl).GetProperty("LastUpdatedBy", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(AsmFilterOptionsVl).GetField("<LastUpdatedBy>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                nullable: true,
                maxLength: 50,
                unicode: false);
            lastUpdatedBy.AddAnnotation("Oracle:ValueGenerationStrategy", OracleValueGenerationStrategy.None);
            lastUpdatedBy.AddAnnotation("Relational:ColumnName", "LAST_UPDATED_BY");

            var moduleId = runtimeEntityType.AddProperty(
                "ModuleId",
                typeof(string),
                propertyInfo: typeof(AsmFilterOptionsVl).GetProperty("ModuleId", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(AsmFilterOptionsVl).GetField("<ModuleId>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                nullable: true,
                maxLength: 50,
                unicode: false);
            moduleId.AddAnnotation("Oracle:ValueGenerationStrategy", OracleValueGenerationStrategy.None);
            moduleId.AddAnnotation("Relational:ColumnName", "MODULE_ID");

            var noneChoiceFlag = runtimeEntityType.AddProperty(
                "NoneChoiceFlag",
                typeof(string),
                propertyInfo: typeof(AsmFilterOptionsVl).GetProperty("NoneChoiceFlag", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(AsmFilterOptionsVl).GetField("<NoneChoiceFlag>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                nullable: true,
                maxLength: 50,
                unicode: false);
            noneChoiceFlag.AddAnnotation("Oracle:ValueGenerationStrategy", OracleValueGenerationStrategy.None);
            noneChoiceFlag.AddAnnotation("Relational:ColumnName", "NONE_CHOICE_FLAG");

            var objectVersionNumber = runtimeEntityType.AddProperty(
                "ObjectVersionNumber",
                typeof(decimal?),
                propertyInfo: typeof(AsmFilterOptionsVl).GetProperty("ObjectVersionNumber", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(AsmFilterOptionsVl).GetField("<ObjectVersionNumber>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                nullable: true);
            objectVersionNumber.AddAnnotation("Oracle:ValueGenerationStrategy", OracleValueGenerationStrategy.None);
            objectVersionNumber.AddAnnotation("Relational:ColumnName", "OBJECT_VERSION_NUMBER");
            objectVersionNumber.AddAnnotation("Relational:ColumnType", "NUMBER(38)");

            var provisionConfigShortName = runtimeEntityType.AddProperty(
                "ProvisionConfigShortName",
                typeof(string),
                propertyInfo: typeof(AsmFilterOptionsVl).GetProperty("ProvisionConfigShortName", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(AsmFilterOptionsVl).GetField("<ProvisionConfigShortName>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                nullable: true,
                maxLength: 50,
                unicode: false);
            provisionConfigShortName.AddAnnotation("Oracle:ValueGenerationStrategy", OracleValueGenerationStrategy.None);
            provisionConfigShortName.AddAnnotation("Relational:ColumnName", "PROVISION_CONFIG_SHORT_NAME");

            var publishInWhatsnewFlag = runtimeEntityType.AddProperty(
                "PublishInWhatsnewFlag",
                typeof(string),
                propertyInfo: typeof(AsmFilterOptionsVl).GetProperty("PublishInWhatsnewFlag", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(AsmFilterOptionsVl).GetField("<PublishInWhatsnewFlag>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                nullable: true,
                maxLength: 50,
                unicode: false);
            publishInWhatsnewFlag.AddAnnotation("Oracle:ValueGenerationStrategy", OracleValueGenerationStrategy.None);
            publishInWhatsnewFlag.AddAnnotation("Relational:ColumnName", "PUBLISH_IN_WHATSNEW_FLAG");

            var whatsnewReleaseVersion = runtimeEntityType.AddProperty(
                "WhatsnewReleaseVersion",
                typeof(string),
                propertyInfo: typeof(AsmFilterOptionsVl).GetProperty("WhatsnewReleaseVersion", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(AsmFilterOptionsVl).GetField("<WhatsnewReleaseVersion>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                nullable: true,
                maxLength: 50,
                unicode: false);
            whatsnewReleaseVersion.AddAnnotation("Oracle:ValueGenerationStrategy", OracleValueGenerationStrategy.None);
            whatsnewReleaseVersion.AddAnnotation("Relational:ColumnName", "WHATSNEW_RELEASE_VERSION");

            return runtimeEntityType;
        }

        public static void CreateAnnotations(RuntimeEntityType runtimeEntityType)
        {
            runtimeEntityType.AddAnnotation("Relational:FunctionName", null);
            runtimeEntityType.AddAnnotation("Relational:Schema", "FUSION");
            runtimeEntityType.AddAnnotation("Relational:SqlQuery", null);
            runtimeEntityType.AddAnnotation("Relational:TableName", "ASM_FILTER_OPTIONS_VL");
            runtimeEntityType.AddAnnotation("Relational:ViewName", null);
            runtimeEntityType.AddAnnotation("Relational:ViewSchema", null);

            Customize(runtimeEntityType);
        }

        static partial void Customize(RuntimeEntityType runtimeEntityType);
    }
}
