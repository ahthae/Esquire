// <auto-generated />
using System;
using System.Reflection;
using Microsoft.EntityFrameworkCore.Metadata;
using Oracle.EntityFrameworkCore.Metadata;
using esquire.Models.Fusion;

#pragma warning disable 219, 612, 618
#nullable enable

namespace esquire.Models.Compiled
{
    internal partial class FndLookupValuesVlEntityType
    {
        public static RuntimeEntityType Create(RuntimeModel model, RuntimeEntityType? baseEntityType = null)
        {
            var runtimeEntityType = model.AddEntityType(
                "esquire.Models.Fusion.FndLookupValuesVl",
                typeof(FndLookupValuesVl),
                baseEntityType);

            var createdByUserId = runtimeEntityType.AddProperty(
                "CreatedByUserId",
                typeof(decimal?),
                propertyInfo: typeof(FndLookupValuesVl).GetProperty("CreatedByUserId", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(FndLookupValuesVl).GetField("<CreatedByUserId>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                nullable: true);
            createdByUserId.AddAnnotation("Oracle:ValueGenerationStrategy", OracleValueGenerationStrategy.None);
            createdByUserId.AddAnnotation("Relational:ColumnName", "CREATED_BY_USER_ID");
            createdByUserId.AddAnnotation("Relational:ColumnType", "NUMBER(38)");

            var creationDate = runtimeEntityType.AddProperty(
                "CreationDate",
                typeof(DateTime?),
                propertyInfo: typeof(FndLookupValuesVl).GetProperty("CreationDate", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(FndLookupValuesVl).GetField("<CreationDate>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                nullable: true);
            creationDate.AddAnnotation("Oracle:ValueGenerationStrategy", OracleValueGenerationStrategy.None);
            creationDate.AddAnnotation("Relational:ColumnName", "CREATION_DATE");
            creationDate.AddAnnotation("Relational:ColumnType", "DATE");

            var endDateActive = runtimeEntityType.AddProperty(
                "EndDateActive",
                typeof(DateTime?),
                propertyInfo: typeof(FndLookupValuesVl).GetProperty("EndDateActive", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(FndLookupValuesVl).GetField("<EndDateActive>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                nullable: true);
            endDateActive.AddAnnotation("Oracle:ValueGenerationStrategy", OracleValueGenerationStrategy.None);
            endDateActive.AddAnnotation("Relational:ColumnName", "END_DATE_ACTIVE");
            endDateActive.AddAnnotation("Relational:ColumnType", "DATE");

            var lastUpdateDate = runtimeEntityType.AddProperty(
                "LastUpdateDate",
                typeof(DateTime?),
                propertyInfo: typeof(FndLookupValuesVl).GetProperty("LastUpdateDate", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(FndLookupValuesVl).GetField("<LastUpdateDate>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                nullable: true);
            lastUpdateDate.AddAnnotation("Oracle:ValueGenerationStrategy", OracleValueGenerationStrategy.None);
            lastUpdateDate.AddAnnotation("Relational:ColumnName", "LAST_UPDATE_DATE");
            lastUpdateDate.AddAnnotation("Relational:ColumnType", "DATE");

            var lastUpdatedByUserId = runtimeEntityType.AddProperty(
                "LastUpdatedByUserId",
                typeof(decimal?),
                propertyInfo: typeof(FndLookupValuesVl).GetProperty("LastUpdatedByUserId", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(FndLookupValuesVl).GetField("<LastUpdatedByUserId>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                nullable: true);
            lastUpdatedByUserId.AddAnnotation("Oracle:ValueGenerationStrategy", OracleValueGenerationStrategy.None);
            lastUpdatedByUserId.AddAnnotation("Relational:ColumnName", "LAST_UPDATED_BY_USER_ID");
            lastUpdatedByUserId.AddAnnotation("Relational:ColumnType", "NUMBER(38)");

            var lookupCode = runtimeEntityType.AddProperty(
                "LookupCode",
                typeof(string),
                propertyInfo: typeof(FndLookupValuesVl).GetProperty("LookupCode", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(FndLookupValuesVl).GetField("<LookupCode>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                nullable: true,
                maxLength: 50,
                unicode: false);
            lookupCode.AddAnnotation("Oracle:ValueGenerationStrategy", OracleValueGenerationStrategy.None);
            lookupCode.AddAnnotation("Relational:ColumnName", "LOOKUP_CODE");

            var lookupType = runtimeEntityType.AddProperty(
                "LookupType",
                typeof(string),
                propertyInfo: typeof(FndLookupValuesVl).GetProperty("LookupType", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(FndLookupValuesVl).GetField("<LookupType>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                nullable: true,
                maxLength: 50,
                unicode: false);
            lookupType.AddAnnotation("Oracle:ValueGenerationStrategy", OracleValueGenerationStrategy.None);
            lookupType.AddAnnotation("Relational:ColumnName", "LOOKUP_TYPE");

            var meaning = runtimeEntityType.AddProperty(
                "Meaning",
                typeof(string),
                propertyInfo: typeof(FndLookupValuesVl).GetProperty("Meaning", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(FndLookupValuesVl).GetField("<Meaning>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                nullable: true,
                maxLength: 100,
                unicode: false);
            meaning.AddAnnotation("Oracle:ValueGenerationStrategy", OracleValueGenerationStrategy.None);
            meaning.AddAnnotation("Relational:ColumnName", "MEANING");

            var setId = runtimeEntityType.AddProperty(
                "SetId",
                typeof(decimal?),
                propertyInfo: typeof(FndLookupValuesVl).GetProperty("SetId", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(FndLookupValuesVl).GetField("<SetId>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                nullable: true);
            setId.AddAnnotation("Oracle:ValueGenerationStrategy", OracleValueGenerationStrategy.None);
            setId.AddAnnotation("Relational:ColumnName", "SET_ID");
            setId.AddAnnotation("Relational:ColumnType", "NUMBER(38)");

            var startDateActive = runtimeEntityType.AddProperty(
                "StartDateActive",
                typeof(DateTime?),
                propertyInfo: typeof(FndLookupValuesVl).GetProperty("StartDateActive", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(FndLookupValuesVl).GetField("<StartDateActive>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                nullable: true);
            startDateActive.AddAnnotation("Oracle:ValueGenerationStrategy", OracleValueGenerationStrategy.None);
            startDateActive.AddAnnotation("Relational:ColumnName", "START_DATE_ACTIVE");
            startDateActive.AddAnnotation("Relational:ColumnType", "DATE");

            var viewApplicationId = runtimeEntityType.AddProperty(
                "ViewApplicationId",
                typeof(decimal?),
                propertyInfo: typeof(FndLookupValuesVl).GetProperty("ViewApplicationId", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(FndLookupValuesVl).GetField("<ViewApplicationId>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                nullable: true);
            viewApplicationId.AddAnnotation("Oracle:ValueGenerationStrategy", OracleValueGenerationStrategy.None);
            viewApplicationId.AddAnnotation("Relational:ColumnName", "VIEW_APPLICATION_ID");
            viewApplicationId.AddAnnotation("Relational:ColumnType", "NUMBER(38)");

            return runtimeEntityType;
        }

        public static void CreateAnnotations(RuntimeEntityType runtimeEntityType)
        {
            runtimeEntityType.AddAnnotation("Relational:FunctionName", null);
            runtimeEntityType.AddAnnotation("Relational:Schema", "FUSION");
            runtimeEntityType.AddAnnotation("Relational:SqlQuery", null);
            runtimeEntityType.AddAnnotation("Relational:TableName", "FND_LOOKUP_VALUES_VL");
            runtimeEntityType.AddAnnotation("Relational:ViewName", null);
            runtimeEntityType.AddAnnotation("Relational:ViewSchema", null);

            Customize(runtimeEntityType);
        }

        static partial void Customize(RuntimeEntityType runtimeEntityType);
    }
}
