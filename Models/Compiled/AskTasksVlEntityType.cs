// <auto-generated />
using System;
using System.Reflection;
using Microsoft.EntityFrameworkCore.Metadata;
using Oracle.EntityFrameworkCore.Metadata;
using esquire.Models.Fusion;

#pragma warning disable 219, 612, 618
#nullable enable

namespace esquire.Models.Compiled
{
    internal partial class AskTasksVlEntityType
    {
        public static RuntimeEntityType Create(RuntimeModel model, RuntimeEntityType? baseEntityType = null)
        {
            var runtimeEntityType = model.AddEntityType(
                "esquire.Models.Fusion.AskTasksVl",
                typeof(AskTasksVl),
                baseEntityType);

            var adfTaskFlow = runtimeEntityType.AddProperty(
                "AdfTaskFlow",
                typeof(string),
                propertyInfo: typeof(AskTasksVl).GetProperty("AdfTaskFlow", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(AskTasksVl).GetField("<AdfTaskFlow>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                nullable: true,
                maxLength: 250,
                unicode: false);
            adfTaskFlow.AddAnnotation("Oracle:ValueGenerationStrategy", OracleValueGenerationStrategy.None);
            adfTaskFlow.AddAnnotation("Relational:ColumnName", "ADF_TASK_FLOW");

            var applicationId = runtimeEntityType.AddProperty(
                "ApplicationId",
                typeof(decimal?),
                propertyInfo: typeof(AskTasksVl).GetProperty("ApplicationId", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(AskTasksVl).GetField("<ApplicationId>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                nullable: true);
            applicationId.AddAnnotation("Oracle:ValueGenerationStrategy", OracleValueGenerationStrategy.None);
            applicationId.AddAnnotation("Relational:ColumnName", "APPLICATION_ID");
            applicationId.AddAnnotation("Relational:ColumnType", "NUMBER(38)");

            var availableReleaseVersion = runtimeEntityType.AddProperty(
                "AvailableReleaseVersion",
                typeof(string),
                propertyInfo: typeof(AskTasksVl).GetProperty("AvailableReleaseVersion", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(AskTasksVl).GetField("<AvailableReleaseVersion>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                nullable: true,
                maxLength: 50,
                unicode: false);
            availableReleaseVersion.AddAnnotation("Oracle:ValueGenerationStrategy", OracleValueGenerationStrategy.None);
            availableReleaseVersion.AddAnnotation("Relational:ColumnName", "AVAILABLE_RELEASE_VERSION");

            var createdBy = runtimeEntityType.AddProperty(
                "CreatedBy",
                typeof(string),
                propertyInfo: typeof(AskTasksVl).GetProperty("CreatedBy", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(AskTasksVl).GetField("<CreatedBy>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                nullable: true,
                maxLength: 50,
                unicode: false);
            createdBy.AddAnnotation("Oracle:ValueGenerationStrategy", OracleValueGenerationStrategy.None);
            createdBy.AddAnnotation("Relational:ColumnName", "CREATED_BY");

            var creationDate = runtimeEntityType.AddProperty(
                "CreationDate",
                typeof(DateTime?),
                propertyInfo: typeof(AskTasksVl).GetProperty("CreationDate", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(AskTasksVl).GetField("<CreationDate>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                nullable: true);
            creationDate.AddAnnotation("Oracle:ValueGenerationStrategy", OracleValueGenerationStrategy.None);
            creationDate.AddAnnotation("Relational:ColumnName", "CREATION_DATE");
            creationDate.AddAnnotation("Relational:ColumnType", "DATE");

            var deliveryReleaseVersion = runtimeEntityType.AddProperty(
                "DeliveryReleaseVersion",
                typeof(string),
                propertyInfo: typeof(AskTasksVl).GetProperty("DeliveryReleaseVersion", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(AskTasksVl).GetField("<DeliveryReleaseVersion>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                nullable: true,
                maxLength: 50,
                unicode: false);
            deliveryReleaseVersion.AddAnnotation("Oracle:ValueGenerationStrategy", OracleValueGenerationStrategy.None);
            deliveryReleaseVersion.AddAnnotation("Relational:ColumnName", "DELIVERY_RELEASE_VERSION");

            var enabledFlag = runtimeEntityType.AddProperty(
                "EnabledFlag",
                typeof(string),
                propertyInfo: typeof(AskTasksVl).GetProperty("EnabledFlag", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(AskTasksVl).GetField("<EnabledFlag>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                nullable: true,
                maxLength: 50,
                unicode: false);
            enabledFlag.AddAnnotation("Oracle:ValueGenerationStrategy", OracleValueGenerationStrategy.None);
            enabledFlag.AddAnnotation("Relational:ColumnName", "ENABLED_FLAG");

            var enterpriseAppShortName = runtimeEntityType.AddProperty(
                "EnterpriseAppShortName",
                typeof(string),
                propertyInfo: typeof(AskTasksVl).GetProperty("EnterpriseAppShortName", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(AskTasksVl).GetField("<EnterpriseAppShortName>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                nullable: true,
                maxLength: 50,
                unicode: false);
            enterpriseAppShortName.AddAnnotation("Oracle:ValueGenerationStrategy", OracleValueGenerationStrategy.None);
            enterpriseAppShortName.AddAnnotation("Relational:ColumnName", "ENTERPRISE_APP_SHORT_NAME");

            var enterpriseId = runtimeEntityType.AddProperty(
                "EnterpriseId",
                typeof(decimal?),
                propertyInfo: typeof(AskTasksVl).GetProperty("EnterpriseId", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(AskTasksVl).GetField("<EnterpriseId>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                nullable: true);
            enterpriseId.AddAnnotation("Oracle:ValueGenerationStrategy", OracleValueGenerationStrategy.None);
            enterpriseId.AddAnnotation("Relational:ColumnName", "ENTERPRISE_ID");
            enterpriseId.AddAnnotation("Relational:ColumnType", "NUMBER(38)");

            var essProgramId = runtimeEntityType.AddProperty(
                "EssProgramId",
                typeof(string),
                propertyInfo: typeof(AskTasksVl).GetProperty("EssProgramId", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(AskTasksVl).GetField("<EssProgramId>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                nullable: true,
                maxLength: 50,
                unicode: false);
            essProgramId.AddAnnotation("Oracle:ValueGenerationStrategy", OracleValueGenerationStrategy.None);
            essProgramId.AddAnnotation("Relational:ColumnName", "ESS_PROGRAM_ID");

            var expirationReleaseVersion = runtimeEntityType.AddProperty(
                "ExpirationReleaseVersion",
                typeof(string),
                propertyInfo: typeof(AskTasksVl).GetProperty("ExpirationReleaseVersion", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(AskTasksVl).GetField("<ExpirationReleaseVersion>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                nullable: true,
                maxLength: 50,
                unicode: false);
            expirationReleaseVersion.AddAnnotation("Oracle:ValueGenerationStrategy", OracleValueGenerationStrategy.None);
            expirationReleaseVersion.AddAnnotation("Relational:ColumnName", "EXPIRATION_RELEASE_VERSION");

            var fullWindowUiInvocation = runtimeEntityType.AddProperty(
                "FullWindowUiInvocation",
                typeof(string),
                propertyInfo: typeof(AskTasksVl).GetProperty("FullWindowUiInvocation", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(AskTasksVl).GetField("<FullWindowUiInvocation>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                nullable: true,
                maxLength: 50,
                unicode: false);
            fullWindowUiInvocation.AddAnnotation("Oracle:ValueGenerationStrategy", OracleValueGenerationStrategy.None);
            fullWindowUiInvocation.AddAnnotation("Relational:ColumnName", "FULL_WINDOW_UI_INVOCATION");

            var helpTopicId = runtimeEntityType.AddProperty(
                "HelpTopicId",
                typeof(string),
                propertyInfo: typeof(AskTasksVl).GetProperty("HelpTopicId", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(AskTasksVl).GetField("<HelpTopicId>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                nullable: true,
                maxLength: 200,
                unicode: false);
            helpTopicId.AddAnnotation("Oracle:ValueGenerationStrategy", OracleValueGenerationStrategy.None);
            helpTopicId.AddAnnotation("Relational:ColumnName", "HELP_TOPIC_ID");

            var invocationType = runtimeEntityType.AddProperty(
                "InvocationType",
                typeof(string),
                propertyInfo: typeof(AskTasksVl).GetProperty("InvocationType", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(AskTasksVl).GetField("<InvocationType>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                nullable: true,
                maxLength: 50,
                unicode: false);
            invocationType.AddAnnotation("Oracle:ValueGenerationStrategy", OracleValueGenerationStrategy.None);
            invocationType.AddAnnotation("Relational:ColumnName", "INVOCATION_TYPE");

            var lastUpdateDate = runtimeEntityType.AddProperty(
                "LastUpdateDate",
                typeof(DateTime?),
                propertyInfo: typeof(AskTasksVl).GetProperty("LastUpdateDate", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(AskTasksVl).GetField("<LastUpdateDate>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                nullable: true);
            lastUpdateDate.AddAnnotation("Oracle:ValueGenerationStrategy", OracleValueGenerationStrategy.None);
            lastUpdateDate.AddAnnotation("Relational:ColumnName", "LAST_UPDATE_DATE");
            lastUpdateDate.AddAnnotation("Relational:ColumnType", "DATE");

            var lastUpdateLogin = runtimeEntityType.AddProperty(
                "LastUpdateLogin",
                typeof(string),
                propertyInfo: typeof(AskTasksVl).GetProperty("LastUpdateLogin", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(AskTasksVl).GetField("<LastUpdateLogin>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                nullable: true,
                maxLength: 50,
                unicode: false);
            lastUpdateLogin.AddAnnotation("Oracle:ValueGenerationStrategy", OracleValueGenerationStrategy.None);
            lastUpdateLogin.AddAnnotation("Relational:ColumnName", "LAST_UPDATE_LOGIN");

            var lastUpdatedBy = runtimeEntityType.AddProperty(
                "LastUpdatedBy",
                typeof(string),
                propertyInfo: typeof(AskTasksVl).GetProperty("LastUpdatedBy", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(AskTasksVl).GetField("<LastUpdatedBy>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                nullable: true,
                maxLength: 50,
                unicode: false);
            lastUpdatedBy.AddAnnotation("Oracle:ValueGenerationStrategy", OracleValueGenerationStrategy.None);
            lastUpdatedBy.AddAnnotation("Relational:ColumnName", "LAST_UPDATED_BY");

            var moduleId = runtimeEntityType.AddProperty(
                "ModuleId",
                typeof(string),
                propertyInfo: typeof(AskTasksVl).GetProperty("ModuleId", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(AskTasksVl).GetField("<ModuleId>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                nullable: true,
                maxLength: 50,
                unicode: false);
            moduleId.AddAnnotation("Oracle:ValueGenerationStrategy", OracleValueGenerationStrategy.None);
            moduleId.AddAnnotation("Relational:ColumnName", "MODULE_ID");

            var moduleShortName = runtimeEntityType.AddProperty(
                "ModuleShortName",
                typeof(string),
                propertyInfo: typeof(AskTasksVl).GetProperty("ModuleShortName", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(AskTasksVl).GetField("<ModuleShortName>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                nullable: true,
                maxLength: 50,
                unicode: false);
            moduleShortName.AddAnnotation("Oracle:ValueGenerationStrategy", OracleValueGenerationStrategy.None);
            moduleShortName.AddAnnotation("Relational:ColumnName", "MODULE_SHORT_NAME");

            var objectVersionNumber = runtimeEntityType.AddProperty(
                "ObjectVersionNumber",
                typeof(decimal?),
                propertyInfo: typeof(AskTasksVl).GetProperty("ObjectVersionNumber", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(AskTasksVl).GetField("<ObjectVersionNumber>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                nullable: true);
            objectVersionNumber.AddAnnotation("Oracle:ValueGenerationStrategy", OracleValueGenerationStrategy.None);
            objectVersionNumber.AddAnnotation("Relational:ColumnName", "OBJECT_VERSION_NUMBER");
            objectVersionNumber.AddAnnotation("Relational:ColumnType", "NUMBER(38)");

            var owner = runtimeEntityType.AddProperty(
                "Owner",
                typeof(string),
                propertyInfo: typeof(AskTasksVl).GetProperty("Owner", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(AskTasksVl).GetField("<Owner>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                nullable: true,
                maxLength: 50,
                unicode: false);
            owner.AddAnnotation("Oracle:ValueGenerationStrategy", OracleValueGenerationStrategy.None);
            owner.AddAnnotation("Relational:ColumnName", "OWNER");

            var parameters = runtimeEntityType.AddProperty(
                "Parameters",
                typeof(string),
                propertyInfo: typeof(AskTasksVl).GetProperty("Parameters", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(AskTasksVl).GetField("<Parameters>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                nullable: true,
                maxLength: 450,
                unicode: false);
            parameters.AddAnnotation("Oracle:ValueGenerationStrategy", OracleValueGenerationStrategy.None);
            parameters.AddAnnotation("Relational:ColumnName", "PARAMETERS");

            var performTaskType = runtimeEntityType.AddProperty(
                "PerformTaskType",
                typeof(string),
                propertyInfo: typeof(AskTasksVl).GetProperty("PerformTaskType", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(AskTasksVl).GetField("<PerformTaskType>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                nullable: true,
                maxLength: 50,
                unicode: false);
            performTaskType.AddAnnotation("Oracle:ValueGenerationStrategy", OracleValueGenerationStrategy.None);
            performTaskType.AddAnnotation("Relational:ColumnName", "PERFORM_TASK_TYPE");

            var producerId = runtimeEntityType.AddProperty(
                "ProducerId",
                typeof(string),
                propertyInfo: typeof(AskTasksVl).GetProperty("ProducerId", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(AskTasksVl).GetField("<ProducerId>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                nullable: true,
                maxLength: 50,
                unicode: false);
            producerId.AddAnnotation("Oracle:ValueGenerationStrategy", OracleValueGenerationStrategy.None);
            producerId.AddAnnotation("Relational:ColumnName", "PRODUCER_ID");

            var programName = runtimeEntityType.AddProperty(
                "ProgramName",
                typeof(string),
                propertyInfo: typeof(AskTasksVl).GetProperty("ProgramName", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(AskTasksVl).GetField("<ProgramName>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                nullable: true,
                maxLength: 50,
                unicode: false);
            programName.AddAnnotation("Oracle:ValueGenerationStrategy", OracleValueGenerationStrategy.None);
            programName.AddAnnotation("Relational:ColumnName", "PROGRAM_NAME");

            var target = runtimeEntityType.AddProperty(
                "Target",
                typeof(string),
                propertyInfo: typeof(AskTasksVl).GetProperty("Target", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(AskTasksVl).GetField("<Target>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                nullable: true,
                maxLength: 50,
                unicode: false);
            target.AddAnnotation("Oracle:ValueGenerationStrategy", OracleValueGenerationStrategy.None);
            target.AddAnnotation("Relational:ColumnName", "TARGET");

            var taskDesc = runtimeEntityType.AddProperty(
                "TaskDesc",
                typeof(string),
                propertyInfo: typeof(AskTasksVl).GetProperty("TaskDesc", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(AskTasksVl).GetField("<TaskDesc>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                nullable: true,
                maxLength: 500,
                unicode: false);
            taskDesc.AddAnnotation("Oracle:ValueGenerationStrategy", OracleValueGenerationStrategy.None);
            taskDesc.AddAnnotation("Relational:ColumnName", "TASK_DESC");

            var taskFlowId = runtimeEntityType.AddProperty(
                "TaskFlowId",
                typeof(decimal?),
                propertyInfo: typeof(AskTasksVl).GetProperty("TaskFlowId", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(AskTasksVl).GetField("<TaskFlowId>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                nullable: true);
            taskFlowId.AddAnnotation("Oracle:ValueGenerationStrategy", OracleValueGenerationStrategy.None);
            taskFlowId.AddAnnotation("Relational:ColumnName", "TASK_FLOW_ID");
            taskFlowId.AddAnnotation("Relational:ColumnType", "NUMBER(38)");

            var taskId = runtimeEntityType.AddProperty(
                "TaskId",
                typeof(decimal?),
                propertyInfo: typeof(AskTasksVl).GetProperty("TaskId", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(AskTasksVl).GetField("<TaskId>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                nullable: true);
            taskId.AddAnnotation("Oracle:ValueGenerationStrategy", OracleValueGenerationStrategy.None);
            taskId.AddAnnotation("Relational:ColumnName", "TASK_ID");
            taskId.AddAnnotation("Relational:ColumnType", "NUMBER(38)");

            var taskName = runtimeEntityType.AddProperty(
                "TaskName",
                typeof(string),
                propertyInfo: typeof(AskTasksVl).GetProperty("TaskName", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(AskTasksVl).GetField("<TaskName>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                nullable: true,
                maxLength: 150,
                unicode: false);
            taskName.AddAnnotation("Oracle:ValueGenerationStrategy", OracleValueGenerationStrategy.None);
            taskName.AddAnnotation("Relational:ColumnName", "TASK_NAME");

            var taskShortName = runtimeEntityType.AddProperty(
                "TaskShortName",
                typeof(string),
                propertyInfo: typeof(AskTasksVl).GetProperty("TaskShortName", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(AskTasksVl).GetField("<TaskShortName>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                nullable: true,
                maxLength: 100,
                unicode: false);
            taskShortName.AddAnnotation("Oracle:ValueGenerationStrategy", OracleValueGenerationStrategy.None);
            taskShortName.AddAnnotation("Relational:ColumnName", "TASK_SHORT_NAME");

            var taskTypeCode = runtimeEntityType.AddProperty(
                "TaskTypeCode",
                typeof(string),
                propertyInfo: typeof(AskTasksVl).GetProperty("TaskTypeCode", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(AskTasksVl).GetField("<TaskTypeCode>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                nullable: true,
                maxLength: 50,
                unicode: false);
            taskTypeCode.AddAnnotation("Oracle:ValueGenerationStrategy", OracleValueGenerationStrategy.None);
            taskTypeCode.AddAnnotation("Relational:ColumnName", "TASK_TYPE_CODE");

            var testApplicationLocation = runtimeEntityType.AddProperty(
                "TestApplicationLocation",
                typeof(string),
                propertyInfo: typeof(AskTasksVl).GetProperty("TestApplicationLocation", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(AskTasksVl).GetField("<TestApplicationLocation>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                nullable: true,
                maxLength: 50,
                unicode: false);
            testApplicationLocation.AddAnnotation("Oracle:ValueGenerationStrategy", OracleValueGenerationStrategy.None);
            testApplicationLocation.AddAnnotation("Relational:ColumnName", "TEST_APPLICATION_LOCATION");

            var uiMockupUrl = runtimeEntityType.AddProperty(
                "UiMockupUrl",
                typeof(string),
                propertyInfo: typeof(AskTasksVl).GetProperty("UiMockupUrl", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(AskTasksVl).GetField("<UiMockupUrl>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                nullable: true,
                maxLength: 200,
                unicode: false);
            uiMockupUrl.AddAnnotation("Oracle:ValueGenerationStrategy", OracleValueGenerationStrategy.None);
            uiMockupUrl.AddAnnotation("Relational:ColumnName", "UI_MOCKUP_URL");

            var wireframeUrl = runtimeEntityType.AddProperty(
                "WireframeUrl",
                typeof(string),
                propertyInfo: typeof(AskTasksVl).GetProperty("WireframeUrl", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(AskTasksVl).GetField("<WireframeUrl>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                nullable: true,
                maxLength: 50,
                unicode: false);
            wireframeUrl.AddAnnotation("Oracle:ValueGenerationStrategy", OracleValueGenerationStrategy.None);
            wireframeUrl.AddAnnotation("Relational:ColumnName", "WIREFRAME_URL");

            return runtimeEntityType;
        }

        public static void CreateAnnotations(RuntimeEntityType runtimeEntityType)
        {
            runtimeEntityType.AddAnnotation("Relational:FunctionName", null);
            runtimeEntityType.AddAnnotation("Relational:Schema", "FUSION");
            runtimeEntityType.AddAnnotation("Relational:SqlQuery", null);
            runtimeEntityType.AddAnnotation("Relational:TableName", "ASK_TASKS_VL");
            runtimeEntityType.AddAnnotation("Relational:ViewName", null);
            runtimeEntityType.AddAnnotation("Relational:ViewSchema", null);

            Customize(runtimeEntityType);
        }

        static partial void Customize(RuntimeEntityType runtimeEntityType);
    }
}
