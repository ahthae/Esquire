// <auto-generated />
using System;
using System.Reflection;
using Microsoft.EntityFrameworkCore.Metadata;
using Oracle.EntityFrameworkCore.Metadata;
using esquire.Models.Fusion;

#pragma warning disable 219, 612, 618
#nullable enable

namespace esquire.Models.Compiled
{
    internal partial class AsmFilterOptionsFilterEntityType
    {
        public static RuntimeEntityType Create(RuntimeModel model, RuntimeEntityType? baseEntityType = null)
        {
            var runtimeEntityType = model.AddEntityType(
                "esquire.Models.Fusion.AsmFilterOptionsFilter",
                typeof(AsmFilterOptionsFilter),
                baseEntityType);

            var autoEnabledFlag = runtimeEntityType.AddProperty(
                "AutoEnabledFlag",
                typeof(string),
                propertyInfo: typeof(AsmFilterOptionsFilter).GetProperty("AutoEnabledFlag", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(AsmFilterOptionsFilter).GetField("<AutoEnabledFlag>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                nullable: true,
                maxLength: 50,
                unicode: false);
            autoEnabledFlag.AddAnnotation("Oracle:ValueGenerationStrategy", OracleValueGenerationStrategy.None);
            autoEnabledFlag.AddAnnotation("Relational:ColumnName", "AUTO_ENABLED_FLAG");

            var autoEnabledReleaseVersion = runtimeEntityType.AddProperty(
                "AutoEnabledReleaseVersion",
                typeof(string),
                propertyInfo: typeof(AsmFilterOptionsFilter).GetProperty("AutoEnabledReleaseVersion", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(AsmFilterOptionsFilter).GetField("<AutoEnabledReleaseVersion>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                nullable: true,
                maxLength: 50,
                unicode: false);
            autoEnabledReleaseVersion.AddAnnotation("Oracle:ValueGenerationStrategy", OracleValueGenerationStrategy.None);
            autoEnabledReleaseVersion.AddAnnotation("Relational:ColumnName", "AUTO_ENABLED_RELEASE_VERSION");

            var availableFlag = runtimeEntityType.AddProperty(
                "AvailableFlag",
                typeof(string),
                propertyInfo: typeof(AsmFilterOptionsFilter).GetProperty("AvailableFlag", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(AsmFilterOptionsFilter).GetField("<AvailableFlag>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                nullable: true,
                maxLength: 50,
                unicode: false);
            availableFlag.AddAnnotation("Oracle:ValueGenerationStrategy", OracleValueGenerationStrategy.None);
            availableFlag.AddAnnotation("Relational:ColumnName", "AVAILABLE_FLAG");

            var availableReleaseVersion = runtimeEntityType.AddProperty(
                "AvailableReleaseVersion",
                typeof(string),
                propertyInfo: typeof(AsmFilterOptionsFilter).GetProperty("AvailableReleaseVersion", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(AsmFilterOptionsFilter).GetField("<AvailableReleaseVersion>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                nullable: true,
                maxLength: 50,
                unicode: false);
            availableReleaseVersion.AddAnnotation("Oracle:ValueGenerationStrategy", OracleValueGenerationStrategy.None);
            availableReleaseVersion.AddAnnotation("Relational:ColumnName", "AVAILABLE_RELEASE_VERSION");

            var childType = runtimeEntityType.AddProperty(
                "ChildType",
                typeof(string),
                propertyInfo: typeof(AsmFilterOptionsFilter).GetProperty("ChildType", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(AsmFilterOptionsFilter).GetField("<ChildType>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                nullable: true,
                maxLength: 50,
                unicode: false);
            childType.AddAnnotation("Oracle:ValueGenerationStrategy", OracleValueGenerationStrategy.None);
            childType.AddAnnotation("Relational:ColumnName", "CHILD_TYPE");

            var createdBy = runtimeEntityType.AddProperty(
                "CreatedBy",
                typeof(string),
                propertyInfo: typeof(AsmFilterOptionsFilter).GetProperty("CreatedBy", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(AsmFilterOptionsFilter).GetField("<CreatedBy>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                nullable: true,
                maxLength: 50,
                unicode: false);
            createdBy.AddAnnotation("Oracle:ValueGenerationStrategy", OracleValueGenerationStrategy.None);
            createdBy.AddAnnotation("Relational:ColumnName", "CREATED_BY");

            var creationDate = runtimeEntityType.AddProperty(
                "CreationDate",
                typeof(DateTime?),
                propertyInfo: typeof(AsmFilterOptionsFilter).GetProperty("CreationDate", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(AsmFilterOptionsFilter).GetField("<CreationDate>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                nullable: true);
            creationDate.AddAnnotation("Oracle:ValueGenerationStrategy", OracleValueGenerationStrategy.None);
            creationDate.AddAnnotation("Relational:ColumnName", "CREATION_DATE");
            creationDate.AddAnnotation("Relational:ColumnType", "DATE");

            var defaultFlag = runtimeEntityType.AddProperty(
                "DefaultFlag",
                typeof(string),
                propertyInfo: typeof(AsmFilterOptionsFilter).GetProperty("DefaultFlag", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(AsmFilterOptionsFilter).GetField("<DefaultFlag>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                nullable: true,
                maxLength: 50,
                unicode: false);
            defaultFlag.AddAnnotation("Oracle:ValueGenerationStrategy", OracleValueGenerationStrategy.None);
            defaultFlag.AddAnnotation("Relational:ColumnName", "DEFAULT_FLAG");

            var deliveryReleaseVersion = runtimeEntityType.AddProperty(
                "DeliveryReleaseVersion",
                typeof(string),
                propertyInfo: typeof(AsmFilterOptionsFilter).GetProperty("DeliveryReleaseVersion", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(AsmFilterOptionsFilter).GetField("<DeliveryReleaseVersion>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                nullable: true,
                maxLength: 50,
                unicode: false);
            deliveryReleaseVersion.AddAnnotation("Oracle:ValueGenerationStrategy", OracleValueGenerationStrategy.None);
            deliveryReleaseVersion.AddAnnotation("Relational:ColumnName", "DELIVERY_RELEASE_VERSION");

            var displaySequence = runtimeEntityType.AddProperty(
                "DisplaySequence",
                typeof(decimal?),
                propertyInfo: typeof(AsmFilterOptionsFilter).GetProperty("DisplaySequence", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(AsmFilterOptionsFilter).GetField("<DisplaySequence>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                nullable: true);
            displaySequence.AddAnnotation("Oracle:ValueGenerationStrategy", OracleValueGenerationStrategy.None);
            displaySequence.AddAnnotation("Relational:ColumnName", "DISPLAY_SEQUENCE");
            displaySequence.AddAnnotation("Relational:ColumnType", "NUMBER(38)");

            var enterpriseId = runtimeEntityType.AddProperty(
                "EnterpriseId",
                typeof(decimal?),
                propertyInfo: typeof(AsmFilterOptionsFilter).GetProperty("EnterpriseId", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(AsmFilterOptionsFilter).GetField("<EnterpriseId>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                nullable: true);
            enterpriseId.AddAnnotation("Oracle:ValueGenerationStrategy", OracleValueGenerationStrategy.None);
            enterpriseId.AddAnnotation("Relational:ColumnName", "ENTERPRISE_ID");
            enterpriseId.AddAnnotation("Relational:ColumnType", "NUMBER(38)");

            var expirationReleaseVersion = runtimeEntityType.AddProperty(
                "ExpirationReleaseVersion",
                typeof(string),
                propertyInfo: typeof(AsmFilterOptionsFilter).GetProperty("ExpirationReleaseVersion", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(AsmFilterOptionsFilter).GetField("<ExpirationReleaseVersion>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                nullable: true,
                maxLength: 50,
                unicode: false);
            expirationReleaseVersion.AddAnnotation("Oracle:ValueGenerationStrategy", OracleValueGenerationStrategy.None);
            expirationReleaseVersion.AddAnnotation("Relational:ColumnName", "EXPIRATION_RELEASE_VERSION");

            var filterId = runtimeEntityType.AddProperty(
                "FilterId",
                typeof(decimal?),
                propertyInfo: typeof(AsmFilterOptionsFilter).GetProperty("FilterId", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(AsmFilterOptionsFilter).GetField("<FilterId>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                nullable: true);
            filterId.AddAnnotation("Oracle:ValueGenerationStrategy", OracleValueGenerationStrategy.None);
            filterId.AddAnnotation("Relational:ColumnName", "FILTER_ID");
            filterId.AddAnnotation("Relational:ColumnType", "NUMBER(38)");

            var filterOptionFilterId = runtimeEntityType.AddProperty(
                "FilterOptionFilterId",
                typeof(decimal?),
                propertyInfo: typeof(AsmFilterOptionsFilter).GetProperty("FilterOptionFilterId", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(AsmFilterOptionsFilter).GetField("<FilterOptionFilterId>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                nullable: true);
            filterOptionFilterId.AddAnnotation("Oracle:ValueGenerationStrategy", OracleValueGenerationStrategy.None);
            filterOptionFilterId.AddAnnotation("Relational:ColumnName", "FILTER_OPTION_FILTER_ID");
            filterOptionFilterId.AddAnnotation("Relational:ColumnType", "NUMBER(38)");

            var filterOptionId = runtimeEntityType.AddProperty(
                "FilterOptionId",
                typeof(decimal?),
                propertyInfo: typeof(AsmFilterOptionsFilter).GetProperty("FilterOptionId", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(AsmFilterOptionsFilter).GetField("<FilterOptionId>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                nullable: true);
            filterOptionId.AddAnnotation("Oracle:ValueGenerationStrategy", OracleValueGenerationStrategy.None);
            filterOptionId.AddAnnotation("Relational:ColumnName", "FILTER_OPTION_ID");
            filterOptionId.AddAnnotation("Relational:ColumnType", "NUMBER(38)");

            var lastUpdateDate = runtimeEntityType.AddProperty(
                "LastUpdateDate",
                typeof(DateTime?),
                propertyInfo: typeof(AsmFilterOptionsFilter).GetProperty("LastUpdateDate", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(AsmFilterOptionsFilter).GetField("<LastUpdateDate>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                nullable: true);
            lastUpdateDate.AddAnnotation("Oracle:ValueGenerationStrategy", OracleValueGenerationStrategy.None);
            lastUpdateDate.AddAnnotation("Relational:ColumnName", "LAST_UPDATE_DATE");
            lastUpdateDate.AddAnnotation("Relational:ColumnType", "DATE");

            var lastUpdateLogin = runtimeEntityType.AddProperty(
                "LastUpdateLogin",
                typeof(string),
                propertyInfo: typeof(AsmFilterOptionsFilter).GetProperty("LastUpdateLogin", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(AsmFilterOptionsFilter).GetField("<LastUpdateLogin>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                nullable: true,
                maxLength: 50,
                unicode: false);
            lastUpdateLogin.AddAnnotation("Oracle:ValueGenerationStrategy", OracleValueGenerationStrategy.None);
            lastUpdateLogin.AddAnnotation("Relational:ColumnName", "LAST_UPDATE_LOGIN");

            var lastUpdatedBy = runtimeEntityType.AddProperty(
                "LastUpdatedBy",
                typeof(string),
                propertyInfo: typeof(AsmFilterOptionsFilter).GetProperty("LastUpdatedBy", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(AsmFilterOptionsFilter).GetField("<LastUpdatedBy>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                nullable: true,
                maxLength: 50,
                unicode: false);
            lastUpdatedBy.AddAnnotation("Oracle:ValueGenerationStrategy", OracleValueGenerationStrategy.None);
            lastUpdatedBy.AddAnnotation("Relational:ColumnName", "LAST_UPDATED_BY");

            var objectVersionNumber = runtimeEntityType.AddProperty(
                "ObjectVersionNumber",
                typeof(decimal?),
                propertyInfo: typeof(AsmFilterOptionsFilter).GetProperty("ObjectVersionNumber", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(AsmFilterOptionsFilter).GetField("<ObjectVersionNumber>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                nullable: true);
            objectVersionNumber.AddAnnotation("Oracle:ValueGenerationStrategy", OracleValueGenerationStrategy.None);
            objectVersionNumber.AddAnnotation("Relational:ColumnName", "OBJECT_VERSION_NUMBER");
            objectVersionNumber.AddAnnotation("Relational:ColumnType", "NUMBER(38)");

            var oraSeedSet1 = runtimeEntityType.AddProperty(
                "OraSeedSet1",
                typeof(string),
                propertyInfo: typeof(AsmFilterOptionsFilter).GetProperty("OraSeedSet1", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(AsmFilterOptionsFilter).GetField("<OraSeedSet1>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                nullable: true,
                maxLength: 50,
                unicode: false);
            oraSeedSet1.AddAnnotation("Oracle:ValueGenerationStrategy", OracleValueGenerationStrategy.None);
            oraSeedSet1.AddAnnotation("Relational:ColumnName", "ORA_SEED_SET1");

            var oraSeedSet2 = runtimeEntityType.AddProperty(
                "OraSeedSet2",
                typeof(string),
                propertyInfo: typeof(AsmFilterOptionsFilter).GetProperty("OraSeedSet2", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(AsmFilterOptionsFilter).GetField("<OraSeedSet2>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                nullable: true,
                maxLength: 50,
                unicode: false);
            oraSeedSet2.AddAnnotation("Oracle:ValueGenerationStrategy", OracleValueGenerationStrategy.None);
            oraSeedSet2.AddAnnotation("Relational:ColumnName", "ORA_SEED_SET2");

            var quickSetupTaskId = runtimeEntityType.AddProperty(
                "QuickSetupTaskId",
                typeof(decimal?),
                propertyInfo: typeof(AsmFilterOptionsFilter).GetProperty("QuickSetupTaskId", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(AsmFilterOptionsFilter).GetField("<QuickSetupTaskId>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                nullable: true);
            quickSetupTaskId.AddAnnotation("Oracle:ValueGenerationStrategy", OracleValueGenerationStrategy.None);
            quickSetupTaskId.AddAnnotation("Relational:ColumnName", "QUICK_SETUP_TASK_ID");
            quickSetupTaskId.AddAnnotation("Relational:ColumnType", "NUMBER(38)");

            var quickSetupTaskListId = runtimeEntityType.AddProperty(
                "QuickSetupTaskListId",
                typeof(decimal?),
                propertyInfo: typeof(AsmFilterOptionsFilter).GetProperty("QuickSetupTaskListId", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(AsmFilterOptionsFilter).GetField("<QuickSetupTaskListId>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                nullable: true);
            quickSetupTaskListId.AddAnnotation("Oracle:ValueGenerationStrategy", OracleValueGenerationStrategy.None);
            quickSetupTaskListId.AddAnnotation("Relational:ColumnName", "QUICK_SETUP_TASK_LIST_ID");
            quickSetupTaskListId.AddAnnotation("Relational:ColumnType", "NUMBER(38)");

            var seedDataSource = runtimeEntityType.AddProperty(
                "SeedDataSource",
                typeof(string),
                propertyInfo: typeof(AsmFilterOptionsFilter).GetProperty("SeedDataSource", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(AsmFilterOptionsFilter).GetField("<SeedDataSource>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                nullable: true,
                maxLength: 150,
                unicode: false);
            seedDataSource.AddAnnotation("Oracle:ValueGenerationStrategy", OracleValueGenerationStrategy.None);
            seedDataSource.AddAnnotation("Relational:ColumnName", "SEED_DATA_SOURCE");

            return runtimeEntityType;
        }

        public static void CreateAnnotations(RuntimeEntityType runtimeEntityType)
        {
            runtimeEntityType.AddAnnotation("Relational:FunctionName", null);
            runtimeEntityType.AddAnnotation("Relational:Schema", "FUSION");
            runtimeEntityType.AddAnnotation("Relational:SqlQuery", null);
            runtimeEntityType.AddAnnotation("Relational:TableName", "ASM_FILTER_OPTIONS_FILTERS");
            runtimeEntityType.AddAnnotation("Relational:ViewName", null);
            runtimeEntityType.AddAnnotation("Relational:ViewSchema", null);

            Customize(runtimeEntityType);
        }

        static partial void Customize(RuntimeEntityType runtimeEntityType);
    }
}
