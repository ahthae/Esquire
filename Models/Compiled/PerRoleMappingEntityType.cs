// <auto-generated />
using System;
using System.Reflection;
using Microsoft.EntityFrameworkCore.Metadata;
using Oracle.EntityFrameworkCore.Metadata;
using esquire.Models.Fusion;

#pragma warning disable 219, 612, 618
#nullable enable

namespace esquire.Models.Compiled
{
    internal partial class PerRoleMappingEntityType
    {
        public static RuntimeEntityType Create(RuntimeModel model, RuntimeEntityType? baseEntityType = null)
        {
            var runtimeEntityType = model.AddEntityType(
                "esquire.Models.Fusion.PerRoleMapping",
                typeof(PerRoleMapping),
                baseEntityType);

            var allRolesRequestableFlag = runtimeEntityType.AddProperty(
                "AllRolesRequestableFlag",
                typeof(string),
                propertyInfo: typeof(PerRoleMapping).GetProperty("AllRolesRequestableFlag", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(PerRoleMapping).GetField("<AllRolesRequestableFlag>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                nullable: true,
                maxLength: 50,
                unicode: false);
            allRolesRequestableFlag.AddAnnotation("Oracle:ValueGenerationStrategy", OracleValueGenerationStrategy.None);
            allRolesRequestableFlag.AddAnnotation("Relational:ColumnName", "ALL_ROLES_REQUESTABLE_FLAG");

            var assignmentStatus = runtimeEntityType.AddProperty(
                "AssignmentStatus",
                typeof(string),
                propertyInfo: typeof(PerRoleMapping).GetProperty("AssignmentStatus", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(PerRoleMapping).GetField("<AssignmentStatus>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                nullable: true,
                maxLength: 50,
                unicode: false);
            assignmentStatus.AddAnnotation("Oracle:ValueGenerationStrategy", OracleValueGenerationStrategy.None);
            assignmentStatus.AddAnnotation("Relational:ColumnName", "ASSIGNMENT_STATUS");

            var assignmentStatusTypeId = runtimeEntityType.AddProperty(
                "AssignmentStatusTypeId",
                typeof(decimal?),
                propertyInfo: typeof(PerRoleMapping).GetProperty("AssignmentStatusTypeId", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(PerRoleMapping).GetField("<AssignmentStatusTypeId>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                nullable: true);
            assignmentStatusTypeId.AddAnnotation("Oracle:ValueGenerationStrategy", OracleValueGenerationStrategy.None);
            assignmentStatusTypeId.AddAnnotation("Relational:ColumnName", "ASSIGNMENT_STATUS_TYPE_ID");
            assignmentStatusTypeId.AddAnnotation("Relational:ColumnType", "NUMBER(38)");

            var assignmentType = runtimeEntityType.AddProperty(
                "AssignmentType",
                typeof(string),
                propertyInfo: typeof(PerRoleMapping).GetProperty("AssignmentType", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(PerRoleMapping).GetField("<AssignmentType>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                nullable: true,
                maxLength: 50,
                unicode: false);
            assignmentType.AddAnnotation("Oracle:ValueGenerationStrategy", OracleValueGenerationStrategy.None);
            assignmentType.AddAnnotation("Relational:ColumnName", "ASSIGNMENT_TYPE");

            var businessGroupId = runtimeEntityType.AddProperty(
                "BusinessGroupId",
                typeof(decimal?),
                propertyInfo: typeof(PerRoleMapping).GetProperty("BusinessGroupId", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(PerRoleMapping).GetField("<BusinessGroupId>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                nullable: true);
            businessGroupId.AddAnnotation("Oracle:ValueGenerationStrategy", OracleValueGenerationStrategy.None);
            businessGroupId.AddAnnotation("Relational:ColumnName", "BUSINESS_GROUP_ID");
            businessGroupId.AddAnnotation("Relational:ColumnType", "NUMBER(38)");

            var businessUnitId = runtimeEntityType.AddProperty(
                "BusinessUnitId",
                typeof(decimal?),
                propertyInfo: typeof(PerRoleMapping).GetProperty("BusinessUnitId", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(PerRoleMapping).GetField("<BusinessUnitId>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                nullable: true);
            businessUnitId.AddAnnotation("Oracle:ValueGenerationStrategy", OracleValueGenerationStrategy.None);
            businessUnitId.AddAnnotation("Relational:ColumnName", "BUSINESS_UNIT_ID");
            businessUnitId.AddAnnotation("Relational:ColumnType", "NUMBER(38)");

            var contactRole = runtimeEntityType.AddProperty(
                "ContactRole",
                typeof(string),
                propertyInfo: typeof(PerRoleMapping).GetProperty("ContactRole", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(PerRoleMapping).GetField("<ContactRole>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                nullable: true,
                maxLength: 50,
                unicode: false);
            contactRole.AddAnnotation("Oracle:ValueGenerationStrategy", OracleValueGenerationStrategy.None);
            contactRole.AddAnnotation("Relational:ColumnName", "CONTACT_ROLE");

            var createdBy = runtimeEntityType.AddProperty(
                "CreatedBy",
                typeof(string),
                propertyInfo: typeof(PerRoleMapping).GetProperty("CreatedBy", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(PerRoleMapping).GetField("<CreatedBy>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                nullable: true,
                maxLength: 50,
                unicode: false);
            createdBy.AddAnnotation("Oracle:ValueGenerationStrategy", OracleValueGenerationStrategy.None);
            createdBy.AddAnnotation("Relational:ColumnName", "CREATED_BY");

            var creationDate = runtimeEntityType.AddProperty(
                "CreationDate",
                typeof(DateTime?),
                propertyInfo: typeof(PerRoleMapping).GetProperty("CreationDate", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(PerRoleMapping).GetField("<CreationDate>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                nullable: true);
            creationDate.AddAnnotation("Oracle:ValueGenerationStrategy", OracleValueGenerationStrategy.None);
            creationDate.AddAnnotation("Relational:ColumnName", "CREATION_DATE");
            creationDate.AddAnnotation("Relational:ColumnType", "DATE");

            var currentManagerFlag = runtimeEntityType.AddProperty(
                "CurrentManagerFlag",
                typeof(string),
                propertyInfo: typeof(PerRoleMapping).GetProperty("CurrentManagerFlag", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(PerRoleMapping).GetField("<CurrentManagerFlag>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                nullable: true,
                maxLength: 50,
                unicode: false);
            currentManagerFlag.AddAnnotation("Oracle:ValueGenerationStrategy", OracleValueGenerationStrategy.None);
            currentManagerFlag.AddAnnotation("Relational:ColumnName", "CURRENT_MANAGER_FLAG");

            var dateFrom = runtimeEntityType.AddProperty(
                "DateFrom",
                typeof(DateTime?),
                propertyInfo: typeof(PerRoleMapping).GetProperty("DateFrom", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(PerRoleMapping).GetField("<DateFrom>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                nullable: true);
            dateFrom.AddAnnotation("Oracle:ValueGenerationStrategy", OracleValueGenerationStrategy.None);
            dateFrom.AddAnnotation("Relational:ColumnName", "DATE_FROM");
            dateFrom.AddAnnotation("Relational:ColumnType", "DATE");

            var dateTo = runtimeEntityType.AddProperty(
                "DateTo",
                typeof(DateTime?),
                propertyInfo: typeof(PerRoleMapping).GetProperty("DateTo", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(PerRoleMapping).GetField("<DateTo>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                nullable: true);
            dateTo.AddAnnotation("Oracle:ValueGenerationStrategy", OracleValueGenerationStrategy.None);
            dateTo.AddAnnotation("Relational:ColumnName", "DATE_TO");
            dateTo.AddAnnotation("Relational:ColumnType", "DATE");

            var departmentId = runtimeEntityType.AddProperty(
                "DepartmentId",
                typeof(decimal?),
                propertyInfo: typeof(PerRoleMapping).GetProperty("DepartmentId", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(PerRoleMapping).GetField("<DepartmentId>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                nullable: true);
            departmentId.AddAnnotation("Oracle:ValueGenerationStrategy", OracleValueGenerationStrategy.None);
            departmentId.AddAnnotation("Relational:ColumnName", "DEPARTMENT_ID");
            departmentId.AddAnnotation("Relational:ColumnType", "NUMBER(38)");

            var gradeId = runtimeEntityType.AddProperty(
                "GradeId",
                typeof(decimal?),
                propertyInfo: typeof(PerRoleMapping).GetProperty("GradeId", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(PerRoleMapping).GetField("<GradeId>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                nullable: true);
            gradeId.AddAnnotation("Oracle:ValueGenerationStrategy", OracleValueGenerationStrategy.None);
            gradeId.AddAnnotation("Relational:ColumnName", "GRADE_ID");
            gradeId.AddAnnotation("Relational:ColumnType", "NUMBER(38)");

            var jobId = runtimeEntityType.AddProperty(
                "JobId",
                typeof(decimal?),
                propertyInfo: typeof(PerRoleMapping).GetProperty("JobId", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(PerRoleMapping).GetField("<JobId>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                nullable: true);
            jobId.AddAnnotation("Oracle:ValueGenerationStrategy", OracleValueGenerationStrategy.None);
            jobId.AddAnnotation("Relational:ColumnName", "JOB_ID");
            jobId.AddAnnotation("Relational:ColumnType", "NUMBER(38)");

            var lastUpdateDate = runtimeEntityType.AddProperty(
                "LastUpdateDate",
                typeof(DateTime?),
                propertyInfo: typeof(PerRoleMapping).GetProperty("LastUpdateDate", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(PerRoleMapping).GetField("<LastUpdateDate>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                nullable: true);
            lastUpdateDate.AddAnnotation("Oracle:ValueGenerationStrategy", OracleValueGenerationStrategy.None);
            lastUpdateDate.AddAnnotation("Relational:ColumnName", "LAST_UPDATE_DATE");
            lastUpdateDate.AddAnnotation("Relational:ColumnType", "DATE");

            var lastUpdateLogin = runtimeEntityType.AddProperty(
                "LastUpdateLogin",
                typeof(string),
                propertyInfo: typeof(PerRoleMapping).GetProperty("LastUpdateLogin", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(PerRoleMapping).GetField("<LastUpdateLogin>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                nullable: true,
                maxLength: 50,
                unicode: false);
            lastUpdateLogin.AddAnnotation("Oracle:ValueGenerationStrategy", OracleValueGenerationStrategy.None);
            lastUpdateLogin.AddAnnotation("Relational:ColumnName", "LAST_UPDATE_LOGIN");

            var lastUpdatedBy = runtimeEntityType.AddProperty(
                "LastUpdatedBy",
                typeof(string),
                propertyInfo: typeof(PerRoleMapping).GetProperty("LastUpdatedBy", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(PerRoleMapping).GetField("<LastUpdatedBy>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                nullable: true,
                maxLength: 50,
                unicode: false);
            lastUpdatedBy.AddAnnotation("Oracle:ValueGenerationStrategy", OracleValueGenerationStrategy.None);
            lastUpdatedBy.AddAnnotation("Relational:ColumnName", "LAST_UPDATED_BY");

            var legalEmployerId = runtimeEntityType.AddProperty(
                "LegalEmployerId",
                typeof(decimal?),
                propertyInfo: typeof(PerRoleMapping).GetProperty("LegalEmployerId", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(PerRoleMapping).GetField("<LegalEmployerId>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                nullable: true);
            legalEmployerId.AddAnnotation("Oracle:ValueGenerationStrategy", OracleValueGenerationStrategy.None);
            legalEmployerId.AddAnnotation("Relational:ColumnName", "LEGAL_EMPLOYER_ID");
            legalEmployerId.AddAnnotation("Relational:ColumnType", "NUMBER(38)");

            var locationId = runtimeEntityType.AddProperty(
                "LocationId",
                typeof(decimal?),
                propertyInfo: typeof(PerRoleMapping).GetProperty("LocationId", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(PerRoleMapping).GetField("<LocationId>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                nullable: true);
            locationId.AddAnnotation("Oracle:ValueGenerationStrategy", OracleValueGenerationStrategy.None);
            locationId.AddAnnotation("Relational:ColumnName", "LOCATION_ID");
            locationId.AddAnnotation("Relational:ColumnType", "NUMBER(38)");

            var managerType = runtimeEntityType.AddProperty(
                "ManagerType",
                typeof(string),
                propertyInfo: typeof(PerRoleMapping).GetProperty("ManagerType", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(PerRoleMapping).GetField("<ManagerType>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                nullable: true,
                maxLength: 50,
                unicode: false);
            managerType.AddAnnotation("Oracle:ValueGenerationStrategy", OracleValueGenerationStrategy.None);
            managerType.AddAnnotation("Relational:ColumnName", "MANAGER_TYPE");

            var mappingName = runtimeEntityType.AddProperty(
                "MappingName",
                typeof(string),
                propertyInfo: typeof(PerRoleMapping).GetProperty("MappingName", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(PerRoleMapping).GetField("<MappingName>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                nullable: true,
                maxLength: 100,
                unicode: false);
            mappingName.AddAnnotation("Oracle:ValueGenerationStrategy", OracleValueGenerationStrategy.None);
            mappingName.AddAnnotation("Relational:ColumnName", "MAPPING_NAME");

            var objectVersionNumber = runtimeEntityType.AddProperty(
                "ObjectVersionNumber",
                typeof(decimal?),
                propertyInfo: typeof(PerRoleMapping).GetProperty("ObjectVersionNumber", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(PerRoleMapping).GetField("<ObjectVersionNumber>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                nullable: true);
            objectVersionNumber.AddAnnotation("Oracle:ValueGenerationStrategy", OracleValueGenerationStrategy.None);
            objectVersionNumber.AddAnnotation("Relational:ColumnName", "OBJECT_VERSION_NUMBER");
            objectVersionNumber.AddAnnotation("Relational:ColumnType", "NUMBER(38)");

            var partyUsageCode = runtimeEntityType.AddProperty(
                "PartyUsageCode",
                typeof(string),
                propertyInfo: typeof(PerRoleMapping).GetProperty("PartyUsageCode", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(PerRoleMapping).GetField("<PartyUsageCode>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                nullable: true,
                maxLength: 50,
                unicode: false);
            partyUsageCode.AddAnnotation("Oracle:ValueGenerationStrategy", OracleValueGenerationStrategy.None);
            partyUsageCode.AddAnnotation("Relational:ColumnName", "PARTY_USAGE_CODE");

            var positionId = runtimeEntityType.AddProperty(
                "PositionId",
                typeof(decimal?),
                propertyInfo: typeof(PerRoleMapping).GetProperty("PositionId", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(PerRoleMapping).GetField("<PositionId>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                nullable: true);
            positionId.AddAnnotation("Oracle:ValueGenerationStrategy", OracleValueGenerationStrategy.None);
            positionId.AddAnnotation("Relational:ColumnName", "POSITION_ID");
            positionId.AddAnnotation("Relational:ColumnType", "NUMBER(38)");

            var resourceRoleId = runtimeEntityType.AddProperty(
                "ResourceRoleId",
                typeof(decimal?),
                propertyInfo: typeof(PerRoleMapping).GetProperty("ResourceRoleId", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(PerRoleMapping).GetField("<ResourceRoleId>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                nullable: true);
            resourceRoleId.AddAnnotation("Oracle:ValueGenerationStrategy", OracleValueGenerationStrategy.None);
            resourceRoleId.AddAnnotation("Relational:ColumnName", "RESOURCE_ROLE_ID");
            resourceRoleId.AddAnnotation("Relational:ColumnType", "NUMBER(38)");

            var responsibilityType = runtimeEntityType.AddProperty(
                "ResponsibilityType",
                typeof(string),
                propertyInfo: typeof(PerRoleMapping).GetProperty("ResponsibilityType", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(PerRoleMapping).GetField("<ResponsibilityType>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                nullable: true,
                maxLength: 50,
                unicode: false);
            responsibilityType.AddAnnotation("Oracle:ValueGenerationStrategy", OracleValueGenerationStrategy.None);
            responsibilityType.AddAnnotation("Relational:ColumnName", "RESPONSIBILITY_TYPE");

            var roleMappingId = runtimeEntityType.AddProperty(
                "RoleMappingId",
                typeof(decimal?),
                propertyInfo: typeof(PerRoleMapping).GetProperty("RoleMappingId", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(PerRoleMapping).GetField("<RoleMappingId>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                nullable: true);
            roleMappingId.AddAnnotation("Oracle:ValueGenerationStrategy", OracleValueGenerationStrategy.None);
            roleMappingId.AddAnnotation("Relational:ColumnName", "ROLE_MAPPING_ID");
            roleMappingId.AddAnnotation("Relational:ColumnType", "NUMBER(38)");

            var ruleType = runtimeEntityType.AddProperty(
                "RuleType",
                typeof(string),
                propertyInfo: typeof(PerRoleMapping).GetProperty("RuleType", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(PerRoleMapping).GetField("<RuleType>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                nullable: true,
                maxLength: 50,
                unicode: false);
            ruleType.AddAnnotation("Oracle:ValueGenerationStrategy", OracleValueGenerationStrategy.None);
            ruleType.AddAnnotation("Relational:ColumnName", "RULE_TYPE");

            var systemPersonType = runtimeEntityType.AddProperty(
                "SystemPersonType",
                typeof(string),
                propertyInfo: typeof(PerRoleMapping).GetProperty("SystemPersonType", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(PerRoleMapping).GetField("<SystemPersonType>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                nullable: true,
                maxLength: 50,
                unicode: false);
            systemPersonType.AddAnnotation("Oracle:ValueGenerationStrategy", OracleValueGenerationStrategy.None);
            systemPersonType.AddAnnotation("Relational:ColumnName", "SYSTEM_PERSON_TYPE");

            var userPersonTypeId = runtimeEntityType.AddProperty(
                "UserPersonTypeId",
                typeof(decimal?),
                propertyInfo: typeof(PerRoleMapping).GetProperty("UserPersonTypeId", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(PerRoleMapping).GetField("<UserPersonTypeId>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                nullable: true);
            userPersonTypeId.AddAnnotation("Oracle:ValueGenerationStrategy", OracleValueGenerationStrategy.None);
            userPersonTypeId.AddAnnotation("Relational:ColumnName", "USER_PERSON_TYPE_ID");
            userPersonTypeId.AddAnnotation("Relational:ColumnType", "NUMBER(38)");

            return runtimeEntityType;
        }

        public static void CreateAnnotations(RuntimeEntityType runtimeEntityType)
        {
            runtimeEntityType.AddAnnotation("Relational:FunctionName", null);
            runtimeEntityType.AddAnnotation("Relational:Schema", "FUSION");
            runtimeEntityType.AddAnnotation("Relational:SqlQuery", null);
            runtimeEntityType.AddAnnotation("Relational:TableName", "PER_ROLE_MAPPINGS");
            runtimeEntityType.AddAnnotation("Relational:ViewName", null);
            runtimeEntityType.AddAnnotation("Relational:ViewSchema", null);

            Customize(runtimeEntityType);
        }

        static partial void Customize(RuntimeEntityType runtimeEntityType);
    }
}
