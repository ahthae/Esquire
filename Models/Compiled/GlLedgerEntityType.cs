// <auto-generated />
using System;
using System.Reflection;
using Microsoft.EntityFrameworkCore.Metadata;
using Oracle.EntityFrameworkCore.Metadata;
using esquire.Models.Fusion;

#pragma warning disable 219, 612, 618
#nullable enable

namespace esquire.Models.Compiled
{
    internal partial class GlLedgerEntityType
    {
        public static RuntimeEntityType Create(RuntimeModel model, RuntimeEntityType? baseEntityType = null)
        {
            var runtimeEntityType = model.AddEntityType(
                "esquire.Models.Fusion.GlLedger",
                typeof(GlLedger),
                baseEntityType);

            var accountedPeriodType = runtimeEntityType.AddProperty(
                "AccountedPeriodType",
                typeof(string),
                propertyInfo: typeof(GlLedger).GetProperty("AccountedPeriodType", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(GlLedger).GetField("<AccountedPeriodType>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                nullable: true,
                maxLength: 50,
                unicode: false);
            accountedPeriodType.AddAnnotation("Oracle:ValueGenerationStrategy", OracleValueGenerationStrategy.None);
            accountedPeriodType.AddAnnotation("Relational:ColumnName", "ACCOUNTED_PERIOD_TYPE");

            var alcLedgerTypeCode = runtimeEntityType.AddProperty(
                "AlcLedgerTypeCode",
                typeof(string),
                propertyInfo: typeof(GlLedger).GetProperty("AlcLedgerTypeCode", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(GlLedger).GetField("<AlcLedgerTypeCode>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                nullable: true,
                maxLength: 50,
                unicode: false);
            alcLedgerTypeCode.AddAnnotation("Oracle:ValueGenerationStrategy", OracleValueGenerationStrategy.None);
            alcLedgerTypeCode.AddAnnotation("Relational:ColumnName", "ALC_LEDGER_TYPE_CODE");

            var allowIntercompanyPostFlag = runtimeEntityType.AddProperty(
                "AllowIntercompanyPostFlag",
                typeof(string),
                propertyInfo: typeof(GlLedger).GetProperty("AllowIntercompanyPostFlag", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(GlLedger).GetField("<AllowIntercompanyPostFlag>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                nullable: true,
                maxLength: 50,
                unicode: false);
            allowIntercompanyPostFlag.AddAnnotation("Oracle:ValueGenerationStrategy", OracleValueGenerationStrategy.None);
            allowIntercompanyPostFlag.AddAnnotation("Relational:ColumnName", "ALLOW_INTERCOMPANY_POST_FLAG");

            var apDocSequencingOptionFlag = runtimeEntityType.AddProperty(
                "ApDocSequencingOptionFlag",
                typeof(string),
                propertyInfo: typeof(GlLedger).GetProperty("ApDocSequencingOptionFlag", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(GlLedger).GetField("<ApDocSequencingOptionFlag>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                nullable: true,
                maxLength: 50,
                unicode: false);
            apDocSequencingOptionFlag.AddAnnotation("Oracle:ValueGenerationStrategy", OracleValueGenerationStrategy.None);
            apDocSequencingOptionFlag.AddAnnotation("Relational:ColumnName", "AP_DOC_SEQUENCING_OPTION_FLAG");

            var arDocSequencingOptionFlag = runtimeEntityType.AddProperty(
                "ArDocSequencingOptionFlag",
                typeof(string),
                propertyInfo: typeof(GlLedger).GetProperty("ArDocSequencingOptionFlag", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(GlLedger).GetField("<ArDocSequencingOptionFlag>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                nullable: true,
                maxLength: 50,
                unicode: false);
            arDocSequencingOptionFlag.AddAnnotation("Oracle:ValueGenerationStrategy", OracleValueGenerationStrategy.None);
            arDocSequencingOptionFlag.AddAnnotation("Relational:ColumnName", "AR_DOC_SEQUENCING_OPTION_FLAG");

            var attributeCategory = runtimeEntityType.AddProperty(
                "AttributeCategory",
                typeof(string),
                propertyInfo: typeof(GlLedger).GetProperty("AttributeCategory", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(GlLedger).GetField("<AttributeCategory>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                nullable: true,
                maxLength: 50,
                unicode: false);
            attributeCategory.AddAnnotation("Oracle:ValueGenerationStrategy", OracleValueGenerationStrategy.None);
            attributeCategory.AddAnnotation("Relational:ColumnName", "ATTRIBUTE_CATEGORY");

            var automateSecJrnlRevFlag = runtimeEntityType.AddProperty(
                "AutomateSecJrnlRevFlag",
                typeof(string),
                propertyInfo: typeof(GlLedger).GetProperty("AutomateSecJrnlRevFlag", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(GlLedger).GetField("<AutomateSecJrnlRevFlag>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                nullable: true,
                maxLength: 50,
                unicode: false);
            automateSecJrnlRevFlag.AddAnnotation("Oracle:ValueGenerationStrategy", OracleValueGenerationStrategy.None);
            automateSecJrnlRevFlag.AddAnnotation("Relational:ColumnName", "AUTOMATE_SEC_JRNL_REV_FLAG");

            var automaticallyCreatedFlag = runtimeEntityType.AddProperty(
                "AutomaticallyCreatedFlag",
                typeof(string),
                propertyInfo: typeof(GlLedger).GetProperty("AutomaticallyCreatedFlag", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(GlLedger).GetField("<AutomaticallyCreatedFlag>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                nullable: true,
                maxLength: 50,
                unicode: false);
            automaticallyCreatedFlag.AddAnnotation("Oracle:ValueGenerationStrategy", OracleValueGenerationStrategy.None);
            automaticallyCreatedFlag.AddAnnotation("Relational:ColumnName", "AUTOMATICALLY_CREATED_FLAG");

            var autorevAfterOpenPrdFlag = runtimeEntityType.AddProperty(
                "AutorevAfterOpenPrdFlag",
                typeof(string),
                propertyInfo: typeof(GlLedger).GetProperty("AutorevAfterOpenPrdFlag", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(GlLedger).GetField("<AutorevAfterOpenPrdFlag>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                nullable: true,
                maxLength: 50,
                unicode: false);
            autorevAfterOpenPrdFlag.AddAnnotation("Oracle:ValueGenerationStrategy", OracleValueGenerationStrategy.None);
            autorevAfterOpenPrdFlag.AddAnnotation("Relational:ColumnName", "AUTOREV_AFTER_OPEN_PRD_FLAG");

            var balSegColumnName = runtimeEntityType.AddProperty(
                "BalSegColumnName",
                typeof(string),
                propertyInfo: typeof(GlLedger).GetProperty("BalSegColumnName", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(GlLedger).GetField("<BalSegColumnName>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                nullable: true,
                maxLength: 50,
                unicode: false);
            balSegColumnName.AddAnnotation("Oracle:ValueGenerationStrategy", OracleValueGenerationStrategy.None);
            balSegColumnName.AddAnnotation("Relational:ColumnName", "BAL_SEG_COLUMN_NAME");

            var balSegValueOptionCode = runtimeEntityType.AddProperty(
                "BalSegValueOptionCode",
                typeof(string),
                propertyInfo: typeof(GlLedger).GetProperty("BalSegValueOptionCode", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(GlLedger).GetField("<BalSegValueOptionCode>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                nullable: true,
                maxLength: 50,
                unicode: false);
            balSegValueOptionCode.AddAnnotation("Oracle:ValueGenerationStrategy", OracleValueGenerationStrategy.None);
            balSegValueOptionCode.AddAnnotation("Relational:ColumnName", "BAL_SEG_VALUE_OPTION_CODE");

            var balSegValueSetId = runtimeEntityType.AddProperty(
                "BalSegValueSetId",
                typeof(decimal?),
                propertyInfo: typeof(GlLedger).GetProperty("BalSegValueSetId", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(GlLedger).GetField("<BalSegValueSetId>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                nullable: true);
            balSegValueSetId.AddAnnotation("Oracle:ValueGenerationStrategy", OracleValueGenerationStrategy.None);
            balSegValueSetId.AddAnnotation("Relational:ColumnName", "BAL_SEG_VALUE_SET_ID");
            balSegValueSetId.AddAnnotation("Relational:ColumnType", "NUMBER(38)");

            var budgetPeriodAvgRateType = runtimeEntityType.AddProperty(
                "BudgetPeriodAvgRateType",
                typeof(string),
                propertyInfo: typeof(GlLedger).GetProperty("BudgetPeriodAvgRateType", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(GlLedger).GetField("<BudgetPeriodAvgRateType>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                nullable: true,
                maxLength: 50,
                unicode: false);
            budgetPeriodAvgRateType.AddAnnotation("Oracle:ValueGenerationStrategy", OracleValueGenerationStrategy.None);
            budgetPeriodAvgRateType.AddAnnotation("Relational:ColumnName", "BUDGET_PERIOD_AVG_RATE_TYPE");

            var budgetPeriodEndRateType = runtimeEntityType.AddProperty(
                "BudgetPeriodEndRateType",
                typeof(string),
                propertyInfo: typeof(GlLedger).GetProperty("BudgetPeriodEndRateType", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(GlLedger).GetField("<BudgetPeriodEndRateType>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                nullable: true,
                maxLength: 50,
                unicode: false);
            budgetPeriodEndRateType.AddAnnotation("Oracle:ValueGenerationStrategy", OracleValueGenerationStrategy.None);
            budgetPeriodEndRateType.AddAnnotation("Relational:ColumnName", "BUDGET_PERIOD_END_RATE_TYPE");

            var chartOfAccountsId = runtimeEntityType.AddProperty(
                "ChartOfAccountsId",
                typeof(decimal?),
                propertyInfo: typeof(GlLedger).GetProperty("ChartOfAccountsId", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(GlLedger).GetField("<ChartOfAccountsId>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                nullable: true);
            chartOfAccountsId.AddAnnotation("Oracle:ValueGenerationStrategy", OracleValueGenerationStrategy.None);
            chartOfAccountsId.AddAnnotation("Relational:ColumnName", "CHART_OF_ACCOUNTS_ID");
            chartOfAccountsId.AddAnnotation("Relational:ColumnType", "NUMBER(38)");

            var completeFlag = runtimeEntityType.AddProperty(
                "CompleteFlag",
                typeof(string),
                propertyInfo: typeof(GlLedger).GetProperty("CompleteFlag", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(GlLedger).GetField("<CompleteFlag>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                nullable: true,
                maxLength: 50,
                unicode: false);
            completeFlag.AddAnnotation("Oracle:ValueGenerationStrategy", OracleValueGenerationStrategy.None);
            completeFlag.AddAnnotation("Relational:ColumnName", "COMPLETE_FLAG");

            var completionStatusCode = runtimeEntityType.AddProperty(
                "CompletionStatusCode",
                typeof(string),
                propertyInfo: typeof(GlLedger).GetProperty("CompletionStatusCode", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(GlLedger).GetField("<CompletionStatusCode>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                nullable: true,
                maxLength: 50,
                unicode: false);
            completionStatusCode.AddAnnotation("Oracle:ValueGenerationStrategy", OracleValueGenerationStrategy.None);
            completionStatusCode.AddAnnotation("Relational:ColumnName", "COMPLETION_STATUS_CODE");

            var configurationId = runtimeEntityType.AddProperty(
                "ConfigurationId",
                typeof(decimal?),
                propertyInfo: typeof(GlLedger).GetProperty("ConfigurationId", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(GlLedger).GetField("<ConfigurationId>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                nullable: true);
            configurationId.AddAnnotation("Oracle:ValueGenerationStrategy", OracleValueGenerationStrategy.None);
            configurationId.AddAnnotation("Relational:ColumnName", "CONFIGURATION_ID");
            configurationId.AddAnnotation("Relational:ColumnType", "NUMBER(38)");

            var consolidationLedgerFlag = runtimeEntityType.AddProperty(
                "ConsolidationLedgerFlag",
                typeof(string),
                propertyInfo: typeof(GlLedger).GetProperty("ConsolidationLedgerFlag", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(GlLedger).GetField("<ConsolidationLedgerFlag>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                nullable: true,
                maxLength: 50,
                unicode: false);
            consolidationLedgerFlag.AddAnnotation("Oracle:ValueGenerationStrategy", OracleValueGenerationStrategy.None);
            consolidationLedgerFlag.AddAnnotation("Relational:ColumnName", "CONSOLIDATION_LEDGER_FLAG");

            var createJeFlag = runtimeEntityType.AddProperty(
                "CreateJeFlag",
                typeof(string),
                propertyInfo: typeof(GlLedger).GetProperty("CreateJeFlag", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(GlLedger).GetField("<CreateJeFlag>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                nullable: true,
                maxLength: 50,
                unicode: false);
            createJeFlag.AddAnnotation("Oracle:ValueGenerationStrategy", OracleValueGenerationStrategy.None);
            createJeFlag.AddAnnotation("Relational:ColumnName", "CREATE_JE_FLAG");

            var createdBy = runtimeEntityType.AddProperty(
                "CreatedBy",
                typeof(string),
                propertyInfo: typeof(GlLedger).GetProperty("CreatedBy", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(GlLedger).GetField("<CreatedBy>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                nullable: true,
                maxLength: 50,
                unicode: false);
            createdBy.AddAnnotation("Oracle:ValueGenerationStrategy", OracleValueGenerationStrategy.None);
            createdBy.AddAnnotation("Relational:ColumnName", "CREATED_BY");

            var creationDate = runtimeEntityType.AddProperty(
                "CreationDate",
                typeof(DateTime?),
                propertyInfo: typeof(GlLedger).GetProperty("CreationDate", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(GlLedger).GetField("<CreationDate>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                nullable: true);
            creationDate.AddAnnotation("Oracle:ValueGenerationStrategy", OracleValueGenerationStrategy.None);
            creationDate.AddAnnotation("Relational:ColumnName", "CREATION_DATE");
            creationDate.AddAnnotation("Relational:ColumnType", "DATE");

            var criteriaSetId = runtimeEntityType.AddProperty(
                "CriteriaSetId",
                typeof(decimal?),
                propertyInfo: typeof(GlLedger).GetProperty("CriteriaSetId", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(GlLedger).GetField("<CriteriaSetId>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                nullable: true);
            criteriaSetId.AddAnnotation("Oracle:ValueGenerationStrategy", OracleValueGenerationStrategy.None);
            criteriaSetId.AddAnnotation("Relational:ColumnName", "CRITERIA_SET_ID");
            criteriaSetId.AddAnnotation("Relational:ColumnType", "NUMBER(38)");

            var crossLgrClrAccCcid = runtimeEntityType.AddProperty(
                "CrossLgrClrAccCcid",
                typeof(decimal?),
                propertyInfo: typeof(GlLedger).GetProperty("CrossLgrClrAccCcid", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(GlLedger).GetField("<CrossLgrClrAccCcid>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                nullable: true);
            crossLgrClrAccCcid.AddAnnotation("Oracle:ValueGenerationStrategy", OracleValueGenerationStrategy.None);
            crossLgrClrAccCcid.AddAnnotation("Relational:ColumnName", "CROSS_LGR_CLR_ACC_CCID");
            crossLgrClrAccCcid.AddAnnotation("Relational:ColumnType", "NUMBER(38)");

            var cumTransCodeCombinationId = runtimeEntityType.AddProperty(
                "CumTransCodeCombinationId",
                typeof(decimal?),
                propertyInfo: typeof(GlLedger).GetProperty("CumTransCodeCombinationId", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(GlLedger).GetField("<CumTransCodeCombinationId>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                nullable: true);
            cumTransCodeCombinationId.AddAnnotation("Oracle:ValueGenerationStrategy", OracleValueGenerationStrategy.None);
            cumTransCodeCombinationId.AddAnnotation("Relational:ColumnName", "CUM_TRANS_CODE_COMBINATION_ID");
            cumTransCodeCombinationId.AddAnnotation("Relational:ColumnType", "NUMBER(38)");

            var currencyCode = runtimeEntityType.AddProperty(
                "CurrencyCode",
                typeof(string),
                propertyInfo: typeof(GlLedger).GetProperty("CurrencyCode", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(GlLedger).GetField("<CurrencyCode>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                nullable: true,
                maxLength: 50,
                unicode: false);
            currencyCode.AddAnnotation("Oracle:ValueGenerationStrategy", OracleValueGenerationStrategy.None);
            currencyCode.AddAnnotation("Relational:ColumnName", "CURRENCY_CODE");

            var dailyTranslationRateType = runtimeEntityType.AddProperty(
                "DailyTranslationRateType",
                typeof(string),
                propertyInfo: typeof(GlLedger).GetProperty("DailyTranslationRateType", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(GlLedger).GetField("<DailyTranslationRateType>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                nullable: true,
                maxLength: 50,
                unicode: false);
            dailyTranslationRateType.AddAnnotation("Oracle:ValueGenerationStrategy", OracleValueGenerationStrategy.None);
            dailyTranslationRateType.AddAnnotation("Relational:ColumnName", "DAILY_TRANSLATION_RATE_TYPE");

            var description = runtimeEntityType.AddProperty(
                "Description",
                typeof(string),
                propertyInfo: typeof(GlLedger).GetProperty("Description", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(GlLedger).GetField("<Description>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                nullable: true,
                maxLength: 150,
                unicode: false);
            description.AddAnnotation("Oracle:ValueGenerationStrategy", OracleValueGenerationStrategy.None);
            description.AddAnnotation("Relational:ColumnName", "DESCRIPTION");

            var docSequencingOptionCode = runtimeEntityType.AddProperty(
                "DocSequencingOptionCode",
                typeof(string),
                propertyInfo: typeof(GlLedger).GetProperty("DocSequencingOptionCode", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(GlLedger).GetField("<DocSequencingOptionCode>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                nullable: true,
                maxLength: 50,
                unicode: false);
            docSequencingOptionCode.AddAnnotation("Oracle:ValueGenerationStrategy", OracleValueGenerationStrategy.None);
            docSequencingOptionCode.AddAnnotation("Relational:ColumnName", "DOC_SEQUENCING_OPTION_CODE");

            var enableAutomaticTaxFlag = runtimeEntityType.AddProperty(
                "EnableAutomaticTaxFlag",
                typeof(string),
                propertyInfo: typeof(GlLedger).GetProperty("EnableAutomaticTaxFlag", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(GlLedger).GetField("<EnableAutomaticTaxFlag>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                nullable: true,
                maxLength: 50,
                unicode: false);
            enableAutomaticTaxFlag.AddAnnotation("Oracle:ValueGenerationStrategy", OracleValueGenerationStrategy.None);
            enableAutomaticTaxFlag.AddAnnotation("Relational:ColumnName", "ENABLE_AUTOMATIC_TAX_FLAG");

            var enableAverageBalancesFlag = runtimeEntityType.AddProperty(
                "EnableAverageBalancesFlag",
                typeof(string),
                propertyInfo: typeof(GlLedger).GetProperty("EnableAverageBalancesFlag", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(GlLedger).GetField("<EnableAverageBalancesFlag>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                nullable: true,
                maxLength: 50,
                unicode: false);
            enableAverageBalancesFlag.AddAnnotation("Oracle:ValueGenerationStrategy", OracleValueGenerationStrategy.None);
            enableAverageBalancesFlag.AddAnnotation("Relational:ColumnName", "ENABLE_AVERAGE_BALANCES_FLAG");

            var enableBudgetaryControlFlag = runtimeEntityType.AddProperty(
                "EnableBudgetaryControlFlag",
                typeof(string),
                propertyInfo: typeof(GlLedger).GetProperty("EnableBudgetaryControlFlag", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(GlLedger).GetField("<EnableBudgetaryControlFlag>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                nullable: true,
                maxLength: 50,
                unicode: false);
            enableBudgetaryControlFlag.AddAnnotation("Oracle:ValueGenerationStrategy", OracleValueGenerationStrategy.None);
            enableBudgetaryControlFlag.AddAnnotation("Relational:ColumnName", "ENABLE_BUDGETARY_CONTROL_FLAG");

            var enableJeApprovalFlag = runtimeEntityType.AddProperty(
                "EnableJeApprovalFlag",
                typeof(string),
                propertyInfo: typeof(GlLedger).GetProperty("EnableJeApprovalFlag", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(GlLedger).GetField("<EnableJeApprovalFlag>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                nullable: true,
                maxLength: 50,
                unicode: false);
            enableJeApprovalFlag.AddAnnotation("Oracle:ValueGenerationStrategy", OracleValueGenerationStrategy.None);
            enableJeApprovalFlag.AddAnnotation("Relational:ColumnName", "ENABLE_JE_APPROVAL_FLAG");

            var enableReconciliationFlag = runtimeEntityType.AddProperty(
                "EnableReconciliationFlag",
                typeof(string),
                propertyInfo: typeof(GlLedger).GetProperty("EnableReconciliationFlag", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(GlLedger).GetField("<EnableReconciliationFlag>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                nullable: true,
                maxLength: 50,
                unicode: false);
            enableReconciliationFlag.AddAnnotation("Oracle:ValueGenerationStrategy", OracleValueGenerationStrategy.None);
            enableReconciliationFlag.AddAnnotation("Relational:ColumnName", "ENABLE_RECONCILIATION_FLAG");

            var enableRevalSsTrackFlag = runtimeEntityType.AddProperty(
                "EnableRevalSsTrackFlag",
                typeof(string),
                propertyInfo: typeof(GlLedger).GetProperty("EnableRevalSsTrackFlag", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(GlLedger).GetField("<EnableRevalSsTrackFlag>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                nullable: true,
                maxLength: 50,
                unicode: false);
            enableRevalSsTrackFlag.AddAnnotation("Oracle:ValueGenerationStrategy", OracleValueGenerationStrategy.None);
            enableRevalSsTrackFlag.AddAnnotation("Relational:ColumnName", "ENABLE_REVAL_SS_TRACK_FLAG");

            var enableSecondaryTrackFlag = runtimeEntityType.AddProperty(
                "EnableSecondaryTrackFlag",
                typeof(string),
                propertyInfo: typeof(GlLedger).GetProperty("EnableSecondaryTrackFlag", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(GlLedger).GetField("<EnableSecondaryTrackFlag>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                nullable: true,
                maxLength: 50,
                unicode: false);
            enableSecondaryTrackFlag.AddAnnotation("Oracle:ValueGenerationStrategy", OracleValueGenerationStrategy.None);
            enableSecondaryTrackFlag.AddAnnotation("Relational:ColumnName", "ENABLE_SECONDARY_TRACK_FLAG");

            var enfSeqDateCorrelationCode = runtimeEntityType.AddProperty(
                "EnfSeqDateCorrelationCode",
                typeof(string),
                propertyInfo: typeof(GlLedger).GetProperty("EnfSeqDateCorrelationCode", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(GlLedger).GetField("<EnfSeqDateCorrelationCode>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                nullable: true,
                maxLength: 50,
                unicode: false);
            enfSeqDateCorrelationCode.AddAnnotation("Oracle:ValueGenerationStrategy", OracleValueGenerationStrategy.None);
            enfSeqDateCorrelationCode.AddAnnotation("Relational:ColumnName", "ENF_SEQ_DATE_CORRELATION_CODE");

            var firstLedgerPeriodName = runtimeEntityType.AddProperty(
                "FirstLedgerPeriodName",
                typeof(string),
                propertyInfo: typeof(GlLedger).GetProperty("FirstLedgerPeriodName", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(GlLedger).GetField("<FirstLedgerPeriodName>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                nullable: true,
                maxLength: 50,
                unicode: false);
            firstLedgerPeriodName.AddAnnotation("Oracle:ValueGenerationStrategy", OracleValueGenerationStrategy.None);
            firstLedgerPeriodName.AddAnnotation("Relational:ColumnName", "FIRST_LEDGER_PERIOD_NAME");

            var futureEnterablePeriodsLimit = runtimeEntityType.AddProperty(
                "FutureEnterablePeriodsLimit",
                typeof(decimal?),
                propertyInfo: typeof(GlLedger).GetProperty("FutureEnterablePeriodsLimit", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(GlLedger).GetField("<FutureEnterablePeriodsLimit>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                nullable: true);
            futureEnterablePeriodsLimit.AddAnnotation("Oracle:ValueGenerationStrategy", OracleValueGenerationStrategy.None);
            futureEnterablePeriodsLimit.AddAnnotation("Relational:ColumnName", "FUTURE_ENTERABLE_PERIODS_LIMIT");
            futureEnterablePeriodsLimit.AddAnnotation("Relational:ColumnType", "NUMBER(38)");

            var implicitAccessSetId = runtimeEntityType.AddProperty(
                "ImplicitAccessSetId",
                typeof(decimal?),
                propertyInfo: typeof(GlLedger).GetProperty("ImplicitAccessSetId", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(GlLedger).GetField("<ImplicitAccessSetId>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                nullable: true);
            implicitAccessSetId.AddAnnotation("Oracle:ValueGenerationStrategy", OracleValueGenerationStrategy.None);
            implicitAccessSetId.AddAnnotation("Relational:ColumnName", "IMPLICIT_ACCESS_SET_ID");
            implicitAccessSetId.AddAnnotation("Relational:ColumnType", "NUMBER(38)");

            var implicitLedgerSetId = runtimeEntityType.AddProperty(
                "ImplicitLedgerSetId",
                typeof(decimal?),
                propertyInfo: typeof(GlLedger).GetProperty("ImplicitLedgerSetId", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(GlLedger).GetField("<ImplicitLedgerSetId>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                nullable: true);
            implicitLedgerSetId.AddAnnotation("Oracle:ValueGenerationStrategy", OracleValueGenerationStrategy.None);
            implicitLedgerSetId.AddAnnotation("Relational:ColumnName", "IMPLICIT_LEDGER_SET_ID");
            implicitLedgerSetId.AddAnnotation("Relational:ColumnType", "NUMBER(38)");

            var intercoGainLossCcid = runtimeEntityType.AddProperty(
                "IntercoGainLossCcid",
                typeof(decimal?),
                propertyInfo: typeof(GlLedger).GetProperty("IntercoGainLossCcid", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(GlLedger).GetField("<IntercoGainLossCcid>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                nullable: true);
            intercoGainLossCcid.AddAnnotation("Oracle:ValueGenerationStrategy", OracleValueGenerationStrategy.None);
            intercoGainLossCcid.AddAnnotation("Relational:ColumnName", "INTERCO_GAIN_LOSS_CCID");
            intercoGainLossCcid.AddAnnotation("Relational:ColumnType", "NUMBER(38)");

            var jrnlsGroupByDateFlag = runtimeEntityType.AddProperty(
                "JrnlsGroupByDateFlag",
                typeof(string),
                propertyInfo: typeof(GlLedger).GetProperty("JrnlsGroupByDateFlag", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(GlLedger).GetField("<JrnlsGroupByDateFlag>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                nullable: true,
                maxLength: 50,
                unicode: false);
            jrnlsGroupByDateFlag.AddAnnotation("Oracle:ValueGenerationStrategy", OracleValueGenerationStrategy.None);
            jrnlsGroupByDateFlag.AddAnnotation("Relational:ColumnName", "JRNLS_GROUP_BY_DATE_FLAG");

            var lastUpdateDate = runtimeEntityType.AddProperty(
                "LastUpdateDate",
                typeof(DateTime?),
                propertyInfo: typeof(GlLedger).GetProperty("LastUpdateDate", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(GlLedger).GetField("<LastUpdateDate>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                nullable: true);
            lastUpdateDate.AddAnnotation("Oracle:ValueGenerationStrategy", OracleValueGenerationStrategy.None);
            lastUpdateDate.AddAnnotation("Relational:ColumnName", "LAST_UPDATE_DATE");
            lastUpdateDate.AddAnnotation("Relational:ColumnType", "DATE");

            var lastUpdateLogin = runtimeEntityType.AddProperty(
                "LastUpdateLogin",
                typeof(string),
                propertyInfo: typeof(GlLedger).GetProperty("LastUpdateLogin", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(GlLedger).GetField("<LastUpdateLogin>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                nullable: true,
                maxLength: 50,
                unicode: false);
            lastUpdateLogin.AddAnnotation("Oracle:ValueGenerationStrategy", OracleValueGenerationStrategy.None);
            lastUpdateLogin.AddAnnotation("Relational:ColumnName", "LAST_UPDATE_LOGIN");

            var lastUpdatedBy = runtimeEntityType.AddProperty(
                "LastUpdatedBy",
                typeof(string),
                propertyInfo: typeof(GlLedger).GetProperty("LastUpdatedBy", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(GlLedger).GetField("<LastUpdatedBy>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                nullable: true,
                maxLength: 50,
                unicode: false);
            lastUpdatedBy.AddAnnotation("Oracle:ValueGenerationStrategy", OracleValueGenerationStrategy.None);
            lastUpdatedBy.AddAnnotation("Relational:ColumnName", "LAST_UPDATED_BY");

            var latestEncumbranceYear = runtimeEntityType.AddProperty(
                "LatestEncumbranceYear",
                typeof(string),
                propertyInfo: typeof(GlLedger).GetProperty("LatestEncumbranceYear", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(GlLedger).GetField("<LatestEncumbranceYear>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                nullable: true,
                maxLength: 50,
                unicode: false);
            latestEncumbranceYear.AddAnnotation("Oracle:ValueGenerationStrategy", OracleValueGenerationStrategy.None);
            latestEncumbranceYear.AddAnnotation("Relational:ColumnName", "LATEST_ENCUMBRANCE_YEAR");

            var latestOpenedPeriodName = runtimeEntityType.AddProperty(
                "LatestOpenedPeriodName",
                typeof(string),
                propertyInfo: typeof(GlLedger).GetProperty("LatestOpenedPeriodName", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(GlLedger).GetField("<LatestOpenedPeriodName>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                nullable: true,
                maxLength: 50,
                unicode: false);
            latestOpenedPeriodName.AddAnnotation("Oracle:ValueGenerationStrategy", OracleValueGenerationStrategy.None);
            latestOpenedPeriodName.AddAnnotation("Relational:ColumnName", "LATEST_OPENED_PERIOD_NAME");

            var leLedgerTypeCode = runtimeEntityType.AddProperty(
                "LeLedgerTypeCode",
                typeof(string),
                propertyInfo: typeof(GlLedger).GetProperty("LeLedgerTypeCode", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(GlLedger).GetField("<LeLedgerTypeCode>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                nullable: true,
                maxLength: 50,
                unicode: false);
            leLedgerTypeCode.AddAnnotation("Oracle:ValueGenerationStrategy", OracleValueGenerationStrategy.None);
            leLedgerTypeCode.AddAnnotation("Relational:ColumnName", "LE_LEDGER_TYPE_CODE");

            var ledgerAttributes = runtimeEntityType.AddProperty(
                "LedgerAttributes",
                typeof(string),
                propertyInfo: typeof(GlLedger).GetProperty("LedgerAttributes", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(GlLedger).GetField("<LedgerAttributes>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                nullable: true,
                maxLength: 50,
                unicode: false);
            ledgerAttributes.AddAnnotation("Oracle:ValueGenerationStrategy", OracleValueGenerationStrategy.None);
            ledgerAttributes.AddAnnotation("Relational:ColumnName", "LEDGER_ATTRIBUTES");

            var ledgerCategoryCode = runtimeEntityType.AddProperty(
                "LedgerCategoryCode",
                typeof(string),
                propertyInfo: typeof(GlLedger).GetProperty("LedgerCategoryCode", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(GlLedger).GetField("<LedgerCategoryCode>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                nullable: true,
                maxLength: 50,
                unicode: false);
            ledgerCategoryCode.AddAnnotation("Oracle:ValueGenerationStrategy", OracleValueGenerationStrategy.None);
            ledgerCategoryCode.AddAnnotation("Relational:ColumnName", "LEDGER_CATEGORY_CODE");

            var ledgerId = runtimeEntityType.AddProperty(
                "LedgerId",
                typeof(decimal?),
                propertyInfo: typeof(GlLedger).GetProperty("LedgerId", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(GlLedger).GetField("<LedgerId>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                nullable: true);
            ledgerId.AddAnnotation("Oracle:ValueGenerationStrategy", OracleValueGenerationStrategy.None);
            ledgerId.AddAnnotation("Relational:ColumnName", "LEDGER_ID");
            ledgerId.AddAnnotation("Relational:ColumnType", "NUMBER(38)");

            var mgtSegColumnName = runtimeEntityType.AddProperty(
                "MgtSegColumnName",
                typeof(string),
                propertyInfo: typeof(GlLedger).GetProperty("MgtSegColumnName", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(GlLedger).GetField("<MgtSegColumnName>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                nullable: true,
                maxLength: 50,
                unicode: false);
            mgtSegColumnName.AddAnnotation("Oracle:ValueGenerationStrategy", OracleValueGenerationStrategy.None);
            mgtSegColumnName.AddAnnotation("Relational:ColumnName", "MGT_SEG_COLUMN_NAME");

            var mgtSegValueOptionCode = runtimeEntityType.AddProperty(
                "MgtSegValueOptionCode",
                typeof(string),
                propertyInfo: typeof(GlLedger).GetProperty("MgtSegValueOptionCode", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(GlLedger).GetField("<MgtSegValueOptionCode>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                nullable: true,
                maxLength: 50,
                unicode: false);
            mgtSegValueOptionCode.AddAnnotation("Oracle:ValueGenerationStrategy", OracleValueGenerationStrategy.None);
            mgtSegValueOptionCode.AddAnnotation("Relational:ColumnName", "MGT_SEG_VALUE_OPTION_CODE");

            var mgtSegValueSetId = runtimeEntityType.AddProperty(
                "MgtSegValueSetId",
                typeof(decimal?),
                propertyInfo: typeof(GlLedger).GetProperty("MgtSegValueSetId", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(GlLedger).GetField("<MgtSegValueSetId>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                nullable: true);
            mgtSegValueSetId.AddAnnotation("Oracle:ValueGenerationStrategy", OracleValueGenerationStrategy.None);
            mgtSegValueSetId.AddAnnotation("Relational:ColumnName", "MGT_SEG_VALUE_SET_ID");
            mgtSegValueSetId.AddAnnotation("Relational:ColumnType", "NUMBER(38)");

            var minimumThresholdAmount = runtimeEntityType.AddProperty(
                "MinimumThresholdAmount",
                typeof(string),
                propertyInfo: typeof(GlLedger).GetProperty("MinimumThresholdAmount", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(GlLedger).GetField("<MinimumThresholdAmount>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                nullable: true,
                maxLength: 50,
                unicode: false);
            minimumThresholdAmount.AddAnnotation("Oracle:ValueGenerationStrategy", OracleValueGenerationStrategy.None);
            minimumThresholdAmount.AddAnnotation("Relational:ColumnName", "MINIMUM_THRESHOLD_AMOUNT");

            var name = runtimeEntityType.AddProperty(
                "Name",
                typeof(string),
                propertyInfo: typeof(GlLedger).GetProperty("Name", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(GlLedger).GetField("<Name>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                nullable: true,
                maxLength: 50,
                unicode: false);
            name.AddAnnotation("Oracle:ValueGenerationStrategy", OracleValueGenerationStrategy.None);
            name.AddAnnotation("Relational:ColumnName", "NAME");

            var netClosingBalFlag = runtimeEntityType.AddProperty(
                "NetClosingBalFlag",
                typeof(string),
                propertyInfo: typeof(GlLedger).GetProperty("NetClosingBalFlag", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(GlLedger).GetField("<NetClosingBalFlag>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                nullable: true,
                maxLength: 50,
                unicode: false);
            netClosingBalFlag.AddAnnotation("Oracle:ValueGenerationStrategy", OracleValueGenerationStrategy.None);
            netClosingBalFlag.AddAnnotation("Relational:ColumnName", "NET_CLOSING_BAL_FLAG");

            var netIncomeCodeCombinationId = runtimeEntityType.AddProperty(
                "NetIncomeCodeCombinationId",
                typeof(decimal?),
                propertyInfo: typeof(GlLedger).GetProperty("NetIncomeCodeCombinationId", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(GlLedger).GetField("<NetIncomeCodeCombinationId>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                nullable: true);
            netIncomeCodeCombinationId.AddAnnotation("Oracle:ValueGenerationStrategy", OracleValueGenerationStrategy.None);
            netIncomeCodeCombinationId.AddAnnotation("Relational:ColumnName", "NET_INCOME_CODE_COMBINATION_ID");
            netIncomeCodeCombinationId.AddAnnotation("Relational:ColumnType", "NUMBER(38)");

            var numberOfProcessors = runtimeEntityType.AddProperty(
                "NumberOfProcessors",
                typeof(string),
                propertyInfo: typeof(GlLedger).GetProperty("NumberOfProcessors", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(GlLedger).GetField("<NumberOfProcessors>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                nullable: true,
                maxLength: 50,
                unicode: false);
            numberOfProcessors.AddAnnotation("Oracle:ValueGenerationStrategy", OracleValueGenerationStrategy.None);
            numberOfProcessors.AddAnnotation("Relational:ColumnName", "NUMBER_OF_PROCESSORS");

            var objectTypeCode = runtimeEntityType.AddProperty(
                "ObjectTypeCode",
                typeof(string),
                propertyInfo: typeof(GlLedger).GetProperty("ObjectTypeCode", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(GlLedger).GetField("<ObjectTypeCode>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                nullable: true,
                maxLength: 50,
                unicode: false);
            objectTypeCode.AddAnnotation("Oracle:ValueGenerationStrategy", OracleValueGenerationStrategy.None);
            objectTypeCode.AddAnnotation("Relational:ColumnName", "OBJECT_TYPE_CODE");

            var objectVersionNumber = runtimeEntityType.AddProperty(
                "ObjectVersionNumber",
                typeof(decimal?),
                propertyInfo: typeof(GlLedger).GetProperty("ObjectVersionNumber", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(GlLedger).GetField("<ObjectVersionNumber>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                nullable: true);
            objectVersionNumber.AddAnnotation("Oracle:ValueGenerationStrategy", OracleValueGenerationStrategy.None);
            objectVersionNumber.AddAnnotation("Relational:ColumnName", "OBJECT_VERSION_NUMBER");
            objectVersionNumber.AddAnnotation("Relational:ColumnType", "NUMBER(38)");

            var periodAverageRateType = runtimeEntityType.AddProperty(
                "PeriodAverageRateType",
                typeof(string),
                propertyInfo: typeof(GlLedger).GetProperty("PeriodAverageRateType", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(GlLedger).GetField("<PeriodAverageRateType>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                nullable: true,
                maxLength: 50,
                unicode: false);
            periodAverageRateType.AddAnnotation("Oracle:ValueGenerationStrategy", OracleValueGenerationStrategy.None);
            periodAverageRateType.AddAnnotation("Relational:ColumnName", "PERIOD_AVERAGE_RATE_TYPE");

            var periodEndRateType = runtimeEntityType.AddProperty(
                "PeriodEndRateType",
                typeof(string),
                propertyInfo: typeof(GlLedger).GetProperty("PeriodEndRateType", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(GlLedger).GetField("<PeriodEndRateType>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                nullable: true,
                maxLength: 50,
                unicode: false);
            periodEndRateType.AddAnnotation("Oracle:ValueGenerationStrategy", OracleValueGenerationStrategy.None);
            periodEndRateType.AddAnnotation("Relational:ColumnName", "PERIOD_END_RATE_TYPE");

            var periodSetName = runtimeEntityType.AddProperty(
                "PeriodSetName",
                typeof(string),
                propertyInfo: typeof(GlLedger).GetProperty("PeriodSetName", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(GlLedger).GetField("<PeriodSetName>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                nullable: true,
                maxLength: 50,
                unicode: false);
            periodSetName.AddAnnotation("Oracle:ValueGenerationStrategy", OracleValueGenerationStrategy.None);
            periodSetName.AddAnnotation("Relational:ColumnName", "PERIOD_SET_NAME");

            var popUpStatAccountFlag = runtimeEntityType.AddProperty(
                "PopUpStatAccountFlag",
                typeof(string),
                propertyInfo: typeof(GlLedger).GetProperty("PopUpStatAccountFlag", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(GlLedger).GetField("<PopUpStatAccountFlag>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                nullable: true,
                maxLength: 50,
                unicode: false);
            popUpStatAccountFlag.AddAnnotation("Oracle:ValueGenerationStrategy", OracleValueGenerationStrategy.None);
            popUpStatAccountFlag.AddAnnotation("Relational:ColumnName", "POP_UP_STAT_ACCOUNT_FLAG");

            var priorPrdNotificationFlag = runtimeEntityType.AddProperty(
                "PriorPrdNotificationFlag",
                typeof(string),
                propertyInfo: typeof(GlLedger).GetProperty("PriorPrdNotificationFlag", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(GlLedger).GetField("<PriorPrdNotificationFlag>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                nullable: true,
                maxLength: 50,
                unicode: false);
            priorPrdNotificationFlag.AddAnnotation("Oracle:ValueGenerationStrategy", OracleValueGenerationStrategy.None);
            priorPrdNotificationFlag.AddAnnotation("Relational:ColumnName", "PRIOR_PRD_NOTIFICATION_FLAG");

            var processingUnitSize = runtimeEntityType.AddProperty(
                "ProcessingUnitSize",
                typeof(string),
                propertyInfo: typeof(GlLedger).GetProperty("ProcessingUnitSize", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(GlLedger).GetField("<ProcessingUnitSize>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                nullable: true,
                maxLength: 50,
                unicode: false);
            processingUnitSize.AddAnnotation("Oracle:ValueGenerationStrategy", OracleValueGenerationStrategy.None);
            processingUnitSize.AddAnnotation("Relational:ColumnName", "PROCESSING_UNIT_SIZE");

            var releaseUpgradeFrom = runtimeEntityType.AddProperty(
                "ReleaseUpgradeFrom",
                typeof(string),
                propertyInfo: typeof(GlLedger).GetProperty("ReleaseUpgradeFrom", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(GlLedger).GetField("<ReleaseUpgradeFrom>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                nullable: true,
                maxLength: 50,
                unicode: false);
            releaseUpgradeFrom.AddAnnotation("Oracle:ValueGenerationStrategy", OracleValueGenerationStrategy.None);
            releaseUpgradeFrom.AddAnnotation("Relational:ColumnName", "RELEASE_UPGRADE_FROM");

            var requireBudgetJournalsFlag = runtimeEntityType.AddProperty(
                "RequireBudgetJournalsFlag",
                typeof(string),
                propertyInfo: typeof(GlLedger).GetProperty("RequireBudgetJournalsFlag", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(GlLedger).GetField("<RequireBudgetJournalsFlag>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                nullable: true,
                maxLength: 50,
                unicode: false);
            requireBudgetJournalsFlag.AddAnnotation("Oracle:ValueGenerationStrategy", OracleValueGenerationStrategy.None);
            requireBudgetJournalsFlag.AddAnnotation("Relational:ColumnName", "REQUIRE_BUDGET_JOURNALS_FLAG");

            var resEncumbCodeCombinationId = runtimeEntityType.AddProperty(
                "ResEncumbCodeCombinationId",
                typeof(decimal?),
                propertyInfo: typeof(GlLedger).GetProperty("ResEncumbCodeCombinationId", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(GlLedger).GetField("<ResEncumbCodeCombinationId>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                nullable: true);
            resEncumbCodeCombinationId.AddAnnotation("Oracle:ValueGenerationStrategy", OracleValueGenerationStrategy.None);
            resEncumbCodeCombinationId.AddAnnotation("Relational:ColumnName", "RES_ENCUMB_CODE_COMBINATION_ID");
            resEncumbCodeCombinationId.AddAnnotation("Relational:ColumnType", "NUMBER(38)");

            var retEarnCodeCombinationId = runtimeEntityType.AddProperty(
                "RetEarnCodeCombinationId",
                typeof(decimal?),
                propertyInfo: typeof(GlLedger).GetProperty("RetEarnCodeCombinationId", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(GlLedger).GetField("<RetEarnCodeCombinationId>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                nullable: true);
            retEarnCodeCombinationId.AddAnnotation("Oracle:ValueGenerationStrategy", OracleValueGenerationStrategy.None);
            retEarnCodeCombinationId.AddAnnotation("Relational:ColumnName", "RET_EARN_CODE_COMBINATION_ID");
            retEarnCodeCombinationId.AddAnnotation("Relational:ColumnType", "NUMBER(38)");

            var revalFromPriLgrCurr = runtimeEntityType.AddProperty(
                "RevalFromPriLgrCurr",
                typeof(string),
                propertyInfo: typeof(GlLedger).GetProperty("RevalFromPriLgrCurr", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(GlLedger).GetField("<RevalFromPriLgrCurr>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                nullable: true,
                maxLength: 50,
                unicode: false);
            revalFromPriLgrCurr.AddAnnotation("Oracle:ValueGenerationStrategy", OracleValueGenerationStrategy.None);
            revalFromPriLgrCurr.AddAnnotation("Relational:ColumnName", "REVAL_FROM_PRI_LGR_CURR");

            var roundingCodeCombinationId = runtimeEntityType.AddProperty(
                "RoundingCodeCombinationId",
                typeof(decimal?),
                propertyInfo: typeof(GlLedger).GetProperty("RoundingCodeCombinationId", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(GlLedger).GetField("<RoundingCodeCombinationId>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                nullable: true);
            roundingCodeCombinationId.AddAnnotation("Oracle:ValueGenerationStrategy", OracleValueGenerationStrategy.None);
            roundingCodeCombinationId.AddAnnotation("Relational:ColumnName", "ROUNDING_CODE_COMBINATION_ID");
            roundingCodeCombinationId.AddAnnotation("Relational:ColumnType", "NUMBER(38)");

            var sequencingModeCode = runtimeEntityType.AddProperty(
                "SequencingModeCode",
                typeof(string),
                propertyInfo: typeof(GlLedger).GetProperty("SequencingModeCode", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(GlLedger).GetField("<SequencingModeCode>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                nullable: true,
                maxLength: 50,
                unicode: false);
            sequencingModeCode.AddAnnotation("Oracle:ValueGenerationStrategy", OracleValueGenerationStrategy.None);
            sequencingModeCode.AddAnnotation("Relational:ColumnName", "SEQUENCING_MODE_CODE");

            var shortName = runtimeEntityType.AddProperty(
                "ShortName",
                typeof(decimal?),
                propertyInfo: typeof(GlLedger).GetProperty("ShortName", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(GlLedger).GetField("<ShortName>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                nullable: true);
            shortName.AddAnnotation("Oracle:ValueGenerationStrategy", OracleValueGenerationStrategy.None);
            shortName.AddAnnotation("Relational:ColumnName", "SHORT_NAME");
            shortName.AddAnnotation("Relational:ColumnType", "FLOAT");

            var slaAccountingMethodCode = runtimeEntityType.AddProperty(
                "SlaAccountingMethodCode",
                typeof(string),
                propertyInfo: typeof(GlLedger).GetProperty("SlaAccountingMethodCode", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(GlLedger).GetField("<SlaAccountingMethodCode>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                nullable: true,
                maxLength: 50,
                unicode: false);
            slaAccountingMethodCode.AddAnnotation("Oracle:ValueGenerationStrategy", OracleValueGenerationStrategy.None);
            slaAccountingMethodCode.AddAnnotation("Relational:ColumnName", "SLA_ACCOUNTING_METHOD_CODE");

            var slaAccountingMethodType = runtimeEntityType.AddProperty(
                "SlaAccountingMethodType",
                typeof(string),
                propertyInfo: typeof(GlLedger).GetProperty("SlaAccountingMethodType", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(GlLedger).GetField("<SlaAccountingMethodType>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                nullable: true,
                maxLength: 50,
                unicode: false);
            slaAccountingMethodType.AddAnnotation("Oracle:ValueGenerationStrategy", OracleValueGenerationStrategy.None);
            slaAccountingMethodType.AddAnnotation("Relational:ColumnName", "SLA_ACCOUNTING_METHOD_TYPE");

            var slaBalByLedgerCurrFlag = runtimeEntityType.AddProperty(
                "SlaBalByLedgerCurrFlag",
                typeof(string),
                propertyInfo: typeof(GlLedger).GetProperty("SlaBalByLedgerCurrFlag", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(GlLedger).GetField("<SlaBalByLedgerCurrFlag>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                nullable: true,
                maxLength: 50,
                unicode: false);
            slaBalByLedgerCurrFlag.AddAnnotation("Oracle:ValueGenerationStrategy", OracleValueGenerationStrategy.None);
            slaBalByLedgerCurrFlag.AddAnnotation("Relational:ColumnName", "SLA_BAL_BY_LEDGER_CURR_FLAG");

            var slaDescriptionLanguage = runtimeEntityType.AddProperty(
                "SlaDescriptionLanguage",
                typeof(string),
                propertyInfo: typeof(GlLedger).GetProperty("SlaDescriptionLanguage", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(GlLedger).GetField("<SlaDescriptionLanguage>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                nullable: true,
                maxLength: 50,
                unicode: false);
            slaDescriptionLanguage.AddAnnotation("Oracle:ValueGenerationStrategy", OracleValueGenerationStrategy.None);
            slaDescriptionLanguage.AddAnnotation("Relational:ColumnName", "SLA_DESCRIPTION_LANGUAGE");

            var slaEnteredCurBalSusCcid = runtimeEntityType.AddProperty(
                "SlaEnteredCurBalSusCcid",
                typeof(decimal?),
                propertyInfo: typeof(GlLedger).GetProperty("SlaEnteredCurBalSusCcid", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(GlLedger).GetField("<SlaEnteredCurBalSusCcid>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                nullable: true);
            slaEnteredCurBalSusCcid.AddAnnotation("Oracle:ValueGenerationStrategy", OracleValueGenerationStrategy.None);
            slaEnteredCurBalSusCcid.AddAnnotation("Relational:ColumnName", "SLA_ENTERED_CUR_BAL_SUS_CCID");
            slaEnteredCurBalSusCcid.AddAnnotation("Relational:ColumnType", "NUMBER(38)");

            var slaLedgerCashBasisFlag = runtimeEntityType.AddProperty(
                "SlaLedgerCashBasisFlag",
                typeof(string),
                propertyInfo: typeof(GlLedger).GetProperty("SlaLedgerCashBasisFlag", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(GlLedger).GetField("<SlaLedgerCashBasisFlag>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                nullable: true,
                maxLength: 50,
                unicode: false);
            slaLedgerCashBasisFlag.AddAnnotation("Oracle:ValueGenerationStrategy", OracleValueGenerationStrategy.None);
            slaLedgerCashBasisFlag.AddAnnotation("Relational:ColumnName", "SLA_LEDGER_CASH_BASIS_FLAG");

            var slaLedgerCurBalSusCcid = runtimeEntityType.AddProperty(
                "SlaLedgerCurBalSusCcid",
                typeof(decimal?),
                propertyInfo: typeof(GlLedger).GetProperty("SlaLedgerCurBalSusCcid", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(GlLedger).GetField("<SlaLedgerCurBalSusCcid>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                nullable: true);
            slaLedgerCurBalSusCcid.AddAnnotation("Oracle:ValueGenerationStrategy", OracleValueGenerationStrategy.None);
            slaLedgerCurBalSusCcid.AddAnnotation("Relational:ColumnName", "SLA_LEDGER_CUR_BAL_SUS_CCID");
            slaLedgerCurBalSusCcid.AddAnnotation("Relational:ColumnType", "NUMBER(38)");

            var slaSequencingFlag = runtimeEntityType.AddProperty(
                "SlaSequencingFlag",
                typeof(string),
                propertyInfo: typeof(GlLedger).GetProperty("SlaSequencingFlag", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(GlLedger).GetField("<SlaSequencingFlag>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                nullable: true,
                maxLength: 50,
                unicode: false);
            slaSequencingFlag.AddAnnotation("Oracle:ValueGenerationStrategy", OracleValueGenerationStrategy.None);
            slaSequencingFlag.AddAnnotation("Relational:ColumnName", "SLA_SEQUENCING_FLAG");

            var strictPeriodCloseFlag = runtimeEntityType.AddProperty(
                "StrictPeriodCloseFlag",
                typeof(string),
                propertyInfo: typeof(GlLedger).GetProperty("StrictPeriodCloseFlag", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(GlLedger).GetField("<StrictPeriodCloseFlag>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                nullable: true,
                maxLength: 50,
                unicode: false);
            strictPeriodCloseFlag.AddAnnotation("Oracle:ValueGenerationStrategy", OracleValueGenerationStrategy.None);
            strictPeriodCloseFlag.AddAnnotation("Relational:ColumnName", "STRICT_PERIOD_CLOSE_FLAG");

            var suspenseAllowedFlag = runtimeEntityType.AddProperty(
                "SuspenseAllowedFlag",
                typeof(string),
                propertyInfo: typeof(GlLedger).GetProperty("SuspenseAllowedFlag", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(GlLedger).GetField("<SuspenseAllowedFlag>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                nullable: true,
                maxLength: 50,
                unicode: false);
            suspenseAllowedFlag.AddAnnotation("Oracle:ValueGenerationStrategy", OracleValueGenerationStrategy.None);
            suspenseAllowedFlag.AddAnnotation("Relational:ColumnName", "SUSPENSE_ALLOWED_FLAG");

            var thresholdAmount = runtimeEntityType.AddProperty(
                "ThresholdAmount",
                typeof(string),
                propertyInfo: typeof(GlLedger).GetProperty("ThresholdAmount", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(GlLedger).GetField("<ThresholdAmount>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                nullable: true,
                maxLength: 50,
                unicode: false);
            thresholdAmount.AddAnnotation("Oracle:ValueGenerationStrategy", OracleValueGenerationStrategy.None);
            thresholdAmount.AddAnnotation("Relational:ColumnName", "THRESHOLD_AMOUNT");

            var trackRoundingImbalanceFlag = runtimeEntityType.AddProperty(
                "TrackRoundingImbalanceFlag",
                typeof(string),
                propertyInfo: typeof(GlLedger).GetProperty("TrackRoundingImbalanceFlag", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(GlLedger).GetField("<TrackRoundingImbalanceFlag>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                nullable: true,
                maxLength: 50,
                unicode: false);
            trackRoundingImbalanceFlag.AddAnnotation("Oracle:ValueGenerationStrategy", OracleValueGenerationStrategy.None);
            trackRoundingImbalanceFlag.AddAnnotation("Relational:ColumnName", "TRACK_ROUNDING_IMBALANCE_FLAG");

            var transactionCalendarId = runtimeEntityType.AddProperty(
                "TransactionCalendarId",
                typeof(decimal?),
                propertyInfo: typeof(GlLedger).GetProperty("TransactionCalendarId", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(GlLedger).GetField("<TransactionCalendarId>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                nullable: true);
            transactionCalendarId.AddAnnotation("Oracle:ValueGenerationStrategy", OracleValueGenerationStrategy.None);
            transactionCalendarId.AddAnnotation("Relational:ColumnName", "TRANSACTION_CALENDAR_ID");
            transactionCalendarId.AddAnnotation("Relational:ColumnType", "NUMBER(38)");

            var translateEodFlag = runtimeEntityType.AddProperty(
                "TranslateEodFlag",
                typeof(string),
                propertyInfo: typeof(GlLedger).GetProperty("TranslateEodFlag", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(GlLedger).GetField("<TranslateEodFlag>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                nullable: true,
                maxLength: 50,
                unicode: false);
            translateEodFlag.AddAnnotation("Oracle:ValueGenerationStrategy", OracleValueGenerationStrategy.None);
            translateEodFlag.AddAnnotation("Relational:ColumnName", "TRANSLATE_EOD_FLAG");

            var translateQatdFlag = runtimeEntityType.AddProperty(
                "TranslateQatdFlag",
                typeof(string),
                propertyInfo: typeof(GlLedger).GetProperty("TranslateQatdFlag", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(GlLedger).GetField("<TranslateQatdFlag>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                nullable: true,
                maxLength: 50,
                unicode: false);
            translateQatdFlag.AddAnnotation("Oracle:ValueGenerationStrategy", OracleValueGenerationStrategy.None);
            translateQatdFlag.AddAnnotation("Relational:ColumnName", "TRANSLATE_QATD_FLAG");

            var translateYatdFlag = runtimeEntityType.AddProperty(
                "TranslateYatdFlag",
                typeof(string),
                propertyInfo: typeof(GlLedger).GetProperty("TranslateYatdFlag", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(GlLedger).GetField("<TranslateYatdFlag>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                nullable: true,
                maxLength: 50,
                unicode: false);
            translateYatdFlag.AddAnnotation("Oracle:ValueGenerationStrategy", OracleValueGenerationStrategy.None);
            translateYatdFlag.AddAnnotation("Relational:ColumnName", "TRANSLATE_YATD_FLAG");

            var ussglOptionCode = runtimeEntityType.AddProperty(
                "UssglOptionCode",
                typeof(string),
                propertyInfo: typeof(GlLedger).GetProperty("UssglOptionCode", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(GlLedger).GetField("<UssglOptionCode>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                nullable: true,
                maxLength: 50,
                unicode: false);
            ussglOptionCode.AddAnnotation("Oracle:ValueGenerationStrategy", OracleValueGenerationStrategy.None);
            ussglOptionCode.AddAnnotation("Relational:ColumnName", "USSGL_OPTION_CODE");

            var validateJournalRefDate = runtimeEntityType.AddProperty(
                "ValidateJournalRefDate",
                typeof(string),
                propertyInfo: typeof(GlLedger).GetProperty("ValidateJournalRefDate", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(GlLedger).GetField("<ValidateJournalRefDate>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                nullable: true,
                maxLength: 50,
                unicode: false);
            validateJournalRefDate.AddAnnotation("Oracle:ValueGenerationStrategy", OracleValueGenerationStrategy.None);
            validateJournalRefDate.AddAnnotation("Relational:ColumnName", "VALIDATE_JOURNAL_REF_DATE");

            return runtimeEntityType;
        }

        public static void CreateAnnotations(RuntimeEntityType runtimeEntityType)
        {
            runtimeEntityType.AddAnnotation("Relational:FunctionName", null);
            runtimeEntityType.AddAnnotation("Relational:Schema", "FUSION");
            runtimeEntityType.AddAnnotation("Relational:SqlQuery", null);
            runtimeEntityType.AddAnnotation("Relational:TableName", "GL_LEDGERS");
            runtimeEntityType.AddAnnotation("Relational:ViewName", null);
            runtimeEntityType.AddAnnotation("Relational:ViewSchema", null);

            Customize(runtimeEntityType);
        }

        static partial void Customize(RuntimeEntityType runtimeEntityType);
    }
}
