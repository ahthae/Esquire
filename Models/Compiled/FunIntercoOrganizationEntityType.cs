// <auto-generated />
using System;
using System.Reflection;
using Microsoft.EntityFrameworkCore.Metadata;
using Oracle.EntityFrameworkCore.Metadata;
using esquire.Models.Fusion;

#pragma warning disable 219, 612, 618
#nullable enable

namespace esquire.Models.Compiled
{
    internal partial class FunIntercoOrganizationEntityType
    {
        public static RuntimeEntityType Create(RuntimeModel model, RuntimeEntityType? baseEntityType = null)
        {
            var runtimeEntityType = model.AddEntityType(
                "esquire.Models.Fusion.FunIntercoOrganization",
                typeof(FunIntercoOrganization),
                baseEntityType);

            var attribute1 = runtimeEntityType.AddProperty(
                "Attribute1",
                typeof(string),
                propertyInfo: typeof(FunIntercoOrganization).GetProperty("Attribute1", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(FunIntercoOrganization).GetField("<Attribute1>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                nullable: true,
                maxLength: 255);
            attribute1.AddAnnotation("Oracle:ValueGenerationStrategy", OracleValueGenerationStrategy.None);
            attribute1.AddAnnotation("Relational:ColumnName", "ATTRIBUTE1");

            var attribute10 = runtimeEntityType.AddProperty(
                "Attribute10",
                typeof(string),
                propertyInfo: typeof(FunIntercoOrganization).GetProperty("Attribute10", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(FunIntercoOrganization).GetField("<Attribute10>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                nullable: true,
                maxLength: 255);
            attribute10.AddAnnotation("Oracle:ValueGenerationStrategy", OracleValueGenerationStrategy.None);
            attribute10.AddAnnotation("Relational:ColumnName", "ATTRIBUTE10");

            var attribute11 = runtimeEntityType.AddProperty(
                "Attribute11",
                typeof(string),
                propertyInfo: typeof(FunIntercoOrganization).GetProperty("Attribute11", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(FunIntercoOrganization).GetField("<Attribute11>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                nullable: true,
                maxLength: 255);
            attribute11.AddAnnotation("Oracle:ValueGenerationStrategy", OracleValueGenerationStrategy.None);
            attribute11.AddAnnotation("Relational:ColumnName", "ATTRIBUTE11");

            var attribute12 = runtimeEntityType.AddProperty(
                "Attribute12",
                typeof(string),
                propertyInfo: typeof(FunIntercoOrganization).GetProperty("Attribute12", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(FunIntercoOrganization).GetField("<Attribute12>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                nullable: true,
                maxLength: 255);
            attribute12.AddAnnotation("Oracle:ValueGenerationStrategy", OracleValueGenerationStrategy.None);
            attribute12.AddAnnotation("Relational:ColumnName", "ATTRIBUTE12");

            var attribute13 = runtimeEntityType.AddProperty(
                "Attribute13",
                typeof(string),
                propertyInfo: typeof(FunIntercoOrganization).GetProperty("Attribute13", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(FunIntercoOrganization).GetField("<Attribute13>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                nullable: true,
                maxLength: 255);
            attribute13.AddAnnotation("Oracle:ValueGenerationStrategy", OracleValueGenerationStrategy.None);
            attribute13.AddAnnotation("Relational:ColumnName", "ATTRIBUTE13");

            var attribute14 = runtimeEntityType.AddProperty(
                "Attribute14",
                typeof(string),
                propertyInfo: typeof(FunIntercoOrganization).GetProperty("Attribute14", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(FunIntercoOrganization).GetField("<Attribute14>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                nullable: true,
                maxLength: 255);
            attribute14.AddAnnotation("Oracle:ValueGenerationStrategy", OracleValueGenerationStrategy.None);
            attribute14.AddAnnotation("Relational:ColumnName", "ATTRIBUTE14");

            var attribute15 = runtimeEntityType.AddProperty(
                "Attribute15",
                typeof(string),
                propertyInfo: typeof(FunIntercoOrganization).GetProperty("Attribute15", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(FunIntercoOrganization).GetField("<Attribute15>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                nullable: true,
                maxLength: 255);
            attribute15.AddAnnotation("Oracle:ValueGenerationStrategy", OracleValueGenerationStrategy.None);
            attribute15.AddAnnotation("Relational:ColumnName", "ATTRIBUTE15");

            var attribute16 = runtimeEntityType.AddProperty(
                "Attribute16",
                typeof(string),
                propertyInfo: typeof(FunIntercoOrganization).GetProperty("Attribute16", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(FunIntercoOrganization).GetField("<Attribute16>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                nullable: true,
                maxLength: 255);
            attribute16.AddAnnotation("Oracle:ValueGenerationStrategy", OracleValueGenerationStrategy.None);
            attribute16.AddAnnotation("Relational:ColumnName", "ATTRIBUTE16");

            var attribute17 = runtimeEntityType.AddProperty(
                "Attribute17",
                typeof(string),
                propertyInfo: typeof(FunIntercoOrganization).GetProperty("Attribute17", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(FunIntercoOrganization).GetField("<Attribute17>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                nullable: true,
                maxLength: 255);
            attribute17.AddAnnotation("Oracle:ValueGenerationStrategy", OracleValueGenerationStrategy.None);
            attribute17.AddAnnotation("Relational:ColumnName", "ATTRIBUTE17");

            var attribute18 = runtimeEntityType.AddProperty(
                "Attribute18",
                typeof(string),
                propertyInfo: typeof(FunIntercoOrganization).GetProperty("Attribute18", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(FunIntercoOrganization).GetField("<Attribute18>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                nullable: true,
                maxLength: 255);
            attribute18.AddAnnotation("Oracle:ValueGenerationStrategy", OracleValueGenerationStrategy.None);
            attribute18.AddAnnotation("Relational:ColumnName", "ATTRIBUTE18");

            var attribute19 = runtimeEntityType.AddProperty(
                "Attribute19",
                typeof(string),
                propertyInfo: typeof(FunIntercoOrganization).GetProperty("Attribute19", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(FunIntercoOrganization).GetField("<Attribute19>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                nullable: true,
                maxLength: 255);
            attribute19.AddAnnotation("Oracle:ValueGenerationStrategy", OracleValueGenerationStrategy.None);
            attribute19.AddAnnotation("Relational:ColumnName", "ATTRIBUTE19");

            var attribute2 = runtimeEntityType.AddProperty(
                "Attribute2",
                typeof(string),
                propertyInfo: typeof(FunIntercoOrganization).GetProperty("Attribute2", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(FunIntercoOrganization).GetField("<Attribute2>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                nullable: true,
                maxLength: 255);
            attribute2.AddAnnotation("Oracle:ValueGenerationStrategy", OracleValueGenerationStrategy.None);
            attribute2.AddAnnotation("Relational:ColumnName", "ATTRIBUTE2");

            var attribute20 = runtimeEntityType.AddProperty(
                "Attribute20",
                typeof(string),
                propertyInfo: typeof(FunIntercoOrganization).GetProperty("Attribute20", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(FunIntercoOrganization).GetField("<Attribute20>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                nullable: true,
                maxLength: 255);
            attribute20.AddAnnotation("Oracle:ValueGenerationStrategy", OracleValueGenerationStrategy.None);
            attribute20.AddAnnotation("Relational:ColumnName", "ATTRIBUTE20");

            var attribute3 = runtimeEntityType.AddProperty(
                "Attribute3",
                typeof(string),
                propertyInfo: typeof(FunIntercoOrganization).GetProperty("Attribute3", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(FunIntercoOrganization).GetField("<Attribute3>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                nullable: true,
                maxLength: 255);
            attribute3.AddAnnotation("Oracle:ValueGenerationStrategy", OracleValueGenerationStrategy.None);
            attribute3.AddAnnotation("Relational:ColumnName", "ATTRIBUTE3");

            var attribute4 = runtimeEntityType.AddProperty(
                "Attribute4",
                typeof(string),
                propertyInfo: typeof(FunIntercoOrganization).GetProperty("Attribute4", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(FunIntercoOrganization).GetField("<Attribute4>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                nullable: true,
                maxLength: 255);
            attribute4.AddAnnotation("Oracle:ValueGenerationStrategy", OracleValueGenerationStrategy.None);
            attribute4.AddAnnotation("Relational:ColumnName", "ATTRIBUTE4");

            var attribute5 = runtimeEntityType.AddProperty(
                "Attribute5",
                typeof(string),
                propertyInfo: typeof(FunIntercoOrganization).GetProperty("Attribute5", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(FunIntercoOrganization).GetField("<Attribute5>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                nullable: true,
                maxLength: 255);
            attribute5.AddAnnotation("Oracle:ValueGenerationStrategy", OracleValueGenerationStrategy.None);
            attribute5.AddAnnotation("Relational:ColumnName", "ATTRIBUTE5");

            var attribute6 = runtimeEntityType.AddProperty(
                "Attribute6",
                typeof(string),
                propertyInfo: typeof(FunIntercoOrganization).GetProperty("Attribute6", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(FunIntercoOrganization).GetField("<Attribute6>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                nullable: true,
                maxLength: 255);
            attribute6.AddAnnotation("Oracle:ValueGenerationStrategy", OracleValueGenerationStrategy.None);
            attribute6.AddAnnotation("Relational:ColumnName", "ATTRIBUTE6");

            var attribute7 = runtimeEntityType.AddProperty(
                "Attribute7",
                typeof(string),
                propertyInfo: typeof(FunIntercoOrganization).GetProperty("Attribute7", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(FunIntercoOrganization).GetField("<Attribute7>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                nullable: true,
                maxLength: 255);
            attribute7.AddAnnotation("Oracle:ValueGenerationStrategy", OracleValueGenerationStrategy.None);
            attribute7.AddAnnotation("Relational:ColumnName", "ATTRIBUTE7");

            var attribute8 = runtimeEntityType.AddProperty(
                "Attribute8",
                typeof(string),
                propertyInfo: typeof(FunIntercoOrganization).GetProperty("Attribute8", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(FunIntercoOrganization).GetField("<Attribute8>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                nullable: true,
                maxLength: 255);
            attribute8.AddAnnotation("Oracle:ValueGenerationStrategy", OracleValueGenerationStrategy.None);
            attribute8.AddAnnotation("Relational:ColumnName", "ATTRIBUTE8");

            var attribute9 = runtimeEntityType.AddProperty(
                "Attribute9",
                typeof(string),
                propertyInfo: typeof(FunIntercoOrganization).GetProperty("Attribute9", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(FunIntercoOrganization).GetField("<Attribute9>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                nullable: true,
                maxLength: 255);
            attribute9.AddAnnotation("Oracle:ValueGenerationStrategy", OracleValueGenerationStrategy.None);
            attribute9.AddAnnotation("Relational:ColumnName", "ATTRIBUTE9");

            var attributeCategory = runtimeEntityType.AddProperty(
                "AttributeCategory",
                typeof(string),
                propertyInfo: typeof(FunIntercoOrganization).GetProperty("AttributeCategory", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(FunIntercoOrganization).GetField("<AttributeCategory>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                nullable: true,
                maxLength: 255);
            attributeCategory.AddAnnotation("Oracle:ValueGenerationStrategy", OracleValueGenerationStrategy.None);
            attributeCategory.AddAnnotation("Relational:ColumnName", "ATTRIBUTE_CATEGORY");

            var contactPersonId = runtimeEntityType.AddProperty(
                "ContactPersonId",
                typeof(decimal?),
                propertyInfo: typeof(FunIntercoOrganization).GetProperty("ContactPersonId", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(FunIntercoOrganization).GetField("<ContactPersonId>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                nullable: true);
            contactPersonId.AddAnnotation("Oracle:ValueGenerationStrategy", OracleValueGenerationStrategy.None);
            contactPersonId.AddAnnotation("Relational:ColumnName", "CONTACT_PERSON_ID");
            contactPersonId.AddAnnotation("Relational:ColumnType", "NUMBER(38)");

            var createdBy = runtimeEntityType.AddProperty(
                "CreatedBy",
                typeof(string),
                propertyInfo: typeof(FunIntercoOrganization).GetProperty("CreatedBy", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(FunIntercoOrganization).GetField("<CreatedBy>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                nullable: true,
                maxLength: 255);
            createdBy.AddAnnotation("Oracle:ValueGenerationStrategy", OracleValueGenerationStrategy.None);
            createdBy.AddAnnotation("Relational:ColumnName", "CREATED_BY");

            var creationDate = runtimeEntityType.AddProperty(
                "CreationDate",
                typeof(DateTime?),
                propertyInfo: typeof(FunIntercoOrganization).GetProperty("CreationDate", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(FunIntercoOrganization).GetField("<CreationDate>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                nullable: true);
            creationDate.AddAnnotation("Oracle:ValueGenerationStrategy", OracleValueGenerationStrategy.None);
            creationDate.AddAnnotation("Relational:ColumnName", "CREATION_DATE");
            creationDate.AddAnnotation("Relational:ColumnType", "DATE");

            var description = runtimeEntityType.AddProperty(
                "Description",
                typeof(string),
                propertyInfo: typeof(FunIntercoOrganization).GetProperty("Description", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(FunIntercoOrganization).GetField("<Description>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                nullable: true,
                maxLength: 255);
            description.AddAnnotation("Oracle:ValueGenerationStrategy", OracleValueGenerationStrategy.None);
            description.AddAnnotation("Relational:ColumnName", "DESCRIPTION");

            var enabledFlag = runtimeEntityType.AddProperty(
                "EnabledFlag",
                typeof(string),
                propertyInfo: typeof(FunIntercoOrganization).GetProperty("EnabledFlag", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(FunIntercoOrganization).GetField("<EnabledFlag>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                nullable: true,
                maxLength: 255);
            enabledFlag.AddAnnotation("Oracle:ValueGenerationStrategy", OracleValueGenerationStrategy.None);
            enabledFlag.AddAnnotation("Relational:ColumnName", "ENABLED_FLAG");

            var intercoOrgId = runtimeEntityType.AddProperty(
                "IntercoOrgId",
                typeof(decimal?),
                propertyInfo: typeof(FunIntercoOrganization).GetProperty("IntercoOrgId", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(FunIntercoOrganization).GetField("<IntercoOrgId>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                nullable: true);
            intercoOrgId.AddAnnotation("Oracle:ValueGenerationStrategy", OracleValueGenerationStrategy.None);
            intercoOrgId.AddAnnotation("Relational:ColumnName", "INTERCO_ORG_ID");
            intercoOrgId.AddAnnotation("Relational:ColumnType", "NUMBER(38)");

            var intercoOrgName = runtimeEntityType.AddProperty(
                "IntercoOrgName",
                typeof(string),
                propertyInfo: typeof(FunIntercoOrganization).GetProperty("IntercoOrgName", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(FunIntercoOrganization).GetField("<IntercoOrgName>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                nullable: true,
                maxLength: 255);
            intercoOrgName.AddAnnotation("Oracle:ValueGenerationStrategy", OracleValueGenerationStrategy.None);
            intercoOrgName.AddAnnotation("Relational:ColumnName", "INTERCO_ORG_NAME");

            var lastUpdateDate = runtimeEntityType.AddProperty(
                "LastUpdateDate",
                typeof(DateTime?),
                propertyInfo: typeof(FunIntercoOrganization).GetProperty("LastUpdateDate", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(FunIntercoOrganization).GetField("<LastUpdateDate>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                nullable: true);
            lastUpdateDate.AddAnnotation("Oracle:ValueGenerationStrategy", OracleValueGenerationStrategy.None);
            lastUpdateDate.AddAnnotation("Relational:ColumnName", "LAST_UPDATE_DATE");
            lastUpdateDate.AddAnnotation("Relational:ColumnType", "DATE");

            var lastUpdateLogin = runtimeEntityType.AddProperty(
                "LastUpdateLogin",
                typeof(string),
                propertyInfo: typeof(FunIntercoOrganization).GetProperty("LastUpdateLogin", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(FunIntercoOrganization).GetField("<LastUpdateLogin>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                nullable: true,
                maxLength: 255);
            lastUpdateLogin.AddAnnotation("Oracle:ValueGenerationStrategy", OracleValueGenerationStrategy.None);
            lastUpdateLogin.AddAnnotation("Relational:ColumnName", "LAST_UPDATE_LOGIN");

            var lastUpdatedBy = runtimeEntityType.AddProperty(
                "LastUpdatedBy",
                typeof(string),
                propertyInfo: typeof(FunIntercoOrganization).GetProperty("LastUpdatedBy", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(FunIntercoOrganization).GetField("<LastUpdatedBy>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                nullable: true,
                maxLength: 255);
            lastUpdatedBy.AddAnnotation("Oracle:ValueGenerationStrategy", OracleValueGenerationStrategy.None);
            lastUpdatedBy.AddAnnotation("Relational:ColumnName", "LAST_UPDATED_BY");

            var legalEntityId = runtimeEntityType.AddProperty(
                "LegalEntityId",
                typeof(decimal?),
                propertyInfo: typeof(FunIntercoOrganization).GetProperty("LegalEntityId", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(FunIntercoOrganization).GetField("<LegalEntityId>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                nullable: true);
            legalEntityId.AddAnnotation("Oracle:ValueGenerationStrategy", OracleValueGenerationStrategy.None);
            legalEntityId.AddAnnotation("Relational:ColumnName", "LEGAL_ENTITY_ID");
            legalEntityId.AddAnnotation("Relational:ColumnType", "NUMBER(38)");

            var objectVersionNumber = runtimeEntityType.AddProperty(
                "ObjectVersionNumber",
                typeof(string),
                propertyInfo: typeof(FunIntercoOrganization).GetProperty("ObjectVersionNumber", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(FunIntercoOrganization).GetField("<ObjectVersionNumber>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                nullable: true,
                maxLength: 255);
            objectVersionNumber.AddAnnotation("Oracle:ValueGenerationStrategy", OracleValueGenerationStrategy.None);
            objectVersionNumber.AddAnnotation("Relational:ColumnName", "OBJECT_VERSION_NUMBER");

            var payBuId = runtimeEntityType.AddProperty(
                "PayBuId",
                typeof(decimal?),
                propertyInfo: typeof(FunIntercoOrganization).GetProperty("PayBuId", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(FunIntercoOrganization).GetField("<PayBuId>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                nullable: true);
            payBuId.AddAnnotation("Oracle:ValueGenerationStrategy", OracleValueGenerationStrategy.None);
            payBuId.AddAnnotation("Relational:ColumnName", "PAY_BU_ID");
            payBuId.AddAnnotation("Relational:ColumnType", "NUMBER(38)");

            var recBuId = runtimeEntityType.AddProperty(
                "RecBuId",
                typeof(decimal?),
                propertyInfo: typeof(FunIntercoOrganization).GetProperty("RecBuId", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(FunIntercoOrganization).GetField("<RecBuId>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                nullable: true);
            recBuId.AddAnnotation("Oracle:ValueGenerationStrategy", OracleValueGenerationStrategy.None);
            recBuId.AddAnnotation("Relational:ColumnName", "REC_BU_ID");
            recBuId.AddAnnotation("Relational:ColumnType", "NUMBER(38)");

            var remoteInstanceFlag = runtimeEntityType.AddProperty(
                "RemoteInstanceFlag",
                typeof(string),
                propertyInfo: typeof(FunIntercoOrganization).GetProperty("RemoteInstanceFlag", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(FunIntercoOrganization).GetField("<RemoteInstanceFlag>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                nullable: true,
                maxLength: 255);
            remoteInstanceFlag.AddAnnotation("Oracle:ValueGenerationStrategy", OracleValueGenerationStrategy.None);
            remoteInstanceFlag.AddAnnotation("Relational:ColumnName", "REMOTE_INSTANCE_FLAG");

            var remoteInstanceIdentifier = runtimeEntityType.AddProperty(
                "RemoteInstanceIdentifier",
                typeof(string),
                propertyInfo: typeof(FunIntercoOrganization).GetProperty("RemoteInstanceIdentifier", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(FunIntercoOrganization).GetField("<RemoteInstanceIdentifier>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                nullable: true,
                maxLength: 255);
            remoteInstanceIdentifier.AddAnnotation("Oracle:ValueGenerationStrategy", OracleValueGenerationStrategy.None);
            remoteInstanceIdentifier.AddAnnotation("Relational:ColumnName", "REMOTE_INSTANCE_IDENTIFIER");

            return runtimeEntityType;
        }

        public static void CreateAnnotations(RuntimeEntityType runtimeEntityType)
        {
            runtimeEntityType.AddAnnotation("Relational:FunctionName", null);
            runtimeEntityType.AddAnnotation("Relational:Schema", "FUSION");
            runtimeEntityType.AddAnnotation("Relational:SqlQuery", null);
            runtimeEntityType.AddAnnotation("Relational:TableName", "FUN_INTERCO_ORGANIZATIONS");
            runtimeEntityType.AddAnnotation("Relational:ViewName", null);
            runtimeEntityType.AddAnnotation("Relational:ViewSchema", null);

            Customize(runtimeEntityType);
        }

        static partial void Customize(RuntimeEntityType runtimeEntityType);
    }
}
