// <auto-generated />
using System;
using System.Reflection;
using Microsoft.EntityFrameworkCore.Metadata;
using Oracle.EntityFrameworkCore.Metadata;
using esquire.Models.Fusion;

#pragma warning disable 219, 612, 618
#nullable enable

namespace esquire.Models.Compiled
{
    internal partial class HrAllPositionsFEntityType
    {
        public static RuntimeEntityType Create(RuntimeModel model, RuntimeEntityType? baseEntityType = null)
        {
            var runtimeEntityType = model.AddEntityType(
                "esquire.Models.Fusion.HrAllPositionsF",
                typeof(HrAllPositionsF),
                baseEntityType);

            var actionOccurrenceId = runtimeEntityType.AddProperty(
                "ActionOccurrenceId",
                typeof(decimal?),
                propertyInfo: typeof(HrAllPositionsF).GetProperty("ActionOccurrenceId", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(HrAllPositionsF).GetField("<ActionOccurrenceId>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                nullable: true);
            actionOccurrenceId.AddAnnotation("Oracle:ValueGenerationStrategy", OracleValueGenerationStrategy.None);
            actionOccurrenceId.AddAnnotation("Relational:ColumnName", "ACTION_OCCURRENCE_ID");
            actionOccurrenceId.AddAnnotation("Relational:ColumnType", "NUMBER(38)");

            var activeStatus = runtimeEntityType.AddProperty(
                "ActiveStatus",
                typeof(string),
                propertyInfo: typeof(HrAllPositionsF).GetProperty("ActiveStatus", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(HrAllPositionsF).GetField("<ActiveStatus>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                nullable: true,
                maxLength: 50,
                unicode: false);
            activeStatus.AddAnnotation("Oracle:ValueGenerationStrategy", OracleValueGenerationStrategy.None);
            activeStatus.AddAnnotation("Relational:ColumnName", "ACTIVE_STATUS");

            var assignmentCategory = runtimeEntityType.AddProperty(
                "AssignmentCategory",
                typeof(string),
                propertyInfo: typeof(HrAllPositionsF).GetProperty("AssignmentCategory", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(HrAllPositionsF).GetField("<AssignmentCategory>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                nullable: true,
                maxLength: 50,
                unicode: false);
            assignmentCategory.AddAnnotation("Oracle:ValueGenerationStrategy", OracleValueGenerationStrategy.None);
            assignmentCategory.AddAnnotation("Relational:ColumnName", "ASSIGNMENT_CATEGORY");

            var bargainingUnitCd = runtimeEntityType.AddProperty(
                "BargainingUnitCd",
                typeof(string),
                propertyInfo: typeof(HrAllPositionsF).GetProperty("BargainingUnitCd", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(HrAllPositionsF).GetField("<BargainingUnitCd>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                nullable: true,
                maxLength: 50,
                unicode: false);
            bargainingUnitCd.AddAnnotation("Oracle:ValueGenerationStrategy", OracleValueGenerationStrategy.None);
            bargainingUnitCd.AddAnnotation("Relational:ColumnName", "BARGAINING_UNIT_CD");

            var budgetAmount = runtimeEntityType.AddProperty(
                "BudgetAmount",
                typeof(string),
                propertyInfo: typeof(HrAllPositionsF).GetProperty("BudgetAmount", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(HrAllPositionsF).GetField("<BudgetAmount>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                nullable: true,
                maxLength: 50,
                unicode: false);
            budgetAmount.AddAnnotation("Oracle:ValueGenerationStrategy", OracleValueGenerationStrategy.None);
            budgetAmount.AddAnnotation("Relational:ColumnName", "BUDGET_AMOUNT");

            var budgetAmountCurrency = runtimeEntityType.AddProperty(
                "BudgetAmountCurrency",
                typeof(string),
                propertyInfo: typeof(HrAllPositionsF).GetProperty("BudgetAmountCurrency", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(HrAllPositionsF).GetField("<BudgetAmountCurrency>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                nullable: true,
                maxLength: 50,
                unicode: false);
            budgetAmountCurrency.AddAnnotation("Oracle:ValueGenerationStrategy", OracleValueGenerationStrategy.None);
            budgetAmountCurrency.AddAnnotation("Relational:ColumnName", "BUDGET_AMOUNT_CURRENCY");

            var budgetedPositionFlag = runtimeEntityType.AddProperty(
                "BudgetedPositionFlag",
                typeof(string),
                propertyInfo: typeof(HrAllPositionsF).GetProperty("BudgetedPositionFlag", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(HrAllPositionsF).GetField("<BudgetedPositionFlag>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                nullable: true,
                maxLength: 50,
                unicode: false);
            budgetedPositionFlag.AddAnnotation("Oracle:ValueGenerationStrategy", OracleValueGenerationStrategy.None);
            budgetedPositionFlag.AddAnnotation("Relational:ColumnName", "BUDGETED_POSITION_FLAG");

            var businessGroupId = runtimeEntityType.AddProperty(
                "BusinessGroupId",
                typeof(decimal?),
                propertyInfo: typeof(HrAllPositionsF).GetProperty("BusinessGroupId", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(HrAllPositionsF).GetField("<BusinessGroupId>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                nullable: true);
            businessGroupId.AddAnnotation("Oracle:ValueGenerationStrategy", OracleValueGenerationStrategy.None);
            businessGroupId.AddAnnotation("Relational:ColumnName", "BUSINESS_GROUP_ID");
            businessGroupId.AddAnnotation("Relational:ColumnType", "NUMBER(38)");

            var businessUnitId = runtimeEntityType.AddProperty(
                "BusinessUnitId",
                typeof(decimal?),
                propertyInfo: typeof(HrAllPositionsF).GetProperty("BusinessUnitId", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(HrAllPositionsF).GetField("<BusinessUnitId>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                nullable: true);
            businessUnitId.AddAnnotation("Oracle:ValueGenerationStrategy", OracleValueGenerationStrategy.None);
            businessUnitId.AddAnnotation("Relational:ColumnName", "BUSINESS_UNIT_ID");
            businessUnitId.AddAnnotation("Relational:ColumnType", "NUMBER(38)");

            var categoryCode = runtimeEntityType.AddProperty(
                "CategoryCode",
                typeof(string),
                propertyInfo: typeof(HrAllPositionsF).GetProperty("CategoryCode", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(HrAllPositionsF).GetField("<CategoryCode>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                nullable: true,
                maxLength: 50,
                unicode: false);
            categoryCode.AddAnnotation("Oracle:ValueGenerationStrategy", OracleValueGenerationStrategy.None);
            categoryCode.AddAnnotation("Relational:ColumnName", "CATEGORY_CODE");

            var collectiveAgreementId = runtimeEntityType.AddProperty(
                "CollectiveAgreementId",
                typeof(decimal?),
                propertyInfo: typeof(HrAllPositionsF).GetProperty("CollectiveAgreementId", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(HrAllPositionsF).GetField("<CollectiveAgreementId>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                nullable: true);
            collectiveAgreementId.AddAnnotation("Oracle:ValueGenerationStrategy", OracleValueGenerationStrategy.None);
            collectiveAgreementId.AddAnnotation("Relational:ColumnName", "COLLECTIVE_AGREEMENT_ID");
            collectiveAgreementId.AddAnnotation("Relational:ColumnType", "NUMBER(38)");

            var costCenter = runtimeEntityType.AddProperty(
                "CostCenter",
                typeof(string),
                propertyInfo: typeof(HrAllPositionsF).GetProperty("CostCenter", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(HrAllPositionsF).GetField("<CostCenter>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                nullable: true,
                maxLength: 50,
                unicode: false);
            costCenter.AddAnnotation("Oracle:ValueGenerationStrategy", OracleValueGenerationStrategy.None);
            costCenter.AddAnnotation("Relational:ColumnName", "COST_CENTER");

            var createdBy = runtimeEntityType.AddProperty(
                "CreatedBy",
                typeof(string),
                propertyInfo: typeof(HrAllPositionsF).GetProperty("CreatedBy", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(HrAllPositionsF).GetField("<CreatedBy>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                nullable: true,
                maxLength: 50,
                unicode: false);
            createdBy.AddAnnotation("Oracle:ValueGenerationStrategy", OracleValueGenerationStrategy.None);
            createdBy.AddAnnotation("Relational:ColumnName", "CREATED_BY");

            var creationDate = runtimeEntityType.AddProperty(
                "CreationDate",
                typeof(DateTime?),
                propertyInfo: typeof(HrAllPositionsF).GetProperty("CreationDate", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(HrAllPositionsF).GetField("<CreationDate>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                nullable: true);
            creationDate.AddAnnotation("Oracle:ValueGenerationStrategy", OracleValueGenerationStrategy.None);
            creationDate.AddAnnotation("Relational:ColumnName", "CREATION_DATE");
            creationDate.AddAnnotation("Relational:ColumnType", "DATE");

            var delegatePositionId = runtimeEntityType.AddProperty(
                "DelegatePositionId",
                typeof(decimal?),
                propertyInfo: typeof(HrAllPositionsF).GetProperty("DelegatePositionId", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(HrAllPositionsF).GetField("<DelegatePositionId>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                nullable: true);
            delegatePositionId.AddAnnotation("Oracle:ValueGenerationStrategy", OracleValueGenerationStrategy.None);
            delegatePositionId.AddAnnotation("Relational:ColumnName", "DELEGATE_POSITION_ID");
            delegatePositionId.AddAnnotation("Relational:ColumnType", "NUMBER(38)");

            var effectiveEndDate = runtimeEntityType.AddProperty(
                "EffectiveEndDate",
                typeof(DateTime?),
                propertyInfo: typeof(HrAllPositionsF).GetProperty("EffectiveEndDate", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(HrAllPositionsF).GetField("<EffectiveEndDate>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                nullable: true);
            effectiveEndDate.AddAnnotation("Oracle:ValueGenerationStrategy", OracleValueGenerationStrategy.None);
            effectiveEndDate.AddAnnotation("Relational:ColumnName", "EFFECTIVE_END_DATE");
            effectiveEndDate.AddAnnotation("Relational:ColumnType", "DATE");

            var effectiveStartDate = runtimeEntityType.AddProperty(
                "EffectiveStartDate",
                typeof(DateTime?),
                propertyInfo: typeof(HrAllPositionsF).GetProperty("EffectiveStartDate", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(HrAllPositionsF).GetField("<EffectiveStartDate>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                nullable: true);
            effectiveStartDate.AddAnnotation("Oracle:ValueGenerationStrategy", OracleValueGenerationStrategy.None);
            effectiveStartDate.AddAnnotation("Relational:ColumnName", "EFFECTIVE_START_DATE");
            effectiveStartDate.AddAnnotation("Relational:ColumnType", "DATE");

            var entryGradeId = runtimeEntityType.AddProperty(
                "EntryGradeId",
                typeof(decimal?),
                propertyInfo: typeof(HrAllPositionsF).GetProperty("EntryGradeId", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(HrAllPositionsF).GetField("<EntryGradeId>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                nullable: true);
            entryGradeId.AddAnnotation("Oracle:ValueGenerationStrategy", OracleValueGenerationStrategy.None);
            entryGradeId.AddAnnotation("Relational:ColumnName", "ENTRY_GRADE_ID");
            entryGradeId.AddAnnotation("Relational:ColumnType", "NUMBER(38)");

            var entryStepId = runtimeEntityType.AddProperty(
                "EntryStepId",
                typeof(decimal?),
                propertyInfo: typeof(HrAllPositionsF).GetProperty("EntryStepId", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(HrAllPositionsF).GetField("<EntryStepId>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                nullable: true);
            entryStepId.AddAnnotation("Oracle:ValueGenerationStrategy", OracleValueGenerationStrategy.None);
            entryStepId.AddAnnotation("Relational:ColumnName", "ENTRY_STEP_ID");
            entryStepId.AddAnnotation("Relational:ColumnType", "NUMBER(38)");

            var frequency = runtimeEntityType.AddProperty(
                "Frequency",
                typeof(string),
                propertyInfo: typeof(HrAllPositionsF).GetProperty("Frequency", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(HrAllPositionsF).GetField("<Frequency>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                nullable: true,
                maxLength: 50,
                unicode: false);
            frequency.AddAnnotation("Oracle:ValueGenerationStrategy", OracleValueGenerationStrategy.None);
            frequency.AddAnnotation("Relational:ColumnName", "FREQUENCY");

            var fte = runtimeEntityType.AddProperty(
                "Fte",
                typeof(string),
                propertyInfo: typeof(HrAllPositionsF).GetProperty("Fte", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(HrAllPositionsF).GetField("<Fte>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                nullable: true,
                maxLength: 50,
                unicode: false);
            fte.AddAnnotation("Oracle:ValueGenerationStrategy", OracleValueGenerationStrategy.None);
            fte.AddAnnotation("Relational:ColumnName", "FTE");

            var fullPartTime = runtimeEntityType.AddProperty(
                "FullPartTime",
                typeof(string),
                propertyInfo: typeof(HrAllPositionsF).GetProperty("FullPartTime", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(HrAllPositionsF).GetField("<FullPartTime>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                nullable: true,
                maxLength: 50,
                unicode: false);
            fullPartTime.AddAnnotation("Oracle:ValueGenerationStrategy", OracleValueGenerationStrategy.None);
            fullPartTime.AddAnnotation("Relational:ColumnName", "FULL_PART_TIME");

            var fundedByExistingPosition = runtimeEntityType.AddProperty(
                "FundedByExistingPosition",
                typeof(string),
                propertyInfo: typeof(HrAllPositionsF).GetProperty("FundedByExistingPosition", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(HrAllPositionsF).GetField("<FundedByExistingPosition>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                nullable: true,
                maxLength: 50,
                unicode: false);
            fundedByExistingPosition.AddAnnotation("Oracle:ValueGenerationStrategy", OracleValueGenerationStrategy.None);
            fundedByExistingPosition.AddAnnotation("Relational:ColumnName", "FUNDED_BY_EXISTING_POSITION");

            var gradeLadderId = runtimeEntityType.AddProperty(
                "GradeLadderId",
                typeof(decimal?),
                propertyInfo: typeof(HrAllPositionsF).GetProperty("GradeLadderId", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(HrAllPositionsF).GetField("<GradeLadderId>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                nullable: true);
            gradeLadderId.AddAnnotation("Oracle:ValueGenerationStrategy", OracleValueGenerationStrategy.None);
            gradeLadderId.AddAnnotation("Relational:ColumnName", "GRADE_LADDER_ID");
            gradeLadderId.AddAnnotation("Relational:ColumnType", "NUMBER(38)");

            var hiringStatus = runtimeEntityType.AddProperty(
                "HiringStatus",
                typeof(string),
                propertyInfo: typeof(HrAllPositionsF).GetProperty("HiringStatus", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(HrAllPositionsF).GetField("<HiringStatus>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                nullable: true,
                maxLength: 50,
                unicode: false);
            hiringStatus.AddAnnotation("Oracle:ValueGenerationStrategy", OracleValueGenerationStrategy.None);
            hiringStatus.AddAnnotation("Relational:ColumnName", "HIRING_STATUS");

            var jobId = runtimeEntityType.AddProperty(
                "JobId",
                typeof(decimal?),
                propertyInfo: typeof(HrAllPositionsF).GetProperty("JobId", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(HrAllPositionsF).GetField("<JobId>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                nullable: true);
            jobId.AddAnnotation("Oracle:ValueGenerationStrategy", OracleValueGenerationStrategy.None);
            jobId.AddAnnotation("Relational:ColumnName", "JOB_ID");
            jobId.AddAnnotation("Relational:ColumnType", "NUMBER(38)");

            var lastUpdateDate = runtimeEntityType.AddProperty(
                "LastUpdateDate",
                typeof(DateTime?),
                propertyInfo: typeof(HrAllPositionsF).GetProperty("LastUpdateDate", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(HrAllPositionsF).GetField("<LastUpdateDate>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                nullable: true);
            lastUpdateDate.AddAnnotation("Oracle:ValueGenerationStrategy", OracleValueGenerationStrategy.None);
            lastUpdateDate.AddAnnotation("Relational:ColumnName", "LAST_UPDATE_DATE");
            lastUpdateDate.AddAnnotation("Relational:ColumnType", "DATE");

            var lastUpdateLogin = runtimeEntityType.AddProperty(
                "LastUpdateLogin",
                typeof(string),
                propertyInfo: typeof(HrAllPositionsF).GetProperty("LastUpdateLogin", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(HrAllPositionsF).GetField("<LastUpdateLogin>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                nullable: true,
                maxLength: 50,
                unicode: false);
            lastUpdateLogin.AddAnnotation("Oracle:ValueGenerationStrategy", OracleValueGenerationStrategy.None);
            lastUpdateLogin.AddAnnotation("Relational:ColumnName", "LAST_UPDATE_LOGIN");

            var lastUpdatedBy = runtimeEntityType.AddProperty(
                "LastUpdatedBy",
                typeof(string),
                propertyInfo: typeof(HrAllPositionsF).GetProperty("LastUpdatedBy", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(HrAllPositionsF).GetField("<LastUpdatedBy>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                nullable: true,
                maxLength: 50,
                unicode: false);
            lastUpdatedBy.AddAnnotation("Oracle:ValueGenerationStrategy", OracleValueGenerationStrategy.None);
            lastUpdatedBy.AddAnnotation("Relational:ColumnName", "LAST_UPDATED_BY");

            var locationId = runtimeEntityType.AddProperty(
                "LocationId",
                typeof(decimal?),
                propertyInfo: typeof(HrAllPositionsF).GetProperty("LocationId", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(HrAllPositionsF).GetField("<LocationId>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                nullable: true);
            locationId.AddAnnotation("Oracle:ValueGenerationStrategy", OracleValueGenerationStrategy.None);
            locationId.AddAnnotation("Relational:ColumnName", "LOCATION_ID");
            locationId.AddAnnotation("Relational:ColumnType", "NUMBER(38)");

            var maxPersons = runtimeEntityType.AddProperty(
                "MaxPersons",
                typeof(decimal?),
                propertyInfo: typeof(HrAllPositionsF).GetProperty("MaxPersons", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(HrAllPositionsF).GetField("<MaxPersons>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                nullable: true);
            maxPersons.AddAnnotation("Oracle:ValueGenerationStrategy", OracleValueGenerationStrategy.None);
            maxPersons.AddAnnotation("Relational:ColumnName", "MAX_PERSONS");
            maxPersons.AddAnnotation("Relational:ColumnType", "NUMBER(38)");

            var objectVersionNumber = runtimeEntityType.AddProperty(
                "ObjectVersionNumber",
                typeof(decimal?),
                propertyInfo: typeof(HrAllPositionsF).GetProperty("ObjectVersionNumber", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(HrAllPositionsF).GetField("<ObjectVersionNumber>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                nullable: true);
            objectVersionNumber.AddAnnotation("Oracle:ValueGenerationStrategy", OracleValueGenerationStrategy.None);
            objectVersionNumber.AddAnnotation("Relational:ColumnName", "OBJECT_VERSION_NUMBER");
            objectVersionNumber.AddAnnotation("Relational:ColumnType", "NUMBER(38)");

            var organizationId = runtimeEntityType.AddProperty(
                "OrganizationId",
                typeof(decimal?),
                propertyInfo: typeof(HrAllPositionsF).GetProperty("OrganizationId", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(HrAllPositionsF).GetField("<OrganizationId>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                nullable: true);
            organizationId.AddAnnotation("Oracle:ValueGenerationStrategy", OracleValueGenerationStrategy.None);
            organizationId.AddAnnotation("Relational:ColumnName", "ORGANIZATION_ID");
            organizationId.AddAnnotation("Relational:ColumnType", "NUMBER(38)");

            var overlapAllowed = runtimeEntityType.AddProperty(
                "OverlapAllowed",
                typeof(string),
                propertyInfo: typeof(HrAllPositionsF).GetProperty("OverlapAllowed", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(HrAllPositionsF).GetField("<OverlapAllowed>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                nullable: true,
                maxLength: 50,
                unicode: false);
            overlapAllowed.AddAnnotation("Oracle:ValueGenerationStrategy", OracleValueGenerationStrategy.None);
            overlapAllowed.AddAnnotation("Relational:ColumnName", "OVERLAP_ALLOWED");

            var permanentTemporaryFlag = runtimeEntityType.AddProperty(
                "PermanentTemporaryFlag",
                typeof(string),
                propertyInfo: typeof(HrAllPositionsF).GetProperty("PermanentTemporaryFlag", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(HrAllPositionsF).GetField("<PermanentTemporaryFlag>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                nullable: true,
                maxLength: 50,
                unicode: false);
            permanentTemporaryFlag.AddAnnotation("Oracle:ValueGenerationStrategy", OracleValueGenerationStrategy.None);
            permanentTemporaryFlag.AddAnnotation("Relational:ColumnName", "PERMANENT_TEMPORARY_FLAG");

            var positionCode = runtimeEntityType.AddProperty(
                "PositionCode",
                typeof(string),
                propertyInfo: typeof(HrAllPositionsF).GetProperty("PositionCode", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(HrAllPositionsF).GetField("<PositionCode>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                nullable: true,
                maxLength: 50,
                unicode: false);
            positionCode.AddAnnotation("Oracle:ValueGenerationStrategy", OracleValueGenerationStrategy.None);
            positionCode.AddAnnotation("Relational:ColumnName", "POSITION_CODE");

            var positionId = runtimeEntityType.AddProperty(
                "PositionId",
                typeof(decimal?),
                propertyInfo: typeof(HrAllPositionsF).GetProperty("PositionId", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(HrAllPositionsF).GetField("<PositionId>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                nullable: true);
            positionId.AddAnnotation("Oracle:ValueGenerationStrategy", OracleValueGenerationStrategy.None);
            positionId.AddAnnotation("Relational:ColumnName", "POSITION_ID");
            positionId.AddAnnotation("Relational:ColumnType", "NUMBER(38)");

            var positionSynchronizationFlag = runtimeEntityType.AddProperty(
                "PositionSynchronizationFlag",
                typeof(string),
                propertyInfo: typeof(HrAllPositionsF).GetProperty("PositionSynchronizationFlag", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(HrAllPositionsF).GetField("<PositionSynchronizationFlag>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                nullable: true,
                maxLength: 50,
                unicode: false);
            positionSynchronizationFlag.AddAnnotation("Oracle:ValueGenerationStrategy", OracleValueGenerationStrategy.None);
            positionSynchronizationFlag.AddAnnotation("Relational:ColumnName", "POSITION_SYNCHRONIZATION_FLAG");

            var positionType = runtimeEntityType.AddProperty(
                "PositionType",
                typeof(string),
                propertyInfo: typeof(HrAllPositionsF).GetProperty("PositionType", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(HrAllPositionsF).GetField("<PositionType>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                nullable: true,
                maxLength: 50,
                unicode: false);
            positionType.AddAnnotation("Oracle:ValueGenerationStrategy", OracleValueGenerationStrategy.None);
            positionType.AddAnnotation("Relational:ColumnName", "POSITION_TYPE");

            var probationPeriod = runtimeEntityType.AddProperty(
                "ProbationPeriod",
                typeof(string),
                propertyInfo: typeof(HrAllPositionsF).GetProperty("ProbationPeriod", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(HrAllPositionsF).GetField("<ProbationPeriod>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                nullable: true,
                maxLength: 50,
                unicode: false);
            probationPeriod.AddAnnotation("Oracle:ValueGenerationStrategy", OracleValueGenerationStrategy.None);
            probationPeriod.AddAnnotation("Relational:ColumnName", "PROBATION_PERIOD");

            var probationPeriodUnitCd = runtimeEntityType.AddProperty(
                "ProbationPeriodUnitCd",
                typeof(string),
                propertyInfo: typeof(HrAllPositionsF).GetProperty("ProbationPeriodUnitCd", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(HrAllPositionsF).GetField("<ProbationPeriodUnitCd>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                nullable: true,
                maxLength: 50,
                unicode: false);
            probationPeriodUnitCd.AddAnnotation("Oracle:ValueGenerationStrategy", OracleValueGenerationStrategy.None);
            probationPeriodUnitCd.AddAnnotation("Relational:ColumnName", "PROBATION_PERIOD_UNIT_CD");

            var requisitionTemplateId = runtimeEntityType.AddProperty(
                "RequisitionTemplateId",
                typeof(decimal?),
                propertyInfo: typeof(HrAllPositionsF).GetProperty("RequisitionTemplateId", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(HrAllPositionsF).GetField("<RequisitionTemplateId>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                nullable: true);
            requisitionTemplateId.AddAnnotation("Oracle:ValueGenerationStrategy", OracleValueGenerationStrategy.None);
            requisitionTemplateId.AddAnnotation("Relational:ColumnName", "REQUISITION_TEMPLATE_ID");
            requisitionTemplateId.AddAnnotation("Relational:ColumnType", "NUMBER(38)");

            var seasonalEndDate = runtimeEntityType.AddProperty(
                "SeasonalEndDate",
                typeof(DateTime?),
                propertyInfo: typeof(HrAllPositionsF).GetProperty("SeasonalEndDate", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(HrAllPositionsF).GetField("<SeasonalEndDate>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                nullable: true);
            seasonalEndDate.AddAnnotation("Oracle:ValueGenerationStrategy", OracleValueGenerationStrategy.None);
            seasonalEndDate.AddAnnotation("Relational:ColumnName", "SEASONAL_END_DATE");
            seasonalEndDate.AddAnnotation("Relational:ColumnType", "DATE");

            var seasonalFlag = runtimeEntityType.AddProperty(
                "SeasonalFlag",
                typeof(string),
                propertyInfo: typeof(HrAllPositionsF).GetProperty("SeasonalFlag", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(HrAllPositionsF).GetField("<SeasonalFlag>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                nullable: true,
                maxLength: 50,
                unicode: false);
            seasonalFlag.AddAnnotation("Oracle:ValueGenerationStrategy", OracleValueGenerationStrategy.None);
            seasonalFlag.AddAnnotation("Relational:ColumnName", "SEASONAL_FLAG");

            var seasonalStartDate = runtimeEntityType.AddProperty(
                "SeasonalStartDate",
                typeof(DateTime?),
                propertyInfo: typeof(HrAllPositionsF).GetProperty("SeasonalStartDate", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(HrAllPositionsF).GetField("<SeasonalStartDate>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                nullable: true);
            seasonalStartDate.AddAnnotation("Oracle:ValueGenerationStrategy", OracleValueGenerationStrategy.None);
            seasonalStartDate.AddAnnotation("Relational:ColumnName", "SEASONAL_START_DATE");
            seasonalStartDate.AddAnnotation("Relational:ColumnType", "DATE");

            var securityClearance = runtimeEntityType.AddProperty(
                "SecurityClearance",
                typeof(string),
                propertyInfo: typeof(HrAllPositionsF).GetProperty("SecurityClearance", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(HrAllPositionsF).GetField("<SecurityClearance>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                nullable: true,
                maxLength: 50,
                unicode: false);
            securityClearance.AddAnnotation("Oracle:ValueGenerationStrategy", OracleValueGenerationStrategy.None);
            securityClearance.AddAnnotation("Relational:ColumnName", "SECURITY_CLEARANCE");

            var standardWorkingFrequency = runtimeEntityType.AddProperty(
                "StandardWorkingFrequency",
                typeof(string),
                propertyInfo: typeof(HrAllPositionsF).GetProperty("StandardWorkingFrequency", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(HrAllPositionsF).GetField("<StandardWorkingFrequency>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                nullable: true,
                maxLength: 50,
                unicode: false);
            standardWorkingFrequency.AddAnnotation("Oracle:ValueGenerationStrategy", OracleValueGenerationStrategy.None);
            standardWorkingFrequency.AddAnnotation("Relational:ColumnName", "STANDARD_WORKING_FREQUENCY");

            var standardWorkingHours = runtimeEntityType.AddProperty(
                "StandardWorkingHours",
                typeof(string),
                propertyInfo: typeof(HrAllPositionsF).GetProperty("StandardWorkingHours", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(HrAllPositionsF).GetField("<StandardWorkingHours>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                nullable: true,
                maxLength: 50,
                unicode: false);
            standardWorkingHours.AddAnnotation("Oracle:ValueGenerationStrategy", OracleValueGenerationStrategy.None);
            standardWorkingHours.AddAnnotation("Relational:ColumnName", "STANDARD_WORKING_HOURS");

            var supervisorAssignmentId = runtimeEntityType.AddProperty(
                "SupervisorAssignmentId",
                typeof(decimal?),
                propertyInfo: typeof(HrAllPositionsF).GetProperty("SupervisorAssignmentId", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(HrAllPositionsF).GetField("<SupervisorAssignmentId>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                nullable: true);
            supervisorAssignmentId.AddAnnotation("Oracle:ValueGenerationStrategy", OracleValueGenerationStrategy.None);
            supervisorAssignmentId.AddAnnotation("Relational:ColumnName", "SUPERVISOR_ASSIGNMENT_ID");
            supervisorAssignmentId.AddAnnotation("Relational:ColumnType", "NUMBER(38)");

            var supervisorId = runtimeEntityType.AddProperty(
                "SupervisorId",
                typeof(decimal?),
                propertyInfo: typeof(HrAllPositionsF).GetProperty("SupervisorId", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(HrAllPositionsF).GetField("<SupervisorId>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                nullable: true);
            supervisorId.AddAnnotation("Oracle:ValueGenerationStrategy", OracleValueGenerationStrategy.None);
            supervisorId.AddAnnotation("Relational:ColumnName", "SUPERVISOR_ID");
            supervisorId.AddAnnotation("Relational:ColumnType", "NUMBER(38)");

            var timeNormalFinish = runtimeEntityType.AddProperty(
                "TimeNormalFinish",
                typeof(string),
                propertyInfo: typeof(HrAllPositionsF).GetProperty("TimeNormalFinish", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(HrAllPositionsF).GetField("<TimeNormalFinish>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                nullable: true,
                maxLength: 50,
                unicode: false);
            timeNormalFinish.AddAnnotation("Oracle:ValueGenerationStrategy", OracleValueGenerationStrategy.None);
            timeNormalFinish.AddAnnotation("Relational:ColumnName", "TIME_NORMAL_FINISH");

            var timeNormalStart = runtimeEntityType.AddProperty(
                "TimeNormalStart",
                typeof(string),
                propertyInfo: typeof(HrAllPositionsF).GetProperty("TimeNormalStart", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(HrAllPositionsF).GetField("<TimeNormalStart>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                nullable: true,
                maxLength: 50,
                unicode: false);
            timeNormalStart.AddAnnotation("Oracle:ValueGenerationStrategy", OracleValueGenerationStrategy.None);
            timeNormalStart.AddAnnotation("Relational:ColumnName", "TIME_NORMAL_START");

            var unionId = runtimeEntityType.AddProperty(
                "UnionId",
                typeof(decimal?),
                propertyInfo: typeof(HrAllPositionsF).GetProperty("UnionId", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(HrAllPositionsF).GetField("<UnionId>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                nullable: true);
            unionId.AddAnnotation("Oracle:ValueGenerationStrategy", OracleValueGenerationStrategy.None);
            unionId.AddAnnotation("Relational:ColumnName", "UNION_ID");
            unionId.AddAnnotation("Relational:ColumnType", "NUMBER(38)");

            var workingHours = runtimeEntityType.AddProperty(
                "WorkingHours",
                typeof(string),
                propertyInfo: typeof(HrAllPositionsF).GetProperty("WorkingHours", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(HrAllPositionsF).GetField("<WorkingHours>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                nullable: true,
                maxLength: 50,
                unicode: false);
            workingHours.AddAnnotation("Oracle:ValueGenerationStrategy", OracleValueGenerationStrategy.None);
            workingHours.AddAnnotation("Relational:ColumnName", "WORKING_HOURS");

            return runtimeEntityType;
        }

        public static void CreateAnnotations(RuntimeEntityType runtimeEntityType)
        {
            runtimeEntityType.AddAnnotation("Relational:FunctionName", null);
            runtimeEntityType.AddAnnotation("Relational:Schema", "FUSION");
            runtimeEntityType.AddAnnotation("Relational:SqlQuery", null);
            runtimeEntityType.AddAnnotation("Relational:TableName", "HR_ALL_POSITIONS_F");
            runtimeEntityType.AddAnnotation("Relational:ViewName", null);
            runtimeEntityType.AddAnnotation("Relational:ViewSchema", null);

            Customize(runtimeEntityType);
        }

        static partial void Customize(RuntimeEntityType runtimeEntityType);
    }
}
