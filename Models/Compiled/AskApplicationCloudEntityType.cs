// <auto-generated />
using System;
using System.Reflection;
using Microsoft.EntityFrameworkCore.Metadata;
using Oracle.EntityFrameworkCore.Metadata;
using esquire.Models.Fusion;

#pragma warning disable 219, 612, 618
#nullable enable

namespace esquire.Models.Compiled
{
    internal partial class AskApplicationCloudEntityType
    {
        public static RuntimeEntityType Create(RuntimeModel model, RuntimeEntityType? baseEntityType = null)
        {
            var runtimeEntityType = model.AddEntityType(
                "esquire.Models.Fusion.AskApplicationCloud",
                typeof(AskApplicationCloud),
                baseEntityType);

            var contactPerson = runtimeEntityType.AddProperty(
                "ContactPerson",
                typeof(string),
                propertyInfo: typeof(AskApplicationCloud).GetProperty("ContactPerson", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(AskApplicationCloud).GetField("<ContactPerson>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                nullable: true,
                maxLength: 50,
                unicode: false);
            contactPerson.AddAnnotation("Oracle:ValueGenerationStrategy", OracleValueGenerationStrategy.None);
            contactPerson.AddAnnotation("Relational:ColumnName", "CONTACT_PERSON");

            var createdBy = runtimeEntityType.AddProperty(
                "CreatedBy",
                typeof(string),
                propertyInfo: typeof(AskApplicationCloud).GetProperty("CreatedBy", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(AskApplicationCloud).GetField("<CreatedBy>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                nullable: true,
                maxLength: 50,
                unicode: false);
            createdBy.AddAnnotation("Oracle:ValueGenerationStrategy", OracleValueGenerationStrategy.None);
            createdBy.AddAnnotation("Relational:ColumnName", "CREATED_BY");

            var creationDate = runtimeEntityType.AddProperty(
                "CreationDate",
                typeof(DateTime?),
                propertyInfo: typeof(AskApplicationCloud).GetProperty("CreationDate", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(AskApplicationCloud).GetField("<CreationDate>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                nullable: true);
            creationDate.AddAnnotation("Oracle:ValueGenerationStrategy", OracleValueGenerationStrategy.None);
            creationDate.AddAnnotation("Relational:ColumnName", "CREATION_DATE");
            creationDate.AddAnnotation("Relational:ColumnType", "DATE");

            var customer = runtimeEntityType.AddProperty(
                "Customer",
                typeof(string),
                propertyInfo: typeof(AskApplicationCloud).GetProperty("Customer", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(AskApplicationCloud).GetField("<Customer>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                nullable: true,
                maxLength: 50,
                unicode: false);
            customer.AddAnnotation("Oracle:ValueGenerationStrategy", OracleValueGenerationStrategy.None);
            customer.AddAnnotation("Relational:ColumnName", "CUSTOMER");

            var dataCenterId = runtimeEntityType.AddProperty(
                "DataCenterId",
                typeof(decimal?),
                propertyInfo: typeof(AskApplicationCloud).GetProperty("DataCenterId", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(AskApplicationCloud).GetField("<DataCenterId>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                nullable: true);
            dataCenterId.AddAnnotation("Oracle:ValueGenerationStrategy", OracleValueGenerationStrategy.None);
            dataCenterId.AddAnnotation("Relational:ColumnName", "DATA_CENTER_ID");
            dataCenterId.AddAnnotation("Relational:ColumnType", "NUMBER(38)");

            var deployedAt = runtimeEntityType.AddProperty(
                "DeployedAt",
                typeof(string),
                propertyInfo: typeof(AskApplicationCloud).GetProperty("DeployedAt", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(AskApplicationCloud).GetField("<DeployedAt>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                nullable: true,
                maxLength: 50,
                unicode: false);
            deployedAt.AddAnnotation("Oracle:ValueGenerationStrategy", OracleValueGenerationStrategy.None);
            deployedAt.AddAnnotation("Relational:ColumnName", "DEPLOYED_AT");

            var enterpriseId = runtimeEntityType.AddProperty(
                "EnterpriseId",
                typeof(decimal?),
                propertyInfo: typeof(AskApplicationCloud).GetProperty("EnterpriseId", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(AskApplicationCloud).GetField("<EnterpriseId>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                nullable: true);
            enterpriseId.AddAnnotation("Oracle:ValueGenerationStrategy", OracleValueGenerationStrategy.None);
            enterpriseId.AddAnnotation("Relational:ColumnName", "ENTERPRISE_ID");
            enterpriseId.AddAnnotation("Relational:ColumnType", "NUMBER(38)");

            var environmentTypeId = runtimeEntityType.AddProperty(
                "EnvironmentTypeId",
                typeof(decimal?),
                propertyInfo: typeof(AskApplicationCloud).GetProperty("EnvironmentTypeId", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(AskApplicationCloud).GetField("<EnvironmentTypeId>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                nullable: true);
            environmentTypeId.AddAnnotation("Oracle:ValueGenerationStrategy", OracleValueGenerationStrategy.None);
            environmentTypeId.AddAnnotation("Relational:ColumnName", "ENVIRONMENT_TYPE_ID");
            environmentTypeId.AddAnnotation("Relational:ColumnType", "NUMBER(38)");

            var id = runtimeEntityType.AddProperty(
                "Id",
                typeof(decimal?),
                propertyInfo: typeof(AskApplicationCloud).GetProperty("Id", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(AskApplicationCloud).GetField("<Id>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                nullable: true);
            id.AddAnnotation("Oracle:ValueGenerationStrategy", OracleValueGenerationStrategy.None);
            id.AddAnnotation("Relational:ColumnName", "ID");
            id.AddAnnotation("Relational:ColumnType", "NUMBER(38)");

            var lastUpdateDate = runtimeEntityType.AddProperty(
                "LastUpdateDate",
                typeof(DateTime?),
                propertyInfo: typeof(AskApplicationCloud).GetProperty("LastUpdateDate", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(AskApplicationCloud).GetField("<LastUpdateDate>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                nullable: true);
            lastUpdateDate.AddAnnotation("Oracle:ValueGenerationStrategy", OracleValueGenerationStrategy.None);
            lastUpdateDate.AddAnnotation("Relational:ColumnName", "LAST_UPDATE_DATE");
            lastUpdateDate.AddAnnotation("Relational:ColumnType", "DATE");

            var lastUpdateLogin = runtimeEntityType.AddProperty(
                "LastUpdateLogin",
                typeof(string),
                propertyInfo: typeof(AskApplicationCloud).GetProperty("LastUpdateLogin", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(AskApplicationCloud).GetField("<LastUpdateLogin>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                nullable: true,
                maxLength: 50,
                unicode: false);
            lastUpdateLogin.AddAnnotation("Oracle:ValueGenerationStrategy", OracleValueGenerationStrategy.None);
            lastUpdateLogin.AddAnnotation("Relational:ColumnName", "LAST_UPDATE_LOGIN");

            var lastUpdatedBy = runtimeEntityType.AddProperty(
                "LastUpdatedBy",
                typeof(string),
                propertyInfo: typeof(AskApplicationCloud).GetProperty("LastUpdatedBy", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(AskApplicationCloud).GetField("<LastUpdatedBy>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                nullable: true,
                maxLength: 50,
                unicode: false);
            lastUpdatedBy.AddAnnotation("Oracle:ValueGenerationStrategy", OracleValueGenerationStrategy.None);
            lastUpdatedBy.AddAnnotation("Relational:ColumnName", "LAST_UPDATED_BY");

            var name = runtimeEntityType.AddProperty(
                "Name",
                typeof(string),
                propertyInfo: typeof(AskApplicationCloud).GetProperty("Name", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(AskApplicationCloud).GetField("<Name>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                nullable: true,
                maxLength: 50,
                unicode: false);
            name.AddAnnotation("Oracle:ValueGenerationStrategy", OracleValueGenerationStrategy.None);
            name.AddAnnotation("Relational:ColumnName", "NAME");

            var objectVersionNumber = runtimeEntityType.AddProperty(
                "ObjectVersionNumber",
                typeof(decimal?),
                propertyInfo: typeof(AskApplicationCloud).GetProperty("ObjectVersionNumber", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(AskApplicationCloud).GetField("<ObjectVersionNumber>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                nullable: true);
            objectVersionNumber.AddAnnotation("Oracle:ValueGenerationStrategy", OracleValueGenerationStrategy.None);
            objectVersionNumber.AddAnnotation("Relational:ColumnName", "OBJECT_VERSION_NUMBER");
            objectVersionNumber.AddAnnotation("Relational:ColumnType", "NUMBER(38)");

            var ovmTemplateId = runtimeEntityType.AddProperty(
                "OvmTemplateId",
                typeof(decimal?),
                propertyInfo: typeof(AskApplicationCloud).GetProperty("OvmTemplateId", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(AskApplicationCloud).GetField("<OvmTemplateId>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                nullable: true);
            ovmTemplateId.AddAnnotation("Oracle:ValueGenerationStrategy", OracleValueGenerationStrategy.None);
            ovmTemplateId.AddAnnotation("Relational:ColumnName", "OVM_TEMPLATE_ID");
            ovmTemplateId.AddAnnotation("Relational:ColumnType", "NUMBER(38)");

            var shortName = runtimeEntityType.AddProperty(
                "ShortName",
                typeof(string),
                propertyInfo: typeof(AskApplicationCloud).GetProperty("ShortName", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(AskApplicationCloud).GetField("<ShortName>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                nullable: true,
                maxLength: 50,
                unicode: false);
            shortName.AddAnnotation("Oracle:ValueGenerationStrategy", OracleValueGenerationStrategy.None);
            shortName.AddAnnotation("Relational:ColumnName", "SHORT_NAME");

            var status = runtimeEntityType.AddProperty(
                "Status",
                typeof(string),
                propertyInfo: typeof(AskApplicationCloud).GetProperty("Status", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(AskApplicationCloud).GetField("<Status>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                nullable: true,
                maxLength: 50,
                unicode: false);
            status.AddAnnotation("Oracle:ValueGenerationStrategy", OracleValueGenerationStrategy.None);
            status.AddAnnotation("Relational:ColumnName", "STATUS");

            var tenant = runtimeEntityType.AddProperty(
                "Tenant",
                typeof(string),
                propertyInfo: typeof(AskApplicationCloud).GetProperty("Tenant", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(AskApplicationCloud).GetField("<Tenant>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                nullable: true,
                maxLength: 50,
                unicode: false);
            tenant.AddAnnotation("Oracle:ValueGenerationStrategy", OracleValueGenerationStrategy.None);
            tenant.AddAnnotation("Relational:ColumnName", "TENANT");

            var type = runtimeEntityType.AddProperty(
                "Type",
                typeof(string),
                propertyInfo: typeof(AskApplicationCloud).GetProperty("Type", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(AskApplicationCloud).GetField("<Type>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                nullable: true,
                maxLength: 50,
                unicode: false);
            type.AddAnnotation("Oracle:ValueGenerationStrategy", OracleValueGenerationStrategy.None);
            type.AddAnnotation("Relational:ColumnName", "TYPE");

            return runtimeEntityType;
        }

        public static void CreateAnnotations(RuntimeEntityType runtimeEntityType)
        {
            runtimeEntityType.AddAnnotation("Relational:FunctionName", null);
            runtimeEntityType.AddAnnotation("Relational:Schema", "FUSION");
            runtimeEntityType.AddAnnotation("Relational:SqlQuery", null);
            runtimeEntityType.AddAnnotation("Relational:TableName", "ASK_APPLICATION_CLOUDS");
            runtimeEntityType.AddAnnotation("Relational:ViewName", null);
            runtimeEntityType.AddAnnotation("Relational:ViewSchema", null);

            Customize(runtimeEntityType);
        }

        static partial void Customize(RuntimeEntityType runtimeEntityType);
    }
}
