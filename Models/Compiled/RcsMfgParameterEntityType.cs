// <auto-generated />
using System;
using System.Reflection;
using Microsoft.EntityFrameworkCore.Metadata;
using Oracle.EntityFrameworkCore.Metadata;
using esquire.Models.Fusion;

#pragma warning disable 219, 612, 618
#nullable enable

namespace esquire.Models.Compiled
{
    internal partial class RcsMfgParameterEntityType
    {
        public static RuntimeEntityType Create(RuntimeModel model, RuntimeEntityType? baseEntityType = null)
        {
            var runtimeEntityType = model.AddEntityType(
                "esquire.Models.Fusion.RcsMfgParameter",
                typeof(RcsMfgParameter),
                baseEntityType);

            var allowDirectPurchWo = runtimeEntityType.AddProperty(
                "AllowDirectPurchWo",
                typeof(string),
                propertyInfo: typeof(RcsMfgParameter).GetProperty("AllowDirectPurchWo", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(RcsMfgParameter).GetField("<AllowDirectPurchWo>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                nullable: true,
                maxLength: 50,
                unicode: false);
            allowDirectPurchWo.AddAnnotation("Oracle:ValueGenerationStrategy", OracleValueGenerationStrategy.None);
            allowDirectPurchWo.AddAnnotation("Relational:ColumnName", "ALLOW_DIRECT_PURCH_WO");

            var allowNegIssWoSnFlag = runtimeEntityType.AddProperty(
                "AllowNegIssWoSnFlag",
                typeof(string),
                propertyInfo: typeof(RcsMfgParameter).GetProperty("AllowNegIssWoSnFlag", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(RcsMfgParameter).GetField("<AllowNegIssWoSnFlag>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                nullable: true,
                maxLength: 50,
                unicode: false);
            allowNegIssWoSnFlag.AddAnnotation("Oracle:ValueGenerationStrategy", OracleValueGenerationStrategy.None);
            allowNegIssWoSnFlag.AddAnnotation("Relational:ColumnName", "ALLOW_NEG_ISS_WO_SN_FLAG");

            var autoAsscSerNumWo = runtimeEntityType.AddProperty(
                "AutoAsscSerNumWo",
                typeof(string),
                propertyInfo: typeof(RcsMfgParameter).GetProperty("AutoAsscSerNumWo", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(RcsMfgParameter).GetField("<AutoAsscSerNumWo>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                nullable: true,
                maxLength: 50,
                unicode: false);
            autoAsscSerNumWo.AddAnnotation("Oracle:ValueGenerationStrategy", OracleValueGenerationStrategy.None);
            autoAsscSerNumWo.AddAnnotation("Relational:ColumnName", "AUTO_ASSC_SER_NUM_WO");

            var backflushLotSelection = runtimeEntityType.AddProperty(
                "BackflushLotSelection",
                typeof(string),
                propertyInfo: typeof(RcsMfgParameter).GetProperty("BackflushLotSelection", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(RcsMfgParameter).GetField("<BackflushLotSelection>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                nullable: true,
                maxLength: 50,
                unicode: false);
            backflushLotSelection.AddAnnotation("Oracle:ValueGenerationStrategy", OracleValueGenerationStrategy.None);
            backflushLotSelection.AddAnnotation("Relational:ColumnName", "BACKFLUSH_LOT_SELECTION");

            var createdBy = runtimeEntityType.AddProperty(
                "CreatedBy",
                typeof(string),
                propertyInfo: typeof(RcsMfgParameter).GetProperty("CreatedBy", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(RcsMfgParameter).GetField("<CreatedBy>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                nullable: true,
                maxLength: 50,
                unicode: false);
            createdBy.AddAnnotation("Oracle:ValueGenerationStrategy", OracleValueGenerationStrategy.None);
            createdBy.AddAnnotation("Relational:ColumnName", "CREATED_BY");

            var creationDate = runtimeEntityType.AddProperty(
                "CreationDate",
                typeof(DateTime?),
                propertyInfo: typeof(RcsMfgParameter).GetProperty("CreationDate", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(RcsMfgParameter).GetField("<CreationDate>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                nullable: true);
            creationDate.AddAnnotation("Oracle:ValueGenerationStrategy", OracleValueGenerationStrategy.None);
            creationDate.AddAnnotation("Relational:ColumnName", "CREATION_DATE");
            creationDate.AddAnnotation("Relational:ColumnType", "DATE");

            var defCompltnLocator = runtimeEntityType.AddProperty(
                "DefCompltnLocator",
                typeof(string),
                propertyInfo: typeof(RcsMfgParameter).GetProperty("DefCompltnLocator", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(RcsMfgParameter).GetField("<DefCompltnLocator>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                nullable: true,
                maxLength: 50,
                unicode: false);
            defCompltnLocator.AddAnnotation("Oracle:ValueGenerationStrategy", OracleValueGenerationStrategy.None);
            defCompltnLocator.AddAnnotation("Relational:ColumnName", "DEF_COMPLTN_LOCATOR");

            var defCompltnSubinv = runtimeEntityType.AddProperty(
                "DefCompltnSubinv",
                typeof(string),
                propertyInfo: typeof(RcsMfgParameter).GetProperty("DefCompltnSubinv", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(RcsMfgParameter).GetField("<DefCompltnSubinv>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                nullable: true,
                maxLength: 50,
                unicode: false);
            defCompltnSubinv.AddAnnotation("Oracle:ValueGenerationStrategy", OracleValueGenerationStrategy.None);
            defCompltnSubinv.AddAnnotation("Relational:ColumnName", "DEF_COMPLTN_SUBINV");

            var defLabelTmplt = runtimeEntityType.AddProperty(
                "DefLabelTmplt",
                typeof(string),
                propertyInfo: typeof(RcsMfgParameter).GetProperty("DefLabelTmplt", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(RcsMfgParameter).GetField("<DefLabelTmplt>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                nullable: true,
                maxLength: 50,
                unicode: false);
            defLabelTmplt.AddAnnotation("Oracle:ValueGenerationStrategy", OracleValueGenerationStrategy.None);
            defLabelTmplt.AddAnnotation("Relational:ColumnName", "DEF_LABEL_TMPLT");

            var defMntSchedMethod = runtimeEntityType.AddProperty(
                "DefMntSchedMethod",
                typeof(string),
                propertyInfo: typeof(RcsMfgParameter).GetProperty("DefMntSchedMethod", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(RcsMfgParameter).GetField("<DefMntSchedMethod>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                nullable: true,
                maxLength: 50,
                unicode: false);
            defMntSchedMethod.AddAnnotation("Oracle:ValueGenerationStrategy", OracleValueGenerationStrategy.None);
            defMntSchedMethod.AddAnnotation("Relational:ColumnName", "DEF_MNT_SCHED_METHOD");

            var defOvercompltnTol = runtimeEntityType.AddProperty(
                "DefOvercompltnTol",
                typeof(string),
                propertyInfo: typeof(RcsMfgParameter).GetProperty("DefOvercompltnTol", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(RcsMfgParameter).GetField("<DefOvercompltnTol>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                nullable: true,
                maxLength: 50,
                unicode: false);
            defOvercompltnTol.AddAnnotation("Oracle:ValueGenerationStrategy", OracleValueGenerationStrategy.None);
            defOvercompltnTol.AddAnnotation("Relational:ColumnName", "DEF_OVERCOMPLTN_TOL");

            var defSupplyLocator = runtimeEntityType.AddProperty(
                "DefSupplyLocator",
                typeof(string),
                propertyInfo: typeof(RcsMfgParameter).GetProperty("DefSupplyLocator", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(RcsMfgParameter).GetField("<DefSupplyLocator>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                nullable: true,
                maxLength: 50,
                unicode: false);
            defSupplyLocator.AddAnnotation("Oracle:ValueGenerationStrategy", OracleValueGenerationStrategy.None);
            defSupplyLocator.AddAnnotation("Relational:ColumnName", "DEF_SUPPLY_LOCATOR");

            var defSupplySubinv = runtimeEntityType.AddProperty(
                "DefSupplySubinv",
                typeof(string),
                propertyInfo: typeof(RcsMfgParameter).GetProperty("DefSupplySubinv", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(RcsMfgParameter).GetField("<DefSupplySubinv>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                nullable: true,
                maxLength: 50,
                unicode: false);
            defSupplySubinv.AddAnnotation("Oracle:ValueGenerationStrategy", OracleValueGenerationStrategy.None);
            defSupplySubinv.AddAnnotation("Relational:ColumnName", "DEF_SUPPLY_SUBINV");

            var defTransMode = runtimeEntityType.AddProperty(
                "DefTransMode",
                typeof(decimal?),
                propertyInfo: typeof(RcsMfgParameter).GetProperty("DefTransMode", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(RcsMfgParameter).GetField("<DefTransMode>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                nullable: true);
            defTransMode.AddAnnotation("Oracle:ValueGenerationStrategy", OracleValueGenerationStrategy.None);
            defTransMode.AddAnnotation("Relational:ColumnName", "DEF_TRANS_MODE");
            defTransMode.AddAnnotation("Relational:ColumnType", "NUMBER(38)");

            var defTransQty = runtimeEntityType.AddProperty(
                "DefTransQty",
                typeof(decimal?),
                propertyInfo: typeof(RcsMfgParameter).GetProperty("DefTransQty", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(RcsMfgParameter).GetField("<DefTransQty>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                nullable: true);
            defTransQty.AddAnnotation("Oracle:ValueGenerationStrategy", OracleValueGenerationStrategy.None);
            defTransQty.AddAnnotation("Relational:ColumnName", "DEF_TRANS_QTY");
            defTransQty.AddAnnotation("Relational:ColumnType", "NUMBER(38)");

            var defWoTravelerTmplt = runtimeEntityType.AddProperty(
                "DefWoTravelerTmplt",
                typeof(string),
                propertyInfo: typeof(RcsMfgParameter).GetProperty("DefWoTravelerTmplt", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(RcsMfgParameter).GetField("<DefWoTravelerTmplt>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                nullable: true,
                maxLength: 50,
                unicode: false);
            defWoTravelerTmplt.AddAnnotation("Oracle:ValueGenerationStrategy", OracleValueGenerationStrategy.None);
            defWoTravelerTmplt.AddAnnotation("Relational:ColumnName", "DEF_WO_TRAVELER_TMPLT");

            var defWorkMethod = runtimeEntityType.AddProperty(
                "DefWorkMethod",
                typeof(string),
                propertyInfo: typeof(RcsMfgParameter).GetProperty("DefWorkMethod", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(RcsMfgParameter).GetField("<DefWorkMethod>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                nullable: true,
                maxLength: 50,
                unicode: false);
            defWorkMethod.AddAnnotation("Oracle:ValueGenerationStrategy", OracleValueGenerationStrategy.None);
            defWorkMethod.AddAnnotation("Relational:ColumnName", "DEF_WORK_METHOD");

            var enableIotFlag = runtimeEntityType.AddProperty(
                "EnableIotFlag",
                typeof(string),
                propertyInfo: typeof(RcsMfgParameter).GetProperty("EnableIotFlag", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(RcsMfgParameter).GetField("<EnableIotFlag>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                nullable: true,
                maxLength: 50,
                unicode: false);
            enableIotFlag.AddAnnotation("Oracle:ValueGenerationStrategy", OracleValueGenerationStrategy.None);
            enableIotFlag.AddAnnotation("Relational:ColumnName", "ENABLE_IOT_FLAG");

            var enableProcessFlag = runtimeEntityType.AddProperty(
                "EnableProcessFlag",
                typeof(string),
                propertyInfo: typeof(RcsMfgParameter).GetProperty("EnableProcessFlag", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(RcsMfgParameter).GetField("<EnableProcessFlag>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                nullable: true,
                maxLength: 50,
                unicode: false);
            enableProcessFlag.AddAnnotation("Oracle:ValueGenerationStrategy", OracleValueGenerationStrategy.None);
            enableProcessFlag.AddAnnotation("Relational:ColumnName", "ENABLE_PROCESS_FLAG");

            var forecastHorizon = runtimeEntityType.AddProperty(
                "ForecastHorizon",
                typeof(string),
                propertyInfo: typeof(RcsMfgParameter).GetProperty("ForecastHorizon", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(RcsMfgParameter).GetField("<ForecastHorizon>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                nullable: true,
                maxLength: 50,
                unicode: false);
            forecastHorizon.AddAnnotation("Oracle:ValueGenerationStrategy", OracleValueGenerationStrategy.None);
            forecastHorizon.AddAnnotation("Relational:ColumnName", "FORECAST_HORIZON");

            var genWoHorizon = runtimeEntityType.AddProperty(
                "GenWoHorizon",
                typeof(string),
                propertyInfo: typeof(RcsMfgParameter).GetProperty("GenWoHorizon", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(RcsMfgParameter).GetField("<GenWoHorizon>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                nullable: true,
                maxLength: 50,
                unicode: false);
            genWoHorizon.AddAnnotation("Oracle:ValueGenerationStrategy", OracleValueGenerationStrategy.None);
            genWoHorizon.AddAnnotation("Relational:ColumnName", "GEN_WO_HORIZON");

            var incCompYieldFlag = runtimeEntityType.AddProperty(
                "IncCompYieldFlag",
                typeof(string),
                propertyInfo: typeof(RcsMfgParameter).GetProperty("IncCompYieldFlag", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(RcsMfgParameter).GetField("<IncCompYieldFlag>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                nullable: true,
                maxLength: 50,
                unicode: false);
            incCompYieldFlag.AddAnnotation("Oracle:ValueGenerationStrategy", OracleValueGenerationStrategy.None);
            incCompYieldFlag.AddAnnotation("Relational:ColumnName", "INC_COMP_YIELD_FLAG");

            var includePullCompFlag = runtimeEntityType.AddProperty(
                "IncludePullCompFlag",
                typeof(string),
                propertyInfo: typeof(RcsMfgParameter).GetProperty("IncludePullCompFlag", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(RcsMfgParameter).GetField("<IncludePullCompFlag>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                nullable: true,
                maxLength: 50,
                unicode: false);
            includePullCompFlag.AddAnnotation("Oracle:ValueGenerationStrategy", OracleValueGenerationStrategy.None);
            includePullCompFlag.AddAnnotation("Relational:ColumnName", "INCLUDE_PULL_COMP_FLAG");

            var issuePushCompFlag = runtimeEntityType.AddProperty(
                "IssuePushCompFlag",
                typeof(string),
                propertyInfo: typeof(RcsMfgParameter).GetProperty("IssuePushCompFlag", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(RcsMfgParameter).GetField("<IssuePushCompFlag>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                nullable: true,
                maxLength: 50,
                unicode: false);
            issuePushCompFlag.AddAnnotation("Oracle:ValueGenerationStrategy", OracleValueGenerationStrategy.None);
            issuePushCompFlag.AddAnnotation("Relational:ColumnName", "ISSUE_PUSH_COMP_FLAG");

            var lastUpdateDate = runtimeEntityType.AddProperty(
                "LastUpdateDate",
                typeof(DateTime?),
                propertyInfo: typeof(RcsMfgParameter).GetProperty("LastUpdateDate", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(RcsMfgParameter).GetField("<LastUpdateDate>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                nullable: true);
            lastUpdateDate.AddAnnotation("Oracle:ValueGenerationStrategy", OracleValueGenerationStrategy.None);
            lastUpdateDate.AddAnnotation("Relational:ColumnName", "LAST_UPDATE_DATE");
            lastUpdateDate.AddAnnotation("Relational:ColumnType", "DATE");

            var lastUpdateLogin = runtimeEntityType.AddProperty(
                "LastUpdateLogin",
                typeof(string),
                propertyInfo: typeof(RcsMfgParameter).GetProperty("LastUpdateLogin", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(RcsMfgParameter).GetField("<LastUpdateLogin>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                nullable: true,
                maxLength: 50,
                unicode: false);
            lastUpdateLogin.AddAnnotation("Oracle:ValueGenerationStrategy", OracleValueGenerationStrategy.None);
            lastUpdateLogin.AddAnnotation("Relational:ColumnName", "LAST_UPDATE_LOGIN");

            var lastUpdatedBy = runtimeEntityType.AddProperty(
                "LastUpdatedBy",
                typeof(string),
                propertyInfo: typeof(RcsMfgParameter).GetProperty("LastUpdatedBy", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(RcsMfgParameter).GetField("<LastUpdatedBy>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                nullable: true,
                maxLength: 50,
                unicode: false);
            lastUpdatedBy.AddAnnotation("Oracle:ValueGenerationStrategy", OracleValueGenerationStrategy.None);
            lastUpdatedBy.AddAnnotation("Relational:ColumnName", "LAST_UPDATED_BY");

            var manualIssueAssyWoFlag = runtimeEntityType.AddProperty(
                "ManualIssueAssyWoFlag",
                typeof(string),
                propertyInfo: typeof(RcsMfgParameter).GetProperty("ManualIssueAssyWoFlag", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(RcsMfgParameter).GetField("<ManualIssueAssyWoFlag>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                nullable: true,
                maxLength: 50,
                unicode: false);
            manualIssueAssyWoFlag.AddAnnotation("Oracle:ValueGenerationStrategy", OracleValueGenerationStrategy.None);
            manualIssueAssyWoFlag.AddAnnotation("Relational:ColumnName", "MANUAL_ISSUE_ASSY_WO_FLAG");

            var mfgCalendar = runtimeEntityType.AddProperty(
                "MfgCalendar",
                typeof(decimal?),
                propertyInfo: typeof(RcsMfgParameter).GetProperty("MfgCalendar", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(RcsMfgParameter).GetField("<MfgCalendar>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                nullable: true);
            mfgCalendar.AddAnnotation("Oracle:ValueGenerationStrategy", OracleValueGenerationStrategy.None);
            mfgCalendar.AddAnnotation("Relational:ColumnName", "MFG_CALENDAR");
            mfgCalendar.AddAnnotation("Relational:ColumnType", "FLOAT");

            var mtlReportingLvl = runtimeEntityType.AddProperty(
                "MtlReportingLvl",
                typeof(string),
                propertyInfo: typeof(RcsMfgParameter).GetProperty("MtlReportingLvl", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(RcsMfgParameter).GetField("<MtlReportingLvl>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                nullable: true,
                maxLength: 50,
                unicode: false);
            mtlReportingLvl.AddAnnotation("Oracle:ValueGenerationStrategy", OracleValueGenerationStrategy.None);
            mtlReportingLvl.AddAnnotation("Relational:ColumnName", "MTL_REPORTING_LVL");

            var objectVersionNumber = runtimeEntityType.AddProperty(
                "ObjectVersionNumber",
                typeof(decimal?),
                propertyInfo: typeof(RcsMfgParameter).GetProperty("ObjectVersionNumber", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(RcsMfgParameter).GetField("<ObjectVersionNumber>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                nullable: true);
            objectVersionNumber.AddAnnotation("Oracle:ValueGenerationStrategy", OracleValueGenerationStrategy.None);
            objectVersionNumber.AddAnnotation("Relational:ColumnName", "OBJECT_VERSION_NUMBER");
            objectVersionNumber.AddAnnotation("Relational:ColumnType", "NUMBER(38)");

            var oprnSeqIncrement = runtimeEntityType.AddProperty(
                "OprnSeqIncrement",
                typeof(decimal?),
                propertyInfo: typeof(RcsMfgParameter).GetProperty("OprnSeqIncrement", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(RcsMfgParameter).GetField("<OprnSeqIncrement>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                nullable: true);
            oprnSeqIncrement.AddAnnotation("Oracle:ValueGenerationStrategy", OracleValueGenerationStrategy.None);
            oprnSeqIncrement.AddAnnotation("Relational:ColumnName", "OPRN_SEQ_INCREMENT");
            oprnSeqIncrement.AddAnnotation("Relational:ColumnType", "NUMBER(38)");

            var organizationId = runtimeEntityType.AddProperty(
                "OrganizationId",
                typeof(decimal?),
                propertyInfo: typeof(RcsMfgParameter).GetProperty("OrganizationId", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(RcsMfgParameter).GetField("<OrganizationId>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                nullable: true);
            organizationId.AddAnnotation("Oracle:ValueGenerationStrategy", OracleValueGenerationStrategy.None);
            organizationId.AddAnnotation("Relational:ColumnName", "ORGANIZATION_ID");
            organizationId.AddAnnotation("Relational:ColumnType", "NUMBER(38)");

            var phntmOprnInherit = runtimeEntityType.AddProperty(
                "PhntmOprnInherit",
                typeof(decimal?),
                propertyInfo: typeof(RcsMfgParameter).GetProperty("PhntmOprnInherit", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(RcsMfgParameter).GetField("<PhntmOprnInherit>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                nullable: true);
            phntmOprnInherit.AddAnnotation("Oracle:ValueGenerationStrategy", OracleValueGenerationStrategy.None);
            phntmOprnInherit.AddAnnotation("Relational:ColumnName", "PHNTM_OPRN_INHERIT");
            phntmOprnInherit.AddAnnotation("Relational:ColumnType", "NUMBER(38)");

            var pickSlipGroupingRule = runtimeEntityType.AddProperty(
                "PickSlipGroupingRule",
                typeof(string),
                propertyInfo: typeof(RcsMfgParameter).GetProperty("PickSlipGroupingRule", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(RcsMfgParameter).GetField("<PickSlipGroupingRule>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                nullable: true,
                maxLength: 50,
                unicode: false);
            pickSlipGroupingRule.AddAnnotation("Oracle:ValueGenerationStrategy", OracleValueGenerationStrategy.None);
            pickSlipGroupingRule.AddAnnotation("Relational:ColumnName", "PICK_SLIP_GROUPING_RULE");

            var printLabelExternally = runtimeEntityType.AddProperty(
                "PrintLabelExternally",
                typeof(string),
                propertyInfo: typeof(RcsMfgParameter).GetProperty("PrintLabelExternally", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(RcsMfgParameter).GetField("<PrintLabelExternally>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                nullable: true,
                maxLength: 50,
                unicode: false);
            printLabelExternally.AddAnnotation("Oracle:ValueGenerationStrategy", OracleValueGenerationStrategy.None);
            printLabelExternally.AddAnnotation("Relational:ColumnName", "PRINT_LABEL_EXTERNALLY");

            var printPickSlipsFlag = runtimeEntityType.AddProperty(
                "PrintPickSlipsFlag",
                typeof(string),
                propertyInfo: typeof(RcsMfgParameter).GetProperty("PrintPickSlipsFlag", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(RcsMfgParameter).GetField("<PrintPickSlipsFlag>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                nullable: true,
                maxLength: 50,
                unicode: false);
            printPickSlipsFlag.AddAnnotation("Oracle:ValueGenerationStrategy", OracleValueGenerationStrategy.None);
            printPickSlipsFlag.AddAnnotation("Relational:ColumnName", "PRINT_PICK_SLIPS_FLAG");

            var purchaseReqCreateTime = runtimeEntityType.AddProperty(
                "PurchaseReqCreateTime",
                typeof(string),
                propertyInfo: typeof(RcsMfgParameter).GetProperty("PurchaseReqCreateTime", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(RcsMfgParameter).GetField("<PurchaseReqCreateTime>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                nullable: true,
                maxLength: 50,
                unicode: false);
            purchaseReqCreateTime.AddAnnotation("Oracle:ValueGenerationStrategy", OracleValueGenerationStrategy.None);
            purchaseReqCreateTime.AddAnnotation("Relational:ColumnName", "PURCHASE_REQ_CREATE_TIME");

            var qtyChngBackflush = runtimeEntityType.AddProperty(
                "QtyChngBackflush",
                typeof(decimal?),
                propertyInfo: typeof(RcsMfgParameter).GetProperty("QtyChngBackflush", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(RcsMfgParameter).GetField("<QtyChngBackflush>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                nullable: true);
            qtyChngBackflush.AddAnnotation("Oracle:ValueGenerationStrategy", OracleValueGenerationStrategy.None);
            qtyChngBackflush.AddAnnotation("Relational:ColumnName", "QTY_CHNG_BACKFLUSH");
            qtyChngBackflush.AddAnnotation("Relational:ColumnType", "NUMBER(38)");

            var startingOprnSeq = runtimeEntityType.AddProperty(
                "StartingOprnSeq",
                typeof(decimal?),
                propertyInfo: typeof(RcsMfgParameter).GetProperty("StartingOprnSeq", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(RcsMfgParameter).GetField("<StartingOprnSeq>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                nullable: true);
            startingOprnSeq.AddAnnotation("Oracle:ValueGenerationStrategy", OracleValueGenerationStrategy.None);
            startingOprnSeq.AddAnnotation("Relational:ColumnName", "STARTING_OPRN_SEQ");
            startingOprnSeq.AddAnnotation("Relational:ColumnType", "NUMBER(38)");

            var startstopCaptureLvl = runtimeEntityType.AddProperty(
                "StartstopCaptureLvl",
                typeof(string),
                propertyInfo: typeof(RcsMfgParameter).GetProperty("StartstopCaptureLvl", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(RcsMfgParameter).GetField("<StartstopCaptureLvl>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                nullable: true,
                maxLength: 50,
                unicode: false);
            startstopCaptureLvl.AddAnnotation("Oracle:ValueGenerationStrategy", OracleValueGenerationStrategy.None);
            startstopCaptureLvl.AddAnnotation("Relational:ColumnName", "STARTSTOP_CAPTURE_LVL");

            var woDocSeqCatCode = runtimeEntityType.AddProperty(
                "WoDocSeqCatCode",
                typeof(string),
                propertyInfo: typeof(RcsMfgParameter).GetProperty("WoDocSeqCatCode", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(RcsMfgParameter).GetField("<WoDocSeqCatCode>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                nullable: true,
                maxLength: 50,
                unicode: false);
            woDocSeqCatCode.AddAnnotation("Oracle:ValueGenerationStrategy", OracleValueGenerationStrategy.None);
            woDocSeqCatCode.AddAnnotation("Relational:ColumnName", "WO_DOC_SEQ_CAT_CODE");

            var woDocSeqId = runtimeEntityType.AddProperty(
                "WoDocSeqId",
                typeof(decimal?),
                propertyInfo: typeof(RcsMfgParameter).GetProperty("WoDocSeqId", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(RcsMfgParameter).GetField("<WoDocSeqId>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                nullable: true);
            woDocSeqId.AddAnnotation("Oracle:ValueGenerationStrategy", OracleValueGenerationStrategy.None);
            woDocSeqId.AddAnnotation("Relational:ColumnName", "WO_DOC_SEQ_ID");
            woDocSeqId.AddAnnotation("Relational:ColumnType", "NUMBER(38)");

            var woStartingNumber = runtimeEntityType.AddProperty(
                "WoStartingNumber",
                typeof(decimal?),
                propertyInfo: typeof(RcsMfgParameter).GetProperty("WoStartingNumber", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(RcsMfgParameter).GetField("<WoStartingNumber>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                nullable: true);
            woStartingNumber.AddAnnotation("Oracle:ValueGenerationStrategy", OracleValueGenerationStrategy.None);
            woStartingNumber.AddAnnotation("Relational:ColumnName", "WO_STARTING_NUMBER");
            woStartingNumber.AddAnnotation("Relational:ColumnType", "NUMBER(38)");

            var workOrderPrefix = runtimeEntityType.AddProperty(
                "WorkOrderPrefix",
                typeof(string),
                propertyInfo: typeof(RcsMfgParameter).GetProperty("WorkOrderPrefix", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(RcsMfgParameter).GetField("<WorkOrderPrefix>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                nullable: true,
                maxLength: 50,
                unicode: false);
            workOrderPrefix.AddAnnotation("Oracle:ValueGenerationStrategy", OracleValueGenerationStrategy.None);
            workOrderPrefix.AddAnnotation("Relational:ColumnName", "WORK_ORDER_PREFIX");

            return runtimeEntityType;
        }

        public static void CreateAnnotations(RuntimeEntityType runtimeEntityType)
        {
            runtimeEntityType.AddAnnotation("Relational:FunctionName", null);
            runtimeEntityType.AddAnnotation("Relational:Schema", "FUSION");
            runtimeEntityType.AddAnnotation("Relational:SqlQuery", null);
            runtimeEntityType.AddAnnotation("Relational:TableName", "RCS_MFG_PARAMETERS");
            runtimeEntityType.AddAnnotation("Relational:ViewName", null);
            runtimeEntityType.AddAnnotation("Relational:ViewSchema", null);

            Customize(runtimeEntityType);
        }

        static partial void Customize(RuntimeEntityType runtimeEntityType);
    }
}
