// <auto-generated />
using System;
using System.Reflection;
using Microsoft.EntityFrameworkCore.Metadata;
using Oracle.EntityFrameworkCore.Metadata;
using esquire.Models.Fusion;

#pragma warning disable 219, 612, 618
#nullable enable

namespace esquire.Models.Compiled
{
    internal partial class InvOrgParameterEntityType
    {
        public static RuntimeEntityType Create(RuntimeModel model, RuntimeEntityType? baseEntityType = null)
        {
            var runtimeEntityType = model.AddEntityType(
                "esquire.Models.Fusion.InvOrgParameter",
                typeof(InvOrgParameter),
                baseEntityType);

            var allocateSerialFlag = runtimeEntityType.AddProperty(
                "AllocateSerialFlag",
                typeof(string),
                propertyInfo: typeof(InvOrgParameter).GetProperty("AllocateSerialFlag", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(InvOrgParameter).GetField("<AllocateSerialFlag>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                nullable: true,
                maxLength: 50,
                unicode: false);
            allocateSerialFlag.AddAnnotation("Oracle:ValueGenerationStrategy", OracleValueGenerationStrategy.None);
            allocateSerialFlag.AddAnnotation("Relational:ColumnName", "ALLOCATE_SERIAL_FLAG");

            var allowDifferentStatus = runtimeEntityType.AddProperty(
                "AllowDifferentStatus",
                typeof(string),
                propertyInfo: typeof(InvOrgParameter).GetProperty("AllowDifferentStatus", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(InvOrgParameter).GetField("<AllowDifferentStatus>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                nullable: true,
                maxLength: 50,
                unicode: false);
            allowDifferentStatus.AddAnnotation("Oracle:ValueGenerationStrategy", OracleValueGenerationStrategy.None);
            allowDifferentStatus.AddAnnotation("Relational:ColumnName", "ALLOW_DIFFERENT_STATUS");

            var allowNegOnhandCcTxns = runtimeEntityType.AddProperty(
                "AllowNegOnhandCcTxns",
                typeof(string),
                propertyInfo: typeof(InvOrgParameter).GetProperty("AllowNegOnhandCcTxns", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(InvOrgParameter).GetField("<AllowNegOnhandCcTxns>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                nullable: true,
                maxLength: 50,
                unicode: false);
            allowNegOnhandCcTxns.AddAnnotation("Oracle:ValueGenerationStrategy", OracleValueGenerationStrategy.None);
            allowNegOnhandCcTxns.AddAnnotation("Relational:ColumnName", "ALLOW_NEG_ONHAND_CC_TXNS");

            var attribute1 = runtimeEntityType.AddProperty(
                "Attribute1",
                typeof(string),
                propertyInfo: typeof(InvOrgParameter).GetProperty("Attribute1", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(InvOrgParameter).GetField("<Attribute1>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                nullable: true,
                maxLength: 50,
                unicode: false);
            attribute1.AddAnnotation("Oracle:ValueGenerationStrategy", OracleValueGenerationStrategy.None);
            attribute1.AddAnnotation("Relational:ColumnName", "ATTRIBUTE1");

            var attribute10 = runtimeEntityType.AddProperty(
                "Attribute10",
                typeof(string),
                propertyInfo: typeof(InvOrgParameter).GetProperty("Attribute10", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(InvOrgParameter).GetField("<Attribute10>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                nullable: true,
                maxLength: 50,
                unicode: false);
            attribute10.AddAnnotation("Oracle:ValueGenerationStrategy", OracleValueGenerationStrategy.None);
            attribute10.AddAnnotation("Relational:ColumnName", "ATTRIBUTE10");

            var attribute11 = runtimeEntityType.AddProperty(
                "Attribute11",
                typeof(string),
                propertyInfo: typeof(InvOrgParameter).GetProperty("Attribute11", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(InvOrgParameter).GetField("<Attribute11>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                nullable: true,
                maxLength: 50,
                unicode: false);
            attribute11.AddAnnotation("Oracle:ValueGenerationStrategy", OracleValueGenerationStrategy.None);
            attribute11.AddAnnotation("Relational:ColumnName", "ATTRIBUTE11");

            var attribute12 = runtimeEntityType.AddProperty(
                "Attribute12",
                typeof(string),
                propertyInfo: typeof(InvOrgParameter).GetProperty("Attribute12", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(InvOrgParameter).GetField("<Attribute12>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                nullable: true,
                maxLength: 50,
                unicode: false);
            attribute12.AddAnnotation("Oracle:ValueGenerationStrategy", OracleValueGenerationStrategy.None);
            attribute12.AddAnnotation("Relational:ColumnName", "ATTRIBUTE12");

            var attribute13 = runtimeEntityType.AddProperty(
                "Attribute13",
                typeof(string),
                propertyInfo: typeof(InvOrgParameter).GetProperty("Attribute13", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(InvOrgParameter).GetField("<Attribute13>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                nullable: true,
                maxLength: 50,
                unicode: false);
            attribute13.AddAnnotation("Oracle:ValueGenerationStrategy", OracleValueGenerationStrategy.None);
            attribute13.AddAnnotation("Relational:ColumnName", "ATTRIBUTE13");

            var attribute14 = runtimeEntityType.AddProperty(
                "Attribute14",
                typeof(string),
                propertyInfo: typeof(InvOrgParameter).GetProperty("Attribute14", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(InvOrgParameter).GetField("<Attribute14>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                nullable: true,
                maxLength: 50,
                unicode: false);
            attribute14.AddAnnotation("Oracle:ValueGenerationStrategy", OracleValueGenerationStrategy.None);
            attribute14.AddAnnotation("Relational:ColumnName", "ATTRIBUTE14");

            var attribute15 = runtimeEntityType.AddProperty(
                "Attribute15",
                typeof(string),
                propertyInfo: typeof(InvOrgParameter).GetProperty("Attribute15", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(InvOrgParameter).GetField("<Attribute15>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                nullable: true,
                maxLength: 50,
                unicode: false);
            attribute15.AddAnnotation("Oracle:ValueGenerationStrategy", OracleValueGenerationStrategy.None);
            attribute15.AddAnnotation("Relational:ColumnName", "ATTRIBUTE15");

            var attribute2 = runtimeEntityType.AddProperty(
                "Attribute2",
                typeof(string),
                propertyInfo: typeof(InvOrgParameter).GetProperty("Attribute2", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(InvOrgParameter).GetField("<Attribute2>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                nullable: true,
                maxLength: 50,
                unicode: false);
            attribute2.AddAnnotation("Oracle:ValueGenerationStrategy", OracleValueGenerationStrategy.None);
            attribute2.AddAnnotation("Relational:ColumnName", "ATTRIBUTE2");

            var attribute3 = runtimeEntityType.AddProperty(
                "Attribute3",
                typeof(string),
                propertyInfo: typeof(InvOrgParameter).GetProperty("Attribute3", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(InvOrgParameter).GetField("<Attribute3>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                nullable: true,
                maxLength: 50,
                unicode: false);
            attribute3.AddAnnotation("Oracle:ValueGenerationStrategy", OracleValueGenerationStrategy.None);
            attribute3.AddAnnotation("Relational:ColumnName", "ATTRIBUTE3");

            var attribute4 = runtimeEntityType.AddProperty(
                "Attribute4",
                typeof(string),
                propertyInfo: typeof(InvOrgParameter).GetProperty("Attribute4", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(InvOrgParameter).GetField("<Attribute4>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                nullable: true,
                maxLength: 50,
                unicode: false);
            attribute4.AddAnnotation("Oracle:ValueGenerationStrategy", OracleValueGenerationStrategy.None);
            attribute4.AddAnnotation("Relational:ColumnName", "ATTRIBUTE4");

            var attribute5 = runtimeEntityType.AddProperty(
                "Attribute5",
                typeof(string),
                propertyInfo: typeof(InvOrgParameter).GetProperty("Attribute5", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(InvOrgParameter).GetField("<Attribute5>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                nullable: true,
                maxLength: 50,
                unicode: false);
            attribute5.AddAnnotation("Oracle:ValueGenerationStrategy", OracleValueGenerationStrategy.None);
            attribute5.AddAnnotation("Relational:ColumnName", "ATTRIBUTE5");

            var attribute6 = runtimeEntityType.AddProperty(
                "Attribute6",
                typeof(string),
                propertyInfo: typeof(InvOrgParameter).GetProperty("Attribute6", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(InvOrgParameter).GetField("<Attribute6>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                nullable: true,
                maxLength: 50,
                unicode: false);
            attribute6.AddAnnotation("Oracle:ValueGenerationStrategy", OracleValueGenerationStrategy.None);
            attribute6.AddAnnotation("Relational:ColumnName", "ATTRIBUTE6");

            var attribute7 = runtimeEntityType.AddProperty(
                "Attribute7",
                typeof(string),
                propertyInfo: typeof(InvOrgParameter).GetProperty("Attribute7", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(InvOrgParameter).GetField("<Attribute7>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                nullable: true,
                maxLength: 50,
                unicode: false);
            attribute7.AddAnnotation("Oracle:ValueGenerationStrategy", OracleValueGenerationStrategy.None);
            attribute7.AddAnnotation("Relational:ColumnName", "ATTRIBUTE7");

            var attribute8 = runtimeEntityType.AddProperty(
                "Attribute8",
                typeof(string),
                propertyInfo: typeof(InvOrgParameter).GetProperty("Attribute8", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(InvOrgParameter).GetField("<Attribute8>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                nullable: true,
                maxLength: 50,
                unicode: false);
            attribute8.AddAnnotation("Oracle:ValueGenerationStrategy", OracleValueGenerationStrategy.None);
            attribute8.AddAnnotation("Relational:ColumnName", "ATTRIBUTE8");

            var attribute9 = runtimeEntityType.AddProperty(
                "Attribute9",
                typeof(string),
                propertyInfo: typeof(InvOrgParameter).GetProperty("Attribute9", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(InvOrgParameter).GetField("<Attribute9>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                nullable: true,
                maxLength: 50,
                unicode: false);
            attribute9.AddAnnotation("Oracle:ValueGenerationStrategy", OracleValueGenerationStrategy.None);
            attribute9.AddAnnotation("Relational:ColumnName", "ATTRIBUTE9");

            var attributeCategory = runtimeEntityType.AddProperty(
                "AttributeCategory",
                typeof(string),
                propertyInfo: typeof(InvOrgParameter).GetProperty("AttributeCategory", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(InvOrgParameter).GetField("<AttributeCategory>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                nullable: true,
                maxLength: 50,
                unicode: false);
            attributeCategory.AddAnnotation("Oracle:ValueGenerationStrategy", OracleValueGenerationStrategy.None);
            attributeCategory.AddAnnotation("Relational:ColumnName", "ATTRIBUTE_CATEGORY");

            var attributeDate1 = runtimeEntityType.AddProperty(
                "AttributeDate1",
                typeof(DateTime?),
                propertyInfo: typeof(InvOrgParameter).GetProperty("AttributeDate1", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(InvOrgParameter).GetField("<AttributeDate1>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                nullable: true);
            attributeDate1.AddAnnotation("Oracle:ValueGenerationStrategy", OracleValueGenerationStrategy.None);
            attributeDate1.AddAnnotation("Relational:ColumnName", "ATTRIBUTE_DATE1");
            attributeDate1.AddAnnotation("Relational:ColumnType", "DATE");

            var attributeDate2 = runtimeEntityType.AddProperty(
                "AttributeDate2",
                typeof(DateTime?),
                propertyInfo: typeof(InvOrgParameter).GetProperty("AttributeDate2", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(InvOrgParameter).GetField("<AttributeDate2>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                nullable: true);
            attributeDate2.AddAnnotation("Oracle:ValueGenerationStrategy", OracleValueGenerationStrategy.None);
            attributeDate2.AddAnnotation("Relational:ColumnName", "ATTRIBUTE_DATE2");
            attributeDate2.AddAnnotation("Relational:ColumnType", "DATE");

            var attributeDate3 = runtimeEntityType.AddProperty(
                "AttributeDate3",
                typeof(DateTime?),
                propertyInfo: typeof(InvOrgParameter).GetProperty("AttributeDate3", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(InvOrgParameter).GetField("<AttributeDate3>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                nullable: true);
            attributeDate3.AddAnnotation("Oracle:ValueGenerationStrategy", OracleValueGenerationStrategy.None);
            attributeDate3.AddAnnotation("Relational:ColumnName", "ATTRIBUTE_DATE3");
            attributeDate3.AddAnnotation("Relational:ColumnType", "DATE");

            var attributeDate4 = runtimeEntityType.AddProperty(
                "AttributeDate4",
                typeof(DateTime?),
                propertyInfo: typeof(InvOrgParameter).GetProperty("AttributeDate4", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(InvOrgParameter).GetField("<AttributeDate4>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                nullable: true);
            attributeDate4.AddAnnotation("Oracle:ValueGenerationStrategy", OracleValueGenerationStrategy.None);
            attributeDate4.AddAnnotation("Relational:ColumnName", "ATTRIBUTE_DATE4");
            attributeDate4.AddAnnotation("Relational:ColumnType", "DATE");

            var attributeDate5 = runtimeEntityType.AddProperty(
                "AttributeDate5",
                typeof(DateTime?),
                propertyInfo: typeof(InvOrgParameter).GetProperty("AttributeDate5", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(InvOrgParameter).GetField("<AttributeDate5>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                nullable: true);
            attributeDate5.AddAnnotation("Oracle:ValueGenerationStrategy", OracleValueGenerationStrategy.None);
            attributeDate5.AddAnnotation("Relational:ColumnName", "ATTRIBUTE_DATE5");
            attributeDate5.AddAnnotation("Relational:ColumnType", "DATE");

            var attributeNumber1 = runtimeEntityType.AddProperty(
                "AttributeNumber1",
                typeof(string),
                propertyInfo: typeof(InvOrgParameter).GetProperty("AttributeNumber1", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(InvOrgParameter).GetField("<AttributeNumber1>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                nullable: true,
                maxLength: 50,
                unicode: false);
            attributeNumber1.AddAnnotation("Oracle:ValueGenerationStrategy", OracleValueGenerationStrategy.None);
            attributeNumber1.AddAnnotation("Relational:ColumnName", "ATTRIBUTE_NUMBER1");

            var attributeNumber10 = runtimeEntityType.AddProperty(
                "AttributeNumber10",
                typeof(string),
                propertyInfo: typeof(InvOrgParameter).GetProperty("AttributeNumber10", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(InvOrgParameter).GetField("<AttributeNumber10>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                nullable: true,
                maxLength: 50,
                unicode: false);
            attributeNumber10.AddAnnotation("Oracle:ValueGenerationStrategy", OracleValueGenerationStrategy.None);
            attributeNumber10.AddAnnotation("Relational:ColumnName", "ATTRIBUTE_NUMBER10");

            var attributeNumber2 = runtimeEntityType.AddProperty(
                "AttributeNumber2",
                typeof(string),
                propertyInfo: typeof(InvOrgParameter).GetProperty("AttributeNumber2", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(InvOrgParameter).GetField("<AttributeNumber2>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                nullable: true,
                maxLength: 50,
                unicode: false);
            attributeNumber2.AddAnnotation("Oracle:ValueGenerationStrategy", OracleValueGenerationStrategy.None);
            attributeNumber2.AddAnnotation("Relational:ColumnName", "ATTRIBUTE_NUMBER2");

            var attributeNumber3 = runtimeEntityType.AddProperty(
                "AttributeNumber3",
                typeof(string),
                propertyInfo: typeof(InvOrgParameter).GetProperty("AttributeNumber3", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(InvOrgParameter).GetField("<AttributeNumber3>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                nullable: true,
                maxLength: 50,
                unicode: false);
            attributeNumber3.AddAnnotation("Oracle:ValueGenerationStrategy", OracleValueGenerationStrategy.None);
            attributeNumber3.AddAnnotation("Relational:ColumnName", "ATTRIBUTE_NUMBER3");

            var attributeNumber4 = runtimeEntityType.AddProperty(
                "AttributeNumber4",
                typeof(string),
                propertyInfo: typeof(InvOrgParameter).GetProperty("AttributeNumber4", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(InvOrgParameter).GetField("<AttributeNumber4>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                nullable: true,
                maxLength: 50,
                unicode: false);
            attributeNumber4.AddAnnotation("Oracle:ValueGenerationStrategy", OracleValueGenerationStrategy.None);
            attributeNumber4.AddAnnotation("Relational:ColumnName", "ATTRIBUTE_NUMBER4");

            var attributeNumber5 = runtimeEntityType.AddProperty(
                "AttributeNumber5",
                typeof(string),
                propertyInfo: typeof(InvOrgParameter).GetProperty("AttributeNumber5", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(InvOrgParameter).GetField("<AttributeNumber5>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                nullable: true,
                maxLength: 50,
                unicode: false);
            attributeNumber5.AddAnnotation("Oracle:ValueGenerationStrategy", OracleValueGenerationStrategy.None);
            attributeNumber5.AddAnnotation("Relational:ColumnName", "ATTRIBUTE_NUMBER5");

            var attributeNumber6 = runtimeEntityType.AddProperty(
                "AttributeNumber6",
                typeof(string),
                propertyInfo: typeof(InvOrgParameter).GetProperty("AttributeNumber6", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(InvOrgParameter).GetField("<AttributeNumber6>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                nullable: true,
                maxLength: 50,
                unicode: false);
            attributeNumber6.AddAnnotation("Oracle:ValueGenerationStrategy", OracleValueGenerationStrategy.None);
            attributeNumber6.AddAnnotation("Relational:ColumnName", "ATTRIBUTE_NUMBER6");

            var attributeNumber7 = runtimeEntityType.AddProperty(
                "AttributeNumber7",
                typeof(string),
                propertyInfo: typeof(InvOrgParameter).GetProperty("AttributeNumber7", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(InvOrgParameter).GetField("<AttributeNumber7>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                nullable: true,
                maxLength: 50,
                unicode: false);
            attributeNumber7.AddAnnotation("Oracle:ValueGenerationStrategy", OracleValueGenerationStrategy.None);
            attributeNumber7.AddAnnotation("Relational:ColumnName", "ATTRIBUTE_NUMBER7");

            var attributeNumber8 = runtimeEntityType.AddProperty(
                "AttributeNumber8",
                typeof(string),
                propertyInfo: typeof(InvOrgParameter).GetProperty("AttributeNumber8", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(InvOrgParameter).GetField("<AttributeNumber8>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                nullable: true,
                maxLength: 50,
                unicode: false);
            attributeNumber8.AddAnnotation("Oracle:ValueGenerationStrategy", OracleValueGenerationStrategy.None);
            attributeNumber8.AddAnnotation("Relational:ColumnName", "ATTRIBUTE_NUMBER8");

            var attributeNumber9 = runtimeEntityType.AddProperty(
                "AttributeNumber9",
                typeof(string),
                propertyInfo: typeof(InvOrgParameter).GetProperty("AttributeNumber9", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(InvOrgParameter).GetField("<AttributeNumber9>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                nullable: true,
                maxLength: 50,
                unicode: false);
            attributeNumber9.AddAnnotation("Oracle:ValueGenerationStrategy", OracleValueGenerationStrategy.None);
            attributeNumber9.AddAnnotation("Relational:ColumnName", "ATTRIBUTE_NUMBER9");

            var attributeTimestamp1 = runtimeEntityType.AddProperty(
                "AttributeTimestamp1",
                typeof(string),
                propertyInfo: typeof(InvOrgParameter).GetProperty("AttributeTimestamp1", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(InvOrgParameter).GetField("<AttributeTimestamp1>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                nullable: true,
                maxLength: 50,
                unicode: false);
            attributeTimestamp1.AddAnnotation("Oracle:ValueGenerationStrategy", OracleValueGenerationStrategy.None);
            attributeTimestamp1.AddAnnotation("Relational:ColumnName", "ATTRIBUTE_TIMESTAMP1");

            var attributeTimestamp2 = runtimeEntityType.AddProperty(
                "AttributeTimestamp2",
                typeof(string),
                propertyInfo: typeof(InvOrgParameter).GetProperty("AttributeTimestamp2", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(InvOrgParameter).GetField("<AttributeTimestamp2>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                nullable: true,
                maxLength: 50,
                unicode: false);
            attributeTimestamp2.AddAnnotation("Oracle:ValueGenerationStrategy", OracleValueGenerationStrategy.None);
            attributeTimestamp2.AddAnnotation("Relational:ColumnName", "ATTRIBUTE_TIMESTAMP2");

            var attributeTimestamp3 = runtimeEntityType.AddProperty(
                "AttributeTimestamp3",
                typeof(string),
                propertyInfo: typeof(InvOrgParameter).GetProperty("AttributeTimestamp3", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(InvOrgParameter).GetField("<AttributeTimestamp3>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                nullable: true,
                maxLength: 50,
                unicode: false);
            attributeTimestamp3.AddAnnotation("Oracle:ValueGenerationStrategy", OracleValueGenerationStrategy.None);
            attributeTimestamp3.AddAnnotation("Relational:ColumnName", "ATTRIBUTE_TIMESTAMP3");

            var attributeTimestamp4 = runtimeEntityType.AddProperty(
                "AttributeTimestamp4",
                typeof(string),
                propertyInfo: typeof(InvOrgParameter).GetProperty("AttributeTimestamp4", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(InvOrgParameter).GetField("<AttributeTimestamp4>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                nullable: true,
                maxLength: 50,
                unicode: false);
            attributeTimestamp4.AddAnnotation("Oracle:ValueGenerationStrategy", OracleValueGenerationStrategy.None);
            attributeTimestamp4.AddAnnotation("Relational:ColumnName", "ATTRIBUTE_TIMESTAMP4");

            var attributeTimestamp5 = runtimeEntityType.AddProperty(
                "AttributeTimestamp5",
                typeof(string),
                propertyInfo: typeof(InvOrgParameter).GetProperty("AttributeTimestamp5", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(InvOrgParameter).GetField("<AttributeTimestamp5>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                nullable: true,
                maxLength: 50,
                unicode: false);
            attributeTimestamp5.AddAnnotation("Oracle:ValueGenerationStrategy", OracleValueGenerationStrategy.None);
            attributeTimestamp5.AddAnnotation("Relational:ColumnName", "ATTRIBUTE_TIMESTAMP5");

            var autoBreakdownEnabled = runtimeEntityType.AddProperty(
                "AutoBreakdownEnabled",
                typeof(string),
                propertyInfo: typeof(InvOrgParameter).GetProperty("AutoBreakdownEnabled", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(InvOrgParameter).GetField("<AutoBreakdownEnabled>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                nullable: true,
                maxLength: 50,
                unicode: false);
            autoBreakdownEnabled.AddAnnotation("Oracle:ValueGenerationStrategy", OracleValueGenerationStrategy.None);
            autoBreakdownEnabled.AddAnnotation("Relational:ColumnName", "AUTO_BREAKDOWN_ENABLED");

            var autoDelAllocFlag = runtimeEntityType.AddProperty(
                "AutoDelAllocFlag",
                typeof(string),
                propertyInfo: typeof(InvOrgParameter).GetProperty("AutoDelAllocFlag", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(InvOrgParameter).GetField("<AutoDelAllocFlag>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                nullable: true,
                maxLength: 50,
                unicode: false);
            autoDelAllocFlag.AddAnnotation("Oracle:ValueGenerationStrategy", OracleValueGenerationStrategy.None);
            autoDelAllocFlag.AddAnnotation("Relational:ColumnName", "AUTO_DEL_ALLOC_FLAG");

            var autoLotAlphaPrefix = runtimeEntityType.AddProperty(
                "AutoLotAlphaPrefix",
                typeof(string),
                propertyInfo: typeof(InvOrgParameter).GetProperty("AutoLotAlphaPrefix", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(InvOrgParameter).GetField("<AutoLotAlphaPrefix>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                nullable: true,
                maxLength: 50,
                unicode: false);
            autoLotAlphaPrefix.AddAnnotation("Oracle:ValueGenerationStrategy", OracleValueGenerationStrategy.None);
            autoLotAlphaPrefix.AddAnnotation("Relational:ColumnName", "AUTO_LOT_ALPHA_PREFIX");

            var autoSerialAlphaPrefix = runtimeEntityType.AddProperty(
                "AutoSerialAlphaPrefix",
                typeof(string),
                propertyInfo: typeof(InvOrgParameter).GetProperty("AutoSerialAlphaPrefix", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(InvOrgParameter).GetField("<AutoSerialAlphaPrefix>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                nullable: true,
                maxLength: 50,
                unicode: false);
            autoSerialAlphaPrefix.AddAnnotation("Oracle:ValueGenerationStrategy", OracleValueGenerationStrategy.None);
            autoSerialAlphaPrefix.AddAnnotation("Relational:ColumnName", "AUTO_SERIAL_ALPHA_PREFIX");

            var businessUnitId = runtimeEntityType.AddProperty(
                "BusinessUnitId",
                typeof(decimal?),
                propertyInfo: typeof(InvOrgParameter).GetProperty("BusinessUnitId", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(InvOrgParameter).GetField("<BusinessUnitId>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                nullable: true);
            businessUnitId.AddAnnotation("Oracle:ValueGenerationStrategy", OracleValueGenerationStrategy.None);
            businessUnitId.AddAnnotation("Relational:ColumnName", "BUSINESS_UNIT_ID");
            businessUnitId.AddAnnotation("Relational:ColumnType", "NUMBER(38)");

            var capturePickingException = runtimeEntityType.AddProperty(
                "CapturePickingException",
                typeof(string),
                propertyInfo: typeof(InvOrgParameter).GetProperty("CapturePickingException", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(InvOrgParameter).GetField("<CapturePickingException>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                nullable: true,
                maxLength: 50,
                unicode: false);
            capturePickingException.AddAnnotation("Oracle:ValueGenerationStrategy", OracleValueGenerationStrategy.None);
            capturePickingException.AddAnnotation("Relational:ColumnName", "CAPTURE_PICKING_EXCEPTION");

            var cartonizationFlag = runtimeEntityType.AddProperty(
                "CartonizationFlag",
                typeof(string),
                propertyInfo: typeof(InvOrgParameter).GetProperty("CartonizationFlag", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(InvOrgParameter).GetField("<CartonizationFlag>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                nullable: true,
                maxLength: 50,
                unicode: false);
            cartonizationFlag.AddAnnotation("Oracle:ValueGenerationStrategy", OracleValueGenerationStrategy.None);
            cartonizationFlag.AddAnnotation("Relational:ColumnName", "CARTONIZATION_FLAG");

            var childLotAlphaPrefix = runtimeEntityType.AddProperty(
                "ChildLotAlphaPrefix",
                typeof(string),
                propertyInfo: typeof(InvOrgParameter).GetProperty("ChildLotAlphaPrefix", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(InvOrgParameter).GetField("<ChildLotAlphaPrefix>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                nullable: true,
                maxLength: 50,
                unicode: false);
            childLotAlphaPrefix.AddAnnotation("Oracle:ValueGenerationStrategy", OracleValueGenerationStrategy.None);
            childLotAlphaPrefix.AddAnnotation("Relational:ColumnName", "CHILD_LOT_ALPHA_PREFIX");

            var childLotNumberLength = runtimeEntityType.AddProperty(
                "ChildLotNumberLength",
                typeof(string),
                propertyInfo: typeof(InvOrgParameter).GetProperty("ChildLotNumberLength", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(InvOrgParameter).GetField("<ChildLotNumberLength>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                nullable: true,
                maxLength: 50,
                unicode: false);
            childLotNumberLength.AddAnnotation("Oracle:ValueGenerationStrategy", OracleValueGenerationStrategy.None);
            childLotNumberLength.AddAnnotation("Relational:ColumnName", "CHILD_LOT_NUMBER_LENGTH");

            var childLotValidationFlag = runtimeEntityType.AddProperty(
                "ChildLotValidationFlag",
                typeof(string),
                propertyInfo: typeof(InvOrgParameter).GetProperty("ChildLotValidationFlag", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(InvOrgParameter).GetField("<ChildLotValidationFlag>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                nullable: true,
                maxLength: 50,
                unicode: false);
            childLotValidationFlag.AddAnnotation("Oracle:ValueGenerationStrategy", OracleValueGenerationStrategy.None);
            childLotValidationFlag.AddAnnotation("Relational:ColumnName", "CHILD_LOT_VALIDATION_FLAG");

            var childLotZeroPaddingFlag = runtimeEntityType.AddProperty(
                "ChildLotZeroPaddingFlag",
                typeof(string),
                propertyInfo: typeof(InvOrgParameter).GetProperty("ChildLotZeroPaddingFlag", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(InvOrgParameter).GetField("<ChildLotZeroPaddingFlag>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                nullable: true,
                maxLength: 50,
                unicode: false);
            childLotZeroPaddingFlag.AddAnnotation("Oracle:ValueGenerationStrategy", OracleValueGenerationStrategy.None);
            childLotZeroPaddingFlag.AddAnnotation("Relational:ColumnName", "CHILD_LOT_ZERO_PADDING_FLAG");

            var contractMfgFlag = runtimeEntityType.AddProperty(
                "ContractMfgFlag",
                typeof(string),
                propertyInfo: typeof(InvOrgParameter).GetProperty("ContractMfgFlag", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(InvOrgParameter).GetField("<ContractMfgFlag>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                nullable: true,
                maxLength: 50,
                unicode: false);
            contractMfgFlag.AddAnnotation("Oracle:ValueGenerationStrategy", OracleValueGenerationStrategy.None);
            contractMfgFlag.AddAnnotation("Relational:ColumnName", "CONTRACT_MFG_FLAG");

            var copyLotAttributeFlag = runtimeEntityType.AddProperty(
                "CopyLotAttributeFlag",
                typeof(string),
                propertyInfo: typeof(InvOrgParameter).GetProperty("CopyLotAttributeFlag", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(InvOrgParameter).GetField("<CopyLotAttributeFlag>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                nullable: true,
                maxLength: 50,
                unicode: false);
            copyLotAttributeFlag.AddAnnotation("Oracle:ValueGenerationStrategy", OracleValueGenerationStrategy.None);
            copyLotAttributeFlag.AddAnnotation("Relational:ColumnName", "COPY_LOT_ATTRIBUTE_FLAG");

            var createLotUomConversion = runtimeEntityType.AddProperty(
                "CreateLotUomConversion",
                typeof(string),
                propertyInfo: typeof(InvOrgParameter).GetProperty("CreateLotUomConversion", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(InvOrgParameter).GetField("<CreateLotUomConversion>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                nullable: true,
                maxLength: 50,
                unicode: false);
            createLotUomConversion.AddAnnotation("Oracle:ValueGenerationStrategy", OracleValueGenerationStrategy.None);
            createLotUomConversion.AddAnnotation("Relational:ColumnName", "CREATE_LOT_UOM_CONVERSION");

            var createdBy = runtimeEntityType.AddProperty(
                "CreatedBy",
                typeof(string),
                propertyInfo: typeof(InvOrgParameter).GetProperty("CreatedBy", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(InvOrgParameter).GetField("<CreatedBy>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                nullable: true,
                maxLength: 50,
                unicode: false);
            createdBy.AddAnnotation("Oracle:ValueGenerationStrategy", OracleValueGenerationStrategy.None);
            createdBy.AddAnnotation("Relational:ColumnName", "CREATED_BY");

            var creationDate = runtimeEntityType.AddProperty(
                "CreationDate",
                typeof(DateTime?),
                propertyInfo: typeof(InvOrgParameter).GetProperty("CreationDate", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(InvOrgParameter).GetField("<CreationDate>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                nullable: true);
            creationDate.AddAnnotation("Oracle:ValueGenerationStrategy", OracleValueGenerationStrategy.None);
            creationDate.AddAnnotation("Relational:ColumnName", "CREATION_DATE");
            creationDate.AddAnnotation("Relational:ColumnType", "DATE");

            var crossdockFlag = runtimeEntityType.AddProperty(
                "CrossdockFlag",
                typeof(string),
                propertyInfo: typeof(InvOrgParameter).GetProperty("CrossdockFlag", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(InvOrgParameter).GetField("<CrossdockFlag>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                nullable: true,
                maxLength: 50,
                unicode: false);
            crossdockFlag.AddAnnotation("Oracle:ValueGenerationStrategy", OracleValueGenerationStrategy.None);
            crossdockFlag.AddAnnotation("Relational:ColumnName", "CROSSDOCK_FLAG");

            var customerAccountNumber = runtimeEntityType.AddProperty(
                "CustomerAccountNumber",
                typeof(string),
                propertyInfo: typeof(InvOrgParameter).GetProperty("CustomerAccountNumber", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(InvOrgParameter).GetField("<CustomerAccountNumber>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                nullable: true,
                maxLength: 50,
                unicode: false);
            customerAccountNumber.AddAnnotation("Oracle:ValueGenerationStrategy", OracleValueGenerationStrategy.None);
            customerAccountNumber.AddAnnotation("Relational:ColumnName", "CUSTOMER_ACCOUNT_NUMBER");

            var defaultCartonRuleId = runtimeEntityType.AddProperty(
                "DefaultCartonRuleId",
                typeof(decimal?),
                propertyInfo: typeof(InvOrgParameter).GetProperty("DefaultCartonRuleId", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(InvOrgParameter).GetField("<DefaultCartonRuleId>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                nullable: true);
            defaultCartonRuleId.AddAnnotation("Oracle:ValueGenerationStrategy", OracleValueGenerationStrategy.None);
            defaultCartonRuleId.AddAnnotation("Relational:ColumnName", "DEFAULT_CARTON_RULE_ID");
            defaultCartonRuleId.AddAnnotation("Relational:ColumnType", "NUMBER(38)");

            var defaultCycCountHeaderId = runtimeEntityType.AddProperty(
                "DefaultCycCountHeaderId",
                typeof(decimal?),
                propertyInfo: typeof(InvOrgParameter).GetProperty("DefaultCycCountHeaderId", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(InvOrgParameter).GetField("<DefaultCycCountHeaderId>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                nullable: true);
            defaultCycCountHeaderId.AddAnnotation("Oracle:ValueGenerationStrategy", OracleValueGenerationStrategy.None);
            defaultCycCountHeaderId.AddAnnotation("Relational:ColumnName", "DEFAULT_CYC_COUNT_HEADER_ID");
            defaultCycCountHeaderId.AddAnnotation("Relational:ColumnType", "NUMBER(38)");

            var defaultLocatorOrderValue = runtimeEntityType.AddProperty(
                "DefaultLocatorOrderValue",
                typeof(string),
                propertyInfo: typeof(InvOrgParameter).GetProperty("DefaultLocatorOrderValue", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(InvOrgParameter).GetField("<DefaultLocatorOrderValue>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                nullable: true,
                maxLength: 50,
                unicode: false);
            defaultLocatorOrderValue.AddAnnotation("Oracle:ValueGenerationStrategy", OracleValueGenerationStrategy.None);
            defaultLocatorOrderValue.AddAnnotation("Relational:ColumnName", "DEFAULT_LOCATOR_ORDER_VALUE");

            var defaultPickingRuleId = runtimeEntityType.AddProperty(
                "DefaultPickingRuleId",
                typeof(decimal?),
                propertyInfo: typeof(InvOrgParameter).GetProperty("DefaultPickingRuleId", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(InvOrgParameter).GetField("<DefaultPickingRuleId>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                nullable: true);
            defaultPickingRuleId.AddAnnotation("Oracle:ValueGenerationStrategy", OracleValueGenerationStrategy.None);
            defaultPickingRuleId.AddAnnotation("Relational:ColumnName", "DEFAULT_PICKING_RULE_ID");
            defaultPickingRuleId.AddAnnotation("Relational:ColumnType", "NUMBER(38)");

            var defaultPutAwayRuleId = runtimeEntityType.AddProperty(
                "DefaultPutAwayRuleId",
                typeof(decimal?),
                propertyInfo: typeof(InvOrgParameter).GetProperty("DefaultPutAwayRuleId", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(InvOrgParameter).GetField("<DefaultPutAwayRuleId>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                nullable: true);
            defaultPutAwayRuleId.AddAnnotation("Oracle:ValueGenerationStrategy", OracleValueGenerationStrategy.None);
            defaultPutAwayRuleId.AddAnnotation("Relational:ColumnName", "DEFAULT_PUT_AWAY_RULE_ID");
            defaultPutAwayRuleId.AddAnnotation("Relational:ColumnType", "NUMBER(38)");

            var defaultSubinvOrderValue = runtimeEntityType.AddProperty(
                "DefaultSubinvOrderValue",
                typeof(string),
                propertyInfo: typeof(InvOrgParameter).GetProperty("DefaultSubinvOrderValue", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(InvOrgParameter).GetField("<DefaultSubinvOrderValue>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                nullable: true,
                maxLength: 50,
                unicode: false);
            defaultSubinvOrderValue.AddAnnotation("Oracle:ValueGenerationStrategy", OracleValueGenerationStrategy.None);
            defaultSubinvOrderValue.AddAnnotation("Relational:ColumnName", "DEFAULT_SUBINV_ORDER_VALUE");

            var defaultWmsPickingRuleId = runtimeEntityType.AddProperty(
                "DefaultWmsPickingRuleId",
                typeof(decimal?),
                propertyInfo: typeof(InvOrgParameter).GetProperty("DefaultWmsPickingRuleId", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(InvOrgParameter).GetField("<DefaultWmsPickingRuleId>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                nullable: true);
            defaultWmsPickingRuleId.AddAnnotation("Oracle:ValueGenerationStrategy", OracleValueGenerationStrategy.None);
            defaultWmsPickingRuleId.AddAnnotation("Relational:ColumnName", "DEFAULT_WMS_PICKING_RULE_ID");
            defaultWmsPickingRuleId.AddAnnotation("Relational:ColumnType", "NUMBER(38)");

            var distributedOrganizationFlag = runtimeEntityType.AddProperty(
                "DistributedOrganizationFlag",
                typeof(string),
                propertyInfo: typeof(InvOrgParameter).GetProperty("DistributedOrganizationFlag", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(InvOrgParameter).GetField("<DistributedOrganizationFlag>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                nullable: true,
                maxLength: 50,
                unicode: false);
            distributedOrganizationFlag.AddAnnotation("Oracle:ValueGenerationStrategy", OracleValueGenerationStrategy.None);
            distributedOrganizationFlag.AddAnnotation("Relational:ColumnName", "DISTRIBUTED_ORGANIZATION_FLAG");

            var eamEnabledFlag = runtimeEntityType.AddProperty(
                "EamEnabledFlag",
                typeof(string),
                propertyInfo: typeof(InvOrgParameter).GetProperty("EamEnabledFlag", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(InvOrgParameter).GetField("<EamEnabledFlag>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                nullable: true,
                maxLength: 50,
                unicode: false);
            eamEnabledFlag.AddAnnotation("Oracle:ValueGenerationStrategy", OracleValueGenerationStrategy.None);
            eamEnabledFlag.AddAnnotation("Relational:ColumnName", "EAM_ENABLED_FLAG");

            var enforceLocatorAlisUnqFlag = runtimeEntityType.AddProperty(
                "EnforceLocatorAlisUnqFlag",
                typeof(string),
                propertyInfo: typeof(InvOrgParameter).GetProperty("EnforceLocatorAlisUnqFlag", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(InvOrgParameter).GetField("<EnforceLocatorAlisUnqFlag>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                nullable: true,
                maxLength: 50,
                unicode: false);
            enforceLocatorAlisUnqFlag.AddAnnotation("Oracle:ValueGenerationStrategy", OracleValueGenerationStrategy.None);
            enforceLocatorAlisUnqFlag.AddAnnotation("Relational:ColumnName", "ENFORCE_LOCATOR_ALIS_UNQ_FLAG");

            var fifoOrigRcptDateFlag = runtimeEntityType.AddProperty(
                "FifoOrigRcptDateFlag",
                typeof(string),
                propertyInfo: typeof(InvOrgParameter).GetProperty("FifoOrigRcptDateFlag", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(InvOrgParameter).GetField("<FifoOrigRcptDateFlag>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                nullable: true,
                maxLength: 50,
                unicode: false);
            fifoOrigRcptDateFlag.AddAnnotation("Oracle:ValueGenerationStrategy", OracleValueGenerationStrategy.None);
            fifoOrigRcptDateFlag.AddAnnotation("Relational:ColumnName", "FIFO_ORIG_RCPT_DATE_FLAG");

            var fillKillMoveOrderFlag = runtimeEntityType.AddProperty(
                "FillKillMoveOrderFlag",
                typeof(string),
                propertyInfo: typeof(InvOrgParameter).GetProperty("FillKillMoveOrderFlag", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(InvOrgParameter).GetField("<FillKillMoveOrderFlag>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                nullable: true,
                maxLength: 50,
                unicode: false);
            fillKillMoveOrderFlag.AddAnnotation("Oracle:ValueGenerationStrategy", OracleValueGenerationStrategy.None);
            fillKillMoveOrderFlag.AddAnnotation("Relational:ColumnName", "FILL_KILL_MOVE_ORDER_FLAG");

            var fillKillTransferOrdersFlag = runtimeEntityType.AddProperty(
                "FillKillTransferOrdersFlag",
                typeof(string),
                propertyInfo: typeof(InvOrgParameter).GetProperty("FillKillTransferOrdersFlag", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(InvOrgParameter).GetField("<FillKillTransferOrdersFlag>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                nullable: true,
                maxLength: 50,
                unicode: false);
            fillKillTransferOrdersFlag.AddAnnotation("Oracle:ValueGenerationStrategy", OracleValueGenerationStrategy.None);
            fillKillTransferOrdersFlag.AddAnnotation("Relational:ColumnName", "FILL_KILL_TRANSFER_ORDERS_FLAG");

            var globalAttribute1 = runtimeEntityType.AddProperty(
                "GlobalAttribute1",
                typeof(string),
                propertyInfo: typeof(InvOrgParameter).GetProperty("GlobalAttribute1", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(InvOrgParameter).GetField("<GlobalAttribute1>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                nullable: true,
                maxLength: 50,
                unicode: false);
            globalAttribute1.AddAnnotation("Oracle:ValueGenerationStrategy", OracleValueGenerationStrategy.None);
            globalAttribute1.AddAnnotation("Relational:ColumnName", "GLOBAL_ATTRIBUTE1");

            var globalAttribute10 = runtimeEntityType.AddProperty(
                "GlobalAttribute10",
                typeof(string),
                propertyInfo: typeof(InvOrgParameter).GetProperty("GlobalAttribute10", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(InvOrgParameter).GetField("<GlobalAttribute10>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                nullable: true,
                maxLength: 50,
                unicode: false);
            globalAttribute10.AddAnnotation("Oracle:ValueGenerationStrategy", OracleValueGenerationStrategy.None);
            globalAttribute10.AddAnnotation("Relational:ColumnName", "GLOBAL_ATTRIBUTE10");

            var globalAttribute11 = runtimeEntityType.AddProperty(
                "GlobalAttribute11",
                typeof(string),
                propertyInfo: typeof(InvOrgParameter).GetProperty("GlobalAttribute11", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(InvOrgParameter).GetField("<GlobalAttribute11>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                nullable: true,
                maxLength: 50,
                unicode: false);
            globalAttribute11.AddAnnotation("Oracle:ValueGenerationStrategy", OracleValueGenerationStrategy.None);
            globalAttribute11.AddAnnotation("Relational:ColumnName", "GLOBAL_ATTRIBUTE11");

            var globalAttribute12 = runtimeEntityType.AddProperty(
                "GlobalAttribute12",
                typeof(string),
                propertyInfo: typeof(InvOrgParameter).GetProperty("GlobalAttribute12", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(InvOrgParameter).GetField("<GlobalAttribute12>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                nullable: true,
                maxLength: 50,
                unicode: false);
            globalAttribute12.AddAnnotation("Oracle:ValueGenerationStrategy", OracleValueGenerationStrategy.None);
            globalAttribute12.AddAnnotation("Relational:ColumnName", "GLOBAL_ATTRIBUTE12");

            var globalAttribute13 = runtimeEntityType.AddProperty(
                "GlobalAttribute13",
                typeof(string),
                propertyInfo: typeof(InvOrgParameter).GetProperty("GlobalAttribute13", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(InvOrgParameter).GetField("<GlobalAttribute13>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                nullable: true,
                maxLength: 50,
                unicode: false);
            globalAttribute13.AddAnnotation("Oracle:ValueGenerationStrategy", OracleValueGenerationStrategy.None);
            globalAttribute13.AddAnnotation("Relational:ColumnName", "GLOBAL_ATTRIBUTE13");

            var globalAttribute14 = runtimeEntityType.AddProperty(
                "GlobalAttribute14",
                typeof(string),
                propertyInfo: typeof(InvOrgParameter).GetProperty("GlobalAttribute14", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(InvOrgParameter).GetField("<GlobalAttribute14>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                nullable: true,
                maxLength: 50,
                unicode: false);
            globalAttribute14.AddAnnotation("Oracle:ValueGenerationStrategy", OracleValueGenerationStrategy.None);
            globalAttribute14.AddAnnotation("Relational:ColumnName", "GLOBAL_ATTRIBUTE14");

            var globalAttribute15 = runtimeEntityType.AddProperty(
                "GlobalAttribute15",
                typeof(string),
                propertyInfo: typeof(InvOrgParameter).GetProperty("GlobalAttribute15", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(InvOrgParameter).GetField("<GlobalAttribute15>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                nullable: true,
                maxLength: 50,
                unicode: false);
            globalAttribute15.AddAnnotation("Oracle:ValueGenerationStrategy", OracleValueGenerationStrategy.None);
            globalAttribute15.AddAnnotation("Relational:ColumnName", "GLOBAL_ATTRIBUTE15");

            var globalAttribute16 = runtimeEntityType.AddProperty(
                "GlobalAttribute16",
                typeof(string),
                propertyInfo: typeof(InvOrgParameter).GetProperty("GlobalAttribute16", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(InvOrgParameter).GetField("<GlobalAttribute16>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                nullable: true,
                maxLength: 50,
                unicode: false);
            globalAttribute16.AddAnnotation("Oracle:ValueGenerationStrategy", OracleValueGenerationStrategy.None);
            globalAttribute16.AddAnnotation("Relational:ColumnName", "GLOBAL_ATTRIBUTE16");

            var globalAttribute17 = runtimeEntityType.AddProperty(
                "GlobalAttribute17",
                typeof(string),
                propertyInfo: typeof(InvOrgParameter).GetProperty("GlobalAttribute17", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(InvOrgParameter).GetField("<GlobalAttribute17>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                nullable: true,
                maxLength: 50,
                unicode: false);
            globalAttribute17.AddAnnotation("Oracle:ValueGenerationStrategy", OracleValueGenerationStrategy.None);
            globalAttribute17.AddAnnotation("Relational:ColumnName", "GLOBAL_ATTRIBUTE17");

            var globalAttribute18 = runtimeEntityType.AddProperty(
                "GlobalAttribute18",
                typeof(string),
                propertyInfo: typeof(InvOrgParameter).GetProperty("GlobalAttribute18", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(InvOrgParameter).GetField("<GlobalAttribute18>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                nullable: true,
                maxLength: 50,
                unicode: false);
            globalAttribute18.AddAnnotation("Oracle:ValueGenerationStrategy", OracleValueGenerationStrategy.None);
            globalAttribute18.AddAnnotation("Relational:ColumnName", "GLOBAL_ATTRIBUTE18");

            var globalAttribute19 = runtimeEntityType.AddProperty(
                "GlobalAttribute19",
                typeof(string),
                propertyInfo: typeof(InvOrgParameter).GetProperty("GlobalAttribute19", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(InvOrgParameter).GetField("<GlobalAttribute19>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                nullable: true,
                maxLength: 50,
                unicode: false);
            globalAttribute19.AddAnnotation("Oracle:ValueGenerationStrategy", OracleValueGenerationStrategy.None);
            globalAttribute19.AddAnnotation("Relational:ColumnName", "GLOBAL_ATTRIBUTE19");

            var globalAttribute2 = runtimeEntityType.AddProperty(
                "GlobalAttribute2",
                typeof(string),
                propertyInfo: typeof(InvOrgParameter).GetProperty("GlobalAttribute2", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(InvOrgParameter).GetField("<GlobalAttribute2>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                nullable: true,
                maxLength: 50,
                unicode: false);
            globalAttribute2.AddAnnotation("Oracle:ValueGenerationStrategy", OracleValueGenerationStrategy.None);
            globalAttribute2.AddAnnotation("Relational:ColumnName", "GLOBAL_ATTRIBUTE2");

            var globalAttribute20 = runtimeEntityType.AddProperty(
                "GlobalAttribute20",
                typeof(string),
                propertyInfo: typeof(InvOrgParameter).GetProperty("GlobalAttribute20", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(InvOrgParameter).GetField("<GlobalAttribute20>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                nullable: true,
                maxLength: 50,
                unicode: false);
            globalAttribute20.AddAnnotation("Oracle:ValueGenerationStrategy", OracleValueGenerationStrategy.None);
            globalAttribute20.AddAnnotation("Relational:ColumnName", "GLOBAL_ATTRIBUTE20");

            var globalAttribute3 = runtimeEntityType.AddProperty(
                "GlobalAttribute3",
                typeof(string),
                propertyInfo: typeof(InvOrgParameter).GetProperty("GlobalAttribute3", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(InvOrgParameter).GetField("<GlobalAttribute3>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                nullable: true,
                maxLength: 50,
                unicode: false);
            globalAttribute3.AddAnnotation("Oracle:ValueGenerationStrategy", OracleValueGenerationStrategy.None);
            globalAttribute3.AddAnnotation("Relational:ColumnName", "GLOBAL_ATTRIBUTE3");

            var globalAttribute4 = runtimeEntityType.AddProperty(
                "GlobalAttribute4",
                typeof(string),
                propertyInfo: typeof(InvOrgParameter).GetProperty("GlobalAttribute4", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(InvOrgParameter).GetField("<GlobalAttribute4>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                nullable: true,
                maxLength: 50,
                unicode: false);
            globalAttribute4.AddAnnotation("Oracle:ValueGenerationStrategy", OracleValueGenerationStrategy.None);
            globalAttribute4.AddAnnotation("Relational:ColumnName", "GLOBAL_ATTRIBUTE4");

            var globalAttribute5 = runtimeEntityType.AddProperty(
                "GlobalAttribute5",
                typeof(string),
                propertyInfo: typeof(InvOrgParameter).GetProperty("GlobalAttribute5", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(InvOrgParameter).GetField("<GlobalAttribute5>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                nullable: true,
                maxLength: 50,
                unicode: false);
            globalAttribute5.AddAnnotation("Oracle:ValueGenerationStrategy", OracleValueGenerationStrategy.None);
            globalAttribute5.AddAnnotation("Relational:ColumnName", "GLOBAL_ATTRIBUTE5");

            var globalAttribute6 = runtimeEntityType.AddProperty(
                "GlobalAttribute6",
                typeof(string),
                propertyInfo: typeof(InvOrgParameter).GetProperty("GlobalAttribute6", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(InvOrgParameter).GetField("<GlobalAttribute6>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                nullable: true,
                maxLength: 50,
                unicode: false);
            globalAttribute6.AddAnnotation("Oracle:ValueGenerationStrategy", OracleValueGenerationStrategy.None);
            globalAttribute6.AddAnnotation("Relational:ColumnName", "GLOBAL_ATTRIBUTE6");

            var globalAttribute7 = runtimeEntityType.AddProperty(
                "GlobalAttribute7",
                typeof(string),
                propertyInfo: typeof(InvOrgParameter).GetProperty("GlobalAttribute7", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(InvOrgParameter).GetField("<GlobalAttribute7>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                nullable: true,
                maxLength: 50,
                unicode: false);
            globalAttribute7.AddAnnotation("Oracle:ValueGenerationStrategy", OracleValueGenerationStrategy.None);
            globalAttribute7.AddAnnotation("Relational:ColumnName", "GLOBAL_ATTRIBUTE7");

            var globalAttribute8 = runtimeEntityType.AddProperty(
                "GlobalAttribute8",
                typeof(string),
                propertyInfo: typeof(InvOrgParameter).GetProperty("GlobalAttribute8", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(InvOrgParameter).GetField("<GlobalAttribute8>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                nullable: true,
                maxLength: 50,
                unicode: false);
            globalAttribute8.AddAnnotation("Oracle:ValueGenerationStrategy", OracleValueGenerationStrategy.None);
            globalAttribute8.AddAnnotation("Relational:ColumnName", "GLOBAL_ATTRIBUTE8");

            var globalAttribute9 = runtimeEntityType.AddProperty(
                "GlobalAttribute9",
                typeof(string),
                propertyInfo: typeof(InvOrgParameter).GetProperty("GlobalAttribute9", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(InvOrgParameter).GetField("<GlobalAttribute9>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                nullable: true,
                maxLength: 50,
                unicode: false);
            globalAttribute9.AddAnnotation("Oracle:ValueGenerationStrategy", OracleValueGenerationStrategy.None);
            globalAttribute9.AddAnnotation("Relational:ColumnName", "GLOBAL_ATTRIBUTE9");

            var globalAttributeCategory = runtimeEntityType.AddProperty(
                "GlobalAttributeCategory",
                typeof(string),
                propertyInfo: typeof(InvOrgParameter).GetProperty("GlobalAttributeCategory", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(InvOrgParameter).GetField("<GlobalAttributeCategory>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                nullable: true,
                maxLength: 50,
                unicode: false);
            globalAttributeCategory.AddAnnotation("Oracle:ValueGenerationStrategy", OracleValueGenerationStrategy.None);
            globalAttributeCategory.AddAnnotation("Relational:ColumnName", "GLOBAL_ATTRIBUTE_CATEGORY");

            var groupingJobId = runtimeEntityType.AddProperty(
                "GroupingJobId",
                typeof(decimal?),
                propertyInfo: typeof(InvOrgParameter).GetProperty("GroupingJobId", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(InvOrgParameter).GetField("<GroupingJobId>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                nullable: true);
            groupingJobId.AddAnnotation("Oracle:ValueGenerationStrategy", OracleValueGenerationStrategy.None);
            groupingJobId.AddAnnotation("Relational:ColumnName", "GROUPING_JOB_ID");
            groupingJobId.AddAnnotation("Relational:ColumnType", "NUMBER(38)");

            var groupingJobStatus = runtimeEntityType.AddProperty(
                "GroupingJobStatus",
                typeof(string),
                propertyInfo: typeof(InvOrgParameter).GetProperty("GroupingJobStatus", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(InvOrgParameter).GetField("<GroupingJobStatus>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                nullable: true,
                maxLength: 50,
                unicode: false);
            groupingJobStatus.AddAnnotation("Oracle:ValueGenerationStrategy", OracleValueGenerationStrategy.None);
            groupingJobStatus.AddAnnotation("Relational:ColumnName", "GROUPING_JOB_STATUS");

            var integratedSystemCode = runtimeEntityType.AddProperty(
                "IntegratedSystemCode",
                typeof(string),
                propertyInfo: typeof(InvOrgParameter).GetProperty("IntegratedSystemCode", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(InvOrgParameter).GetField("<IntegratedSystemCode>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                nullable: true,
                maxLength: 50,
                unicode: false);
            integratedSystemCode.AddAnnotation("Oracle:ValueGenerationStrategy", OracleValueGenerationStrategy.None);
            integratedSystemCode.AddAnnotation("Relational:ColumnName", "INTEGRATED_SYSTEM_CODE");

            var internalCustomerFlag = runtimeEntityType.AddProperty(
                "InternalCustomerFlag",
                typeof(string),
                propertyInfo: typeof(InvOrgParameter).GetProperty("InternalCustomerFlag", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(InvOrgParameter).GetField("<InternalCustomerFlag>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                nullable: true,
                maxLength: 50,
                unicode: false);
            internalCustomerFlag.AddAnnotation("Oracle:ValueGenerationStrategy", OracleValueGenerationStrategy.None);
            internalCustomerFlag.AddAnnotation("Relational:ColumnName", "INTERNAL_CUSTOMER_FLAG");

            var inventoryFlag = runtimeEntityType.AddProperty(
                "InventoryFlag",
                typeof(string),
                propertyInfo: typeof(InvOrgParameter).GetProperty("InventoryFlag", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(InvOrgParameter).GetField("<InventoryFlag>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                nullable: true,
                maxLength: 50,
                unicode: false);
            inventoryFlag.AddAnnotation("Oracle:ValueGenerationStrategy", OracleValueGenerationStrategy.None);
            inventoryFlag.AddAnnotation("Relational:ColumnName", "INVENTORY_FLAG");

            var itemDefinitionOrgId = runtimeEntityType.AddProperty(
                "ItemDefinitionOrgId",
                typeof(decimal?),
                propertyInfo: typeof(InvOrgParameter).GetProperty("ItemDefinitionOrgId", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(InvOrgParameter).GetField("<ItemDefinitionOrgId>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                nullable: true);
            itemDefinitionOrgId.AddAnnotation("Oracle:ValueGenerationStrategy", OracleValueGenerationStrategy.None);
            itemDefinitionOrgId.AddAnnotation("Relational:ColumnName", "ITEM_DEFINITION_ORG_ID");
            itemDefinitionOrgId.AddAnnotation("Relational:ColumnType", "NUMBER(38)");

            var itemGroupingCode = runtimeEntityType.AddProperty(
                "ItemGroupingCode",
                typeof(string),
                propertyInfo: typeof(InvOrgParameter).GetProperty("ItemGroupingCode", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(InvOrgParameter).GetField("<ItemGroupingCode>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                nullable: true,
                maxLength: 50,
                unicode: false);
            itemGroupingCode.AddAnnotation("Oracle:ValueGenerationStrategy", OracleValueGenerationStrategy.None);
            itemGroupingCode.AddAnnotation("Relational:ColumnName", "ITEM_GROUPING_CODE");

            var jobDefinitionName = runtimeEntityType.AddProperty(
                "JobDefinitionName",
                typeof(string),
                propertyInfo: typeof(InvOrgParameter).GetProperty("JobDefinitionName", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(InvOrgParameter).GetField("<JobDefinitionName>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                nullable: true,
                maxLength: 50,
                unicode: false);
            jobDefinitionName.AddAnnotation("Oracle:ValueGenerationStrategy", OracleValueGenerationStrategy.None);
            jobDefinitionName.AddAnnotation("Relational:ColumnName", "JOB_DEFINITION_NAME");

            var jobDefinitionPackage = runtimeEntityType.AddProperty(
                "JobDefinitionPackage",
                typeof(string),
                propertyInfo: typeof(InvOrgParameter).GetProperty("JobDefinitionPackage", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(InvOrgParameter).GetField("<JobDefinitionPackage>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                nullable: true,
                maxLength: 50,
                unicode: false);
            jobDefinitionPackage.AddAnnotation("Oracle:ValueGenerationStrategy", OracleValueGenerationStrategy.None);
            jobDefinitionPackage.AddAnnotation("Relational:ColumnName", "JOB_DEFINITION_PACKAGE");

            var lastUpdateDate = runtimeEntityType.AddProperty(
                "LastUpdateDate",
                typeof(DateTime?),
                propertyInfo: typeof(InvOrgParameter).GetProperty("LastUpdateDate", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(InvOrgParameter).GetField("<LastUpdateDate>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                nullable: true);
            lastUpdateDate.AddAnnotation("Oracle:ValueGenerationStrategy", OracleValueGenerationStrategy.None);
            lastUpdateDate.AddAnnotation("Relational:ColumnName", "LAST_UPDATE_DATE");
            lastUpdateDate.AddAnnotation("Relational:ColumnType", "DATE");

            var lastUpdateLogin = runtimeEntityType.AddProperty(
                "LastUpdateLogin",
                typeof(string),
                propertyInfo: typeof(InvOrgParameter).GetProperty("LastUpdateLogin", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(InvOrgParameter).GetField("<LastUpdateLogin>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                nullable: true,
                maxLength: 50,
                unicode: false);
            lastUpdateLogin.AddAnnotation("Oracle:ValueGenerationStrategy", OracleValueGenerationStrategy.None);
            lastUpdateLogin.AddAnnotation("Relational:ColumnName", "LAST_UPDATE_LOGIN");

            var lastUpdatedBy = runtimeEntityType.AddProperty(
                "LastUpdatedBy",
                typeof(string),
                propertyInfo: typeof(InvOrgParameter).GetProperty("LastUpdatedBy", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(InvOrgParameter).GetField("<LastUpdatedBy>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                nullable: true,
                maxLength: 50,
                unicode: false);
            lastUpdatedBy.AddAnnotation("Oracle:ValueGenerationStrategy", OracleValueGenerationStrategy.None);
            lastUpdatedBy.AddAnnotation("Relational:ColumnName", "LAST_UPDATED_BY");

            var legalEntityId = runtimeEntityType.AddProperty(
                "LegalEntityId",
                typeof(decimal?),
                propertyInfo: typeof(InvOrgParameter).GetProperty("LegalEntityId", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(InvOrgParameter).GetField("<LegalEntityId>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                nullable: true);
            legalEntityId.AddAnnotation("Oracle:ValueGenerationStrategy", OracleValueGenerationStrategy.None);
            legalEntityId.AddAnnotation("Relational:ColumnName", "LEGAL_ENTITY_ID");
            legalEntityId.AddAnnotation("Relational:ColumnType", "NUMBER(38)");

            var lotNumberLength = runtimeEntityType.AddProperty(
                "LotNumberLength",
                typeof(string),
                propertyInfo: typeof(InvOrgParameter).GetProperty("LotNumberLength", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(InvOrgParameter).GetField("<LotNumberLength>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                nullable: true,
                maxLength: 50,
                unicode: false);
            lotNumberLength.AddAnnotation("Oracle:ValueGenerationStrategy", OracleValueGenerationStrategy.None);
            lotNumberLength.AddAnnotation("Relational:ColumnName", "LOT_NUMBER_LENGTH");

            var lotNumberUniqueness = runtimeEntityType.AddProperty(
                "LotNumberUniqueness",
                typeof(string),
                propertyInfo: typeof(InvOrgParameter).GetProperty("LotNumberUniqueness", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(InvOrgParameter).GetField("<LotNumberUniqueness>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                nullable: true,
                maxLength: 50,
                unicode: false);
            lotNumberUniqueness.AddAnnotation("Oracle:ValueGenerationStrategy", OracleValueGenerationStrategy.None);
            lotNumberUniqueness.AddAnnotation("Relational:ColumnName", "LOT_NUMBER_UNIQUENESS");

            var lotNumberZeroPadding = runtimeEntityType.AddProperty(
                "LotNumberZeroPadding",
                typeof(string),
                propertyInfo: typeof(InvOrgParameter).GetProperty("LotNumberZeroPadding", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(InvOrgParameter).GetField("<LotNumberZeroPadding>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                nullable: true,
                maxLength: 50,
                unicode: false);
            lotNumberZeroPadding.AddAnnotation("Oracle:ValueGenerationStrategy", OracleValueGenerationStrategy.None);
            lotNumberZeroPadding.AddAnnotation("Relational:ColumnName", "LOT_NUMBER_ZERO_PADDING");

            var lpnPrefix = runtimeEntityType.AddProperty(
                "LpnPrefix",
                typeof(string),
                propertyInfo: typeof(InvOrgParameter).GetProperty("LpnPrefix", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(InvOrgParameter).GetField("<LpnPrefix>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                nullable: true,
                maxLength: 50,
                unicode: false);
            lpnPrefix.AddAnnotation("Oracle:ValueGenerationStrategy", OracleValueGenerationStrategy.None);
            lpnPrefix.AddAnnotation("Relational:ColumnName", "LPN_PREFIX");

            var lpnStartingNumber = runtimeEntityType.AddProperty(
                "LpnStartingNumber",
                typeof(string),
                propertyInfo: typeof(InvOrgParameter).GetProperty("LpnStartingNumber", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(InvOrgParameter).GetField("<LpnStartingNumber>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                nullable: true,
                maxLength: 50,
                unicode: false);
            lpnStartingNumber.AddAnnotation("Oracle:ValueGenerationStrategy", OracleValueGenerationStrategy.None);
            lpnStartingNumber.AddAnnotation("Relational:ColumnName", "LPN_STARTING_NUMBER");

            var lpnSuffix = runtimeEntityType.AddProperty(
                "LpnSuffix",
                typeof(string),
                propertyInfo: typeof(InvOrgParameter).GetProperty("LpnSuffix", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(InvOrgParameter).GetField("<LpnSuffix>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                nullable: true,
                maxLength: 50,
                unicode: false);
            lpnSuffix.AddAnnotation("Oracle:ValueGenerationStrategy", OracleValueGenerationStrategy.None);
            lpnSuffix.AddAnnotation("Relational:ColumnName", "LPN_SUFFIX");

            var maintOrganizationId = runtimeEntityType.AddProperty(
                "MaintOrganizationId",
                typeof(decimal?),
                propertyInfo: typeof(InvOrgParameter).GetProperty("MaintOrganizationId", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(InvOrgParameter).GetField("<MaintOrganizationId>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                nullable: true);
            maintOrganizationId.AddAnnotation("Oracle:ValueGenerationStrategy", OracleValueGenerationStrategy.None);
            maintOrganizationId.AddAnnotation("Relational:ColumnName", "MAINT_ORGANIZATION_ID");
            maintOrganizationId.AddAnnotation("Relational:ColumnType", "NUMBER(38)");

            var manualReceiptExpAtDest = runtimeEntityType.AddProperty(
                "ManualReceiptExpAtDest",
                typeof(string),
                propertyInfo: typeof(InvOrgParameter).GetProperty("ManualReceiptExpAtDest", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(InvOrgParameter).GetField("<ManualReceiptExpAtDest>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                nullable: true,
                maxLength: 50,
                unicode: false);
            manualReceiptExpAtDest.AddAnnotation("Oracle:ValueGenerationStrategy", OracleValueGenerationStrategy.None);
            manualReceiptExpAtDest.AddAnnotation("Relational:ColumnName", "MANUAL_RECEIPT_EXP_AT_DEST");

            var masterOrganizationId = runtimeEntityType.AddProperty(
                "MasterOrganizationId",
                typeof(decimal?),
                propertyInfo: typeof(InvOrgParameter).GetProperty("MasterOrganizationId", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(InvOrgParameter).GetField("<MasterOrganizationId>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                nullable: true);
            masterOrganizationId.AddAnnotation("Oracle:ValueGenerationStrategy", OracleValueGenerationStrategy.None);
            masterOrganizationId.AddAnnotation("Relational:ColumnName", "MASTER_ORGANIZATION_ID");
            masterOrganizationId.AddAnnotation("Relational:ColumnType", "NUMBER(38)");

            var mfgPlantFlag = runtimeEntityType.AddProperty(
                "MfgPlantFlag",
                typeof(string),
                propertyInfo: typeof(InvOrgParameter).GetProperty("MfgPlantFlag", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(InvOrgParameter).GetField("<MfgPlantFlag>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                nullable: true,
                maxLength: 50,
                unicode: false);
            mfgPlantFlag.AddAnnotation("Oracle:ValueGenerationStrategy", OracleValueGenerationStrategy.None);
            mfgPlantFlag.AddAnnotation("Relational:ColumnName", "MFG_PLANT_FLAG");

            var moPickConfirmRequired = runtimeEntityType.AddProperty(
                "MoPickConfirmRequired",
                typeof(string),
                propertyInfo: typeof(InvOrgParameter).GetProperty("MoPickConfirmRequired", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(InvOrgParameter).GetField("<MoPickConfirmRequired>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                nullable: true,
                maxLength: 50,
                unicode: false);
            moPickConfirmRequired.AddAnnotation("Oracle:ValueGenerationStrategy", OracleValueGenerationStrategy.None);
            moPickConfirmRequired.AddAnnotation("Relational:ColumnName", "MO_PICK_CONFIRM_REQUIRED");

            var negativeInvReceiptCode = runtimeEntityType.AddProperty(
                "NegativeInvReceiptCode",
                typeof(string),
                propertyInfo: typeof(InvOrgParameter).GetProperty("NegativeInvReceiptCode", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(InvOrgParameter).GetField("<NegativeInvReceiptCode>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                nullable: true,
                maxLength: 50,
                unicode: false);
            negativeInvReceiptCode.AddAnnotation("Oracle:ValueGenerationStrategy", OracleValueGenerationStrategy.None);
            negativeInvReceiptCode.AddAnnotation("Relational:ColumnName", "NEGATIVE_INV_RECEIPT_CODE");

            var objectVersionNumber = runtimeEntityType.AddProperty(
                "ObjectVersionNumber",
                typeof(decimal?),
                propertyInfo: typeof(InvOrgParameter).GetProperty("ObjectVersionNumber", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(InvOrgParameter).GetField("<ObjectVersionNumber>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                nullable: true);
            objectVersionNumber.AddAnnotation("Oracle:ValueGenerationStrategy", OracleValueGenerationStrategy.None);
            objectVersionNumber.AddAnnotation("Relational:ColumnName", "OBJECT_VERSION_NUMBER");
            objectVersionNumber.AddAnnotation("Relational:ColumnType", "NUMBER(38)");

            var organizationCode = runtimeEntityType.AddProperty(
                "OrganizationCode",
                typeof(string),
                propertyInfo: typeof(InvOrgParameter).GetProperty("OrganizationCode", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(InvOrgParameter).GetField("<OrganizationCode>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                nullable: true,
                maxLength: 50,
                unicode: false);
            organizationCode.AddAnnotation("Oracle:ValueGenerationStrategy", OracleValueGenerationStrategy.None);
            organizationCode.AddAnnotation("Relational:ColumnName", "ORGANIZATION_CODE");

            var organizationId = runtimeEntityType.AddProperty(
                "OrganizationId",
                typeof(decimal?),
                propertyInfo: typeof(InvOrgParameter).GetProperty("OrganizationId", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(InvOrgParameter).GetField("<OrganizationId>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                nullable: true);
            organizationId.AddAnnotation("Oracle:ValueGenerationStrategy", OracleValueGenerationStrategy.None);
            organizationId.AddAnnotation("Relational:ColumnName", "ORGANIZATION_ID");
            organizationId.AddAnnotation("Relational:ColumnType", "NUMBER(38)");

            var ovpkTransferOrdersEnabled = runtimeEntityType.AddProperty(
                "OvpkTransferOrdersEnabled",
                typeof(string),
                propertyInfo: typeof(InvOrgParameter).GetProperty("OvpkTransferOrdersEnabled", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(InvOrgParameter).GetField("<OvpkTransferOrdersEnabled>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                nullable: true,
                maxLength: 50,
                unicode: false);
            ovpkTransferOrdersEnabled.AddAnnotation("Oracle:ValueGenerationStrategy", OracleValueGenerationStrategy.None);
            ovpkTransferOrdersEnabled.AddAnnotation("Relational:ColumnName", "OVPK_TRANSFER_ORDERS_ENABLED");

            var parentChildGenerationFlag = runtimeEntityType.AddProperty(
                "ParentChildGenerationFlag",
                typeof(string),
                propertyInfo: typeof(InvOrgParameter).GetProperty("ParentChildGenerationFlag", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(InvOrgParameter).GetField("<ParentChildGenerationFlag>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                nullable: true,
                maxLength: 50,
                unicode: false);
            parentChildGenerationFlag.AddAnnotation("Oracle:ValueGenerationStrategy", OracleValueGenerationStrategy.None);
            parentChildGenerationFlag.AddAnnotation("Relational:ColumnName", "PARENT_CHILD_GENERATION_FLAG");

            var partyId = runtimeEntityType.AddProperty(
                "PartyId",
                typeof(decimal?),
                propertyInfo: typeof(InvOrgParameter).GetProperty("PartyId", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(InvOrgParameter).GetField("<PartyId>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                nullable: true);
            partyId.AddAnnotation("Oracle:ValueGenerationStrategy", OracleValueGenerationStrategy.None);
            partyId.AddAnnotation("Relational:ColumnName", "PARTY_ID");
            partyId.AddAnnotation("Relational:ColumnType", "NUMBER(38)");

            var pickQtyDefaultReasonId = runtimeEntityType.AddProperty(
                "PickQtyDefaultReasonId",
                typeof(decimal?),
                propertyInfo: typeof(InvOrgParameter).GetProperty("PickQtyDefaultReasonId", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(InvOrgParameter).GetField("<PickQtyDefaultReasonId>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                nullable: true);
            pickQtyDefaultReasonId.AddAnnotation("Oracle:ValueGenerationStrategy", OracleValueGenerationStrategy.None);
            pickQtyDefaultReasonId.AddAnnotation("Relational:ColumnName", "PICK_QTY_DEFAULT_REASON_ID");
            pickQtyDefaultReasonId.AddAnnotation("Relational:ColumnType", "NUMBER(38)");

            var pickSlipBatchSize = runtimeEntityType.AddProperty(
                "PickSlipBatchSize",
                typeof(string),
                propertyInfo: typeof(InvOrgParameter).GetProperty("PickSlipBatchSize", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(InvOrgParameter).GetField("<PickSlipBatchSize>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                nullable: true,
                maxLength: 50,
                unicode: false);
            pickSlipBatchSize.AddAnnotation("Oracle:ValueGenerationStrategy", OracleValueGenerationStrategy.None);
            pickSlipBatchSize.AddAnnotation("Relational:ColumnName", "PICK_SLIP_BATCH_SIZE");

            var pmCostCollectionEnabled = runtimeEntityType.AddProperty(
                "PmCostCollectionEnabled",
                typeof(string),
                propertyInfo: typeof(InvOrgParameter).GetProperty("PmCostCollectionEnabled", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(InvOrgParameter).GetField("<PmCostCollectionEnabled>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                nullable: true,
                maxLength: 50,
                unicode: false);
            pmCostCollectionEnabled.AddAnnotation("Oracle:ValueGenerationStrategy", OracleValueGenerationStrategy.None);
            pmCostCollectionEnabled.AddAnnotation("Relational:ColumnName", "PM_COST_COLLECTION_ENABLED");

            var preFillPickedQty = runtimeEntityType.AddProperty(
                "PreFillPickedQty",
                typeof(string),
                propertyInfo: typeof(InvOrgParameter).GetProperty("PreFillPickedQty", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(InvOrgParameter).GetField("<PreFillPickedQty>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                nullable: true,
                maxLength: 50,
                unicode: false);
            preFillPickedQty.AddAnnotation("Oracle:ValueGenerationStrategy", OracleValueGenerationStrategy.None);
            preFillPickedQty.AddAnnotation("Relational:ColumnName", "PRE_FILL_PICKED_QTY");

            var pregenPutawayTasksFlag = runtimeEntityType.AddProperty(
                "PregenPutawayTasksFlag",
                typeof(string),
                propertyInfo: typeof(InvOrgParameter).GetProperty("PregenPutawayTasksFlag", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(InvOrgParameter).GetField("<PregenPutawayTasksFlag>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                nullable: true,
                maxLength: 50,
                unicode: false);
            pregenPutawayTasksFlag.AddAnnotation("Oracle:ValueGenerationStrategy", OracleValueGenerationStrategy.None);
            pregenPutawayTasksFlag.AddAnnotation("Relational:ColumnName", "PREGEN_PUTAWAY_TASKS_FLAG");

            var profitCenterBuId = runtimeEntityType.AddProperty(
                "ProfitCenterBuId",
                typeof(decimal?),
                propertyInfo: typeof(InvOrgParameter).GetProperty("ProfitCenterBuId", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(InvOrgParameter).GetField("<ProfitCenterBuId>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                nullable: true);
            profitCenterBuId.AddAnnotation("Oracle:ValueGenerationStrategy", OracleValueGenerationStrategy.None);
            profitCenterBuId.AddAnnotation("Relational:ColumnName", "PROFIT_CENTER_BU_ID");
            profitCenterBuId.AddAnnotation("Relational:ColumnType", "NUMBER(38)");

            var projectControlLevel = runtimeEntityType.AddProperty(
                "ProjectControlLevel",
                typeof(string),
                propertyInfo: typeof(InvOrgParameter).GetProperty("ProjectControlLevel", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(InvOrgParameter).GetField("<ProjectControlLevel>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                nullable: true,
                maxLength: 50,
                unicode: false);
            projectControlLevel.AddAnnotation("Oracle:ValueGenerationStrategy", OracleValueGenerationStrategy.None);
            projectControlLevel.AddAnnotation("Relational:ColumnName", "PROJECT_CONTROL_LEVEL");

            var projectReferenceEnabled = runtimeEntityType.AddProperty(
                "ProjectReferenceEnabled",
                typeof(string),
                propertyInfo: typeof(InvOrgParameter).GetProperty("ProjectReferenceEnabled", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(InvOrgParameter).GetField("<ProjectReferenceEnabled>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                nullable: true,
                maxLength: 50,
                unicode: false);
            projectReferenceEnabled.AddAnnotation("Oracle:ValueGenerationStrategy", OracleValueGenerationStrategy.None);
            projectReferenceEnabled.AddAnnotation("Relational:ColumnName", "PROJECT_REFERENCE_ENABLED");

            var purchasingByRevision = runtimeEntityType.AddProperty(
                "PurchasingByRevision",
                typeof(string),
                propertyInfo: typeof(InvOrgParameter).GetProperty("PurchasingByRevision", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(InvOrgParameter).GetField("<PurchasingByRevision>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                nullable: true,
                maxLength: 50,
                unicode: false);
            purchasingByRevision.AddAnnotation("Oracle:ValueGenerationStrategy", OracleValueGenerationStrategy.None);
            purchasingByRevision.AddAnnotation("Relational:ColumnName", "PURCHASING_BY_REVISION");

            var qaSkippingInspFlag = runtimeEntityType.AddProperty(
                "QaSkippingInspFlag",
                typeof(string),
                propertyInfo: typeof(InvOrgParameter).GetProperty("QaSkippingInspFlag", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(InvOrgParameter).GetField("<QaSkippingInspFlag>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                nullable: true,
                maxLength: 50,
                unicode: false);
            qaSkippingInspFlag.AddAnnotation("Oracle:ValueGenerationStrategy", OracleValueGenerationStrategy.None);
            qaSkippingInspFlag.AddAnnotation("Relational:ColumnName", "QA_SKIPPING_INSP_FLAG");

            var regenerationInterval = runtimeEntityType.AddProperty(
                "RegenerationInterval",
                typeof(string),
                propertyInfo: typeof(InvOrgParameter).GetProperty("RegenerationInterval", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(InvOrgParameter).GetField("<RegenerationInterval>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                nullable: true,
                maxLength: 50,
                unicode: false);
            regenerationInterval.AddAnnotation("Oracle:ValueGenerationStrategy", OracleValueGenerationStrategy.None);
            regenerationInterval.AddAnnotation("Relational:ColumnName", "REGENERATION_INTERVAL");

            var replnshMoveOrderGrouping = runtimeEntityType.AddProperty(
                "ReplnshMoveOrderGrouping",
                typeof(string),
                propertyInfo: typeof(InvOrgParameter).GetProperty("ReplnshMoveOrderGrouping", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(InvOrgParameter).GetField("<ReplnshMoveOrderGrouping>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                nullable: true,
                maxLength: 50,
                unicode: false);
            replnshMoveOrderGrouping.AddAnnotation("Oracle:ValueGenerationStrategy", OracleValueGenerationStrategy.None);
            replnshMoveOrderGrouping.AddAnnotation("Relational:ColumnName", "REPLNSH_MOVE_ORDER_GROUPING");

            var requestId = runtimeEntityType.AddProperty(
                "RequestId",
                typeof(decimal?),
                propertyInfo: typeof(InvOrgParameter).GetProperty("RequestId", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(InvOrgParameter).GetField("<RequestId>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                nullable: true);
            requestId.AddAnnotation("Oracle:ValueGenerationStrategy", OracleValueGenerationStrategy.None);
            requestId.AddAnnotation("Relational:ColumnName", "REQUEST_ID");
            requestId.AddAnnotation("Relational:ColumnType", "NUMBER(38)");

            var roundReorderQtyFlag = runtimeEntityType.AddProperty(
                "RoundReorderQtyFlag",
                typeof(string),
                propertyInfo: typeof(InvOrgParameter).GetProperty("RoundReorderQtyFlag", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(InvOrgParameter).GetField("<RoundReorderQtyFlag>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                nullable: true,
                maxLength: 50,
                unicode: false);
            roundReorderQtyFlag.AddAnnotation("Oracle:ValueGenerationStrategy", OracleValueGenerationStrategy.None);
            roundReorderQtyFlag.AddAnnotation("Relational:ColumnName", "ROUND_REORDER_QTY_FLAG");

            var scheduleId = runtimeEntityType.AddProperty(
                "ScheduleId",
                typeof(decimal?),
                propertyInfo: typeof(InvOrgParameter).GetProperty("ScheduleId", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(InvOrgParameter).GetField("<ScheduleId>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                nullable: true);
            scheduleId.AddAnnotation("Oracle:ValueGenerationStrategy", OracleValueGenerationStrategy.None);
            scheduleId.AddAnnotation("Relational:ColumnName", "SCHEDULE_ID");
            scheduleId.AddAnnotation("Relational:ColumnType", "NUMBER(38)");

            var serialNumberGeneration = runtimeEntityType.AddProperty(
                "SerialNumberGeneration",
                typeof(string),
                propertyInfo: typeof(InvOrgParameter).GetProperty("SerialNumberGeneration", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(InvOrgParameter).GetField("<SerialNumberGeneration>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                nullable: true,
                maxLength: 50,
                unicode: false);
            serialNumberGeneration.AddAnnotation("Oracle:ValueGenerationStrategy", OracleValueGenerationStrategy.None);
            serialNumberGeneration.AddAnnotation("Relational:ColumnName", "SERIAL_NUMBER_GENERATION");

            var serialNumberType = runtimeEntityType.AddProperty(
                "SerialNumberType",
                typeof(string),
                propertyInfo: typeof(InvOrgParameter).GetProperty("SerialNumberType", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(InvOrgParameter).GetField("<SerialNumberType>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                nullable: true,
                maxLength: 50,
                unicode: false);
            serialNumberType.AddAnnotation("Oracle:ValueGenerationStrategy", OracleValueGenerationStrategy.None);
            serialNumberType.AddAnnotation("Relational:ColumnName", "SERIAL_NUMBER_TYPE");

            var sourceOrganizationId = runtimeEntityType.AddProperty(
                "SourceOrganizationId",
                typeof(decimal?),
                propertyInfo: typeof(InvOrgParameter).GetProperty("SourceOrganizationId", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(InvOrgParameter).GetField("<SourceOrganizationId>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                nullable: true);
            sourceOrganizationId.AddAnnotation("Oracle:ValueGenerationStrategy", OracleValueGenerationStrategy.None);
            sourceOrganizationId.AddAnnotation("Relational:ColumnName", "SOURCE_ORGANIZATION_ID");
            sourceOrganizationId.AddAnnotation("Relational:ColumnType", "NUMBER(38)");

            var sourceSubinventory = runtimeEntityType.AddProperty(
                "SourceSubinventory",
                typeof(string),
                propertyInfo: typeof(InvOrgParameter).GetProperty("SourceSubinventory", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(InvOrgParameter).GetField("<SourceSubinventory>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                nullable: true,
                maxLength: 50,
                unicode: false);
            sourceSubinventory.AddAnnotation("Oracle:ValueGenerationStrategy", OracleValueGenerationStrategy.None);
            sourceSubinventory.AddAnnotation("Relational:ColumnName", "SOURCE_SUBINVENTORY");

            var sourceType = runtimeEntityType.AddProperty(
                "SourceType",
                typeof(string),
                propertyInfo: typeof(InvOrgParameter).GetProperty("SourceType", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(InvOrgParameter).GetField("<SourceType>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                nullable: true,
                maxLength: 50,
                unicode: false);
            sourceType.AddAnnotation("Oracle:ValueGenerationStrategy", OracleValueGenerationStrategy.None);
            sourceType.AddAnnotation("Relational:ColumnName", "SOURCE_TYPE");

            var standardPackEnabled = runtimeEntityType.AddProperty(
                "StandardPackEnabled",
                typeof(string),
                propertyInfo: typeof(InvOrgParameter).GetProperty("StandardPackEnabled", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(InvOrgParameter).GetField("<StandardPackEnabled>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                nullable: true,
                maxLength: 50,
                unicode: false);
            standardPackEnabled.AddAnnotation("Oracle:ValueGenerationStrategy", OracleValueGenerationStrategy.None);
            standardPackEnabled.AddAnnotation("Relational:ColumnName", "STANDARD_PACK_ENABLED");

            var startAutoSerialNumber = runtimeEntityType.AddProperty(
                "StartAutoSerialNumber",
                typeof(string),
                propertyInfo: typeof(InvOrgParameter).GetProperty("StartAutoSerialNumber", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(InvOrgParameter).GetField("<StartAutoSerialNumber>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                nullable: true,
                maxLength: 50,
                unicode: false);
            startAutoSerialNumber.AddAnnotation("Oracle:ValueGenerationStrategy", OracleValueGenerationStrategy.None);
            startAutoSerialNumber.AddAnnotation("Relational:ColumnName", "START_AUTO_SERIAL_NUMBER");

            var startingRevision = runtimeEntityType.AddProperty(
                "StartingRevision",
                typeof(string),
                propertyInfo: typeof(InvOrgParameter).GetProperty("StartingRevision", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(InvOrgParameter).GetField("<StartingRevision>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                nullable: true,
                maxLength: 50,
                unicode: false);
            startingRevision.AddAnnotation("Oracle:ValueGenerationStrategy", OracleValueGenerationStrategy.None);
            startingRevision.AddAnnotation("Relational:ColumnName", "STARTING_REVISION");

            var stockLocatorControlCode = runtimeEntityType.AddProperty(
                "StockLocatorControlCode",
                typeof(string),
                propertyInfo: typeof(InvOrgParameter).GetProperty("StockLocatorControlCode", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(InvOrgParameter).GetField("<StockLocatorControlCode>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                nullable: true,
                maxLength: 50,
                unicode: false);
            stockLocatorControlCode.AddAnnotation("Oracle:ValueGenerationStrategy", OracleValueGenerationStrategy.None);
            stockLocatorControlCode.AddAnnotation("Relational:ColumnName", "STOCK_LOCATOR_CONTROL_CODE");

            var supplierId = runtimeEntityType.AddProperty(
                "SupplierId",
                typeof(decimal?),
                propertyInfo: typeof(InvOrgParameter).GetProperty("SupplierId", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(InvOrgParameter).GetField("<SupplierId>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                nullable: true);
            supplierId.AddAnnotation("Oracle:ValueGenerationStrategy", OracleValueGenerationStrategy.None);
            supplierId.AddAnnotation("Relational:ColumnName", "SUPPLIER_ID");
            supplierId.AddAnnotation("Relational:ColumnType", "NUMBER(38)");

            var supplierSiteId = runtimeEntityType.AddProperty(
                "SupplierSiteId",
                typeof(decimal?),
                propertyInfo: typeof(InvOrgParameter).GetProperty("SupplierSiteId", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(InvOrgParameter).GetField("<SupplierSiteId>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                nullable: true);
            supplierSiteId.AddAnnotation("Oracle:ValueGenerationStrategy", OracleValueGenerationStrategy.None);
            supplierSiteId.AddAnnotation("Relational:ColumnName", "SUPPLIER_SITE_ID");
            supplierSiteId.AddAnnotation("Relational:ColumnType", "NUMBER(38)");

            var timezoneCode = runtimeEntityType.AddProperty(
                "TimezoneCode",
                typeof(string),
                propertyInfo: typeof(InvOrgParameter).GetProperty("TimezoneCode", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(InvOrgParameter).GetField("<TimezoneCode>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                nullable: true,
                maxLength: 50,
                unicode: false);
            timezoneCode.AddAnnotation("Oracle:ValueGenerationStrategy", OracleValueGenerationStrategy.None);
            timezoneCode.AddAnnotation("Relational:ColumnName", "TIMEZONE_CODE");

            var timezoneId = runtimeEntityType.AddProperty(
                "TimezoneId",
                typeof(decimal?),
                propertyInfo: typeof(InvOrgParameter).GetProperty("TimezoneId", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(InvOrgParameter).GetField("<TimezoneId>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                nullable: true);
            timezoneId.AddAnnotation("Oracle:ValueGenerationStrategy", OracleValueGenerationStrategy.None);
            timezoneId.AddAnnotation("Relational:ColumnName", "TIMEZONE_ID");
            timezoneId.AddAnnotation("Relational:ColumnType", "NUMBER(38)");

            var totalLpnLength = runtimeEntityType.AddProperty(
                "TotalLpnLength",
                typeof(string),
                propertyInfo: typeof(InvOrgParameter).GetProperty("TotalLpnLength", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(InvOrgParameter).GetField("<TotalLpnLength>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                nullable: true,
                maxLength: 50,
                unicode: false);
            totalLpnLength.AddAnnotation("Oracle:ValueGenerationStrategy", OracleValueGenerationStrategy.None);
            totalLpnLength.AddAnnotation("Relational:ColumnName", "TOTAL_LPN_LENGTH");

            var trackCountryOfOriginFlag = runtimeEntityType.AddProperty(
                "TrackCountryOfOriginFlag",
                typeof(string),
                propertyInfo: typeof(InvOrgParameter).GetProperty("TrackCountryOfOriginFlag", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(InvOrgParameter).GetField("<TrackCountryOfOriginFlag>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                nullable: true,
                maxLength: 50,
                unicode: false);
            trackCountryOfOriginFlag.AddAnnotation("Oracle:ValueGenerationStrategy", OracleValueGenerationStrategy.None);
            trackCountryOfOriginFlag.AddAnnotation("Relational:ColumnName", "TRACK_COUNTRY_OF_ORIGIN_FLAG");

            var tradingPartnerOrgFlag = runtimeEntityType.AddProperty(
                "TradingPartnerOrgFlag",
                typeof(string),
                propertyInfo: typeof(InvOrgParameter).GetProperty("TradingPartnerOrgFlag", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(InvOrgParameter).GetField("<TradingPartnerOrgFlag>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                nullable: true,
                maxLength: 50,
                unicode: false);
            tradingPartnerOrgFlag.AddAnnotation("Oracle:ValueGenerationStrategy", OracleValueGenerationStrategy.None);
            tradingPartnerOrgFlag.AddAnnotation("Relational:ColumnName", "TRADING_PARTNER_ORG_FLAG");

            var ucc128SuffixFlag = runtimeEntityType.AddProperty(
                "Ucc128SuffixFlag",
                typeof(string),
                propertyInfo: typeof(InvOrgParameter).GetProperty("Ucc128SuffixFlag", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(InvOrgParameter).GetField("<Ucc128SuffixFlag>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                nullable: true,
                maxLength: 50,
                unicode: false);
            ucc128SuffixFlag.AddAnnotation("Oracle:ValueGenerationStrategy", OracleValueGenerationStrategy.None);
            ucc128SuffixFlag.AddAnnotation("Relational:ColumnName", "UCC_128_SUFFIX_FLAG");

            var useCurItemCostFlag = runtimeEntityType.AddProperty(
                "UseCurItemCostFlag",
                typeof(string),
                propertyInfo: typeof(InvOrgParameter).GetProperty("UseCurItemCostFlag", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(InvOrgParameter).GetField("<UseCurItemCostFlag>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                nullable: true,
                maxLength: 50,
                unicode: false);
            useCurItemCostFlag.AddAnnotation("Oracle:ValueGenerationStrategy", OracleValueGenerationStrategy.None);
            useCurItemCostFlag.AddAnnotation("Relational:ColumnName", "USE_CUR_ITEM_COST_FLAG");

            var wcsEnabled = runtimeEntityType.AddProperty(
                "WcsEnabled",
                typeof(string),
                propertyInfo: typeof(InvOrgParameter).GetProperty("WcsEnabled", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(InvOrgParameter).GetField("<WcsEnabled>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                nullable: true,
                maxLength: 50,
                unicode: false);
            wcsEnabled.AddAnnotation("Oracle:ValueGenerationStrategy", OracleValueGenerationStrategy.None);
            wcsEnabled.AddAnnotation("Relational:ColumnName", "WCS_ENABLED");

            var wmsEnabledFlag = runtimeEntityType.AddProperty(
                "WmsEnabledFlag",
                typeof(string),
                propertyInfo: typeof(InvOrgParameter).GetProperty("WmsEnabledFlag", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(InvOrgParameter).GetField("<WmsEnabledFlag>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                nullable: true,
                maxLength: 50,
                unicode: false);
            wmsEnabledFlag.AddAnnotation("Oracle:ValueGenerationStrategy", OracleValueGenerationStrategy.None);
            wmsEnabledFlag.AddAnnotation("Relational:ColumnName", "WMS_ENABLED_FLAG");

            return runtimeEntityType;
        }

        public static void CreateAnnotations(RuntimeEntityType runtimeEntityType)
        {
            runtimeEntityType.AddAnnotation("Relational:FunctionName", null);
            runtimeEntityType.AddAnnotation("Relational:Schema", "FUSION");
            runtimeEntityType.AddAnnotation("Relational:SqlQuery", null);
            runtimeEntityType.AddAnnotation("Relational:TableName", "INV_ORG_PARAMETERS");
            runtimeEntityType.AddAnnotation("Relational:ViewName", null);
            runtimeEntityType.AddAnnotation("Relational:ViewSchema", null);

            Customize(runtimeEntityType);
        }

        static partial void Customize(RuntimeEntityType runtimeEntityType);
    }
}
