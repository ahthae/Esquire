// <auto-generated />
using System;
using System.Reflection;
using Microsoft.EntityFrameworkCore.Metadata;
using Oracle.EntityFrameworkCore.Metadata;
using esquire.Models.Fusion;

#pragma warning disable 219, 612, 618
#nullable enable

namespace esquire.Models.Compiled
{
    internal partial class PerJobsFEntityType
    {
        public static RuntimeEntityType Create(RuntimeModel model, RuntimeEntityType? baseEntityType = null)
        {
            var runtimeEntityType = model.AddEntityType(
                "esquire.Models.Fusion.PerJobsF",
                typeof(PerJobsF),
                baseEntityType);

            var actionOccurrenceId = runtimeEntityType.AddProperty(
                "ActionOccurrenceId",
                typeof(decimal?),
                propertyInfo: typeof(PerJobsF).GetProperty("ActionOccurrenceId", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(PerJobsF).GetField("<ActionOccurrenceId>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                nullable: true);
            actionOccurrenceId.AddAnnotation("Oracle:ValueGenerationStrategy", OracleValueGenerationStrategy.None);
            actionOccurrenceId.AddAnnotation("Relational:ColumnName", "ACTION_OCCURRENCE_ID");
            actionOccurrenceId.AddAnnotation("Relational:ColumnType", "NUMBER(38)");

            var activeStatus = runtimeEntityType.AddProperty(
                "ActiveStatus",
                typeof(string),
                propertyInfo: typeof(PerJobsF).GetProperty("ActiveStatus", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(PerJobsF).GetField("<ActiveStatus>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                nullable: true,
                maxLength: 50,
                unicode: false);
            activeStatus.AddAnnotation("Oracle:ValueGenerationStrategy", OracleValueGenerationStrategy.None);
            activeStatus.AddAnnotation("Relational:ColumnName", "ACTIVE_STATUS");

            var approvalAuthority = runtimeEntityType.AddProperty(
                "ApprovalAuthority",
                typeof(string),
                propertyInfo: typeof(PerJobsF).GetProperty("ApprovalAuthority", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(PerJobsF).GetField("<ApprovalAuthority>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                nullable: true,
                maxLength: 50,
                unicode: false);
            approvalAuthority.AddAnnotation("Oracle:ValueGenerationStrategy", OracleValueGenerationStrategy.None);
            approvalAuthority.AddAnnotation("Relational:ColumnName", "APPROVAL_AUTHORITY");

            var benchmarkJobFlag = runtimeEntityType.AddProperty(
                "BenchmarkJobFlag",
                typeof(string),
                propertyInfo: typeof(PerJobsF).GetProperty("BenchmarkJobFlag", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(PerJobsF).GetField("<BenchmarkJobFlag>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                nullable: true,
                maxLength: 50,
                unicode: false);
            benchmarkJobFlag.AddAnnotation("Oracle:ValueGenerationStrategy", OracleValueGenerationStrategy.None);
            benchmarkJobFlag.AddAnnotation("Relational:ColumnName", "BENCHMARK_JOB_FLAG");

            var benchmarkJobId = runtimeEntityType.AddProperty(
                "BenchmarkJobId",
                typeof(decimal?),
                propertyInfo: typeof(PerJobsF).GetProperty("BenchmarkJobId", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(PerJobsF).GetField("<BenchmarkJobId>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                nullable: true);
            benchmarkJobId.AddAnnotation("Oracle:ValueGenerationStrategy", OracleValueGenerationStrategy.None);
            benchmarkJobId.AddAnnotation("Relational:ColumnName", "BENCHMARK_JOB_ID");
            benchmarkJobId.AddAnnotation("Relational:ColumnType", "NUMBER(38)");

            var businessGroupId = runtimeEntityType.AddProperty(
                "BusinessGroupId",
                typeof(decimal?),
                propertyInfo: typeof(PerJobsF).GetProperty("BusinessGroupId", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(PerJobsF).GetField("<BusinessGroupId>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                nullable: true);
            businessGroupId.AddAnnotation("Oracle:ValueGenerationStrategy", OracleValueGenerationStrategy.None);
            businessGroupId.AddAnnotation("Relational:ColumnName", "BUSINESS_GROUP_ID");
            businessGroupId.AddAnnotation("Relational:ColumnType", "NUMBER(38)");

            var categoryCode = runtimeEntityType.AddProperty(
                "CategoryCode",
                typeof(string),
                propertyInfo: typeof(PerJobsF).GetProperty("CategoryCode", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(PerJobsF).GetField("<CategoryCode>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                nullable: true,
                maxLength: 50,
                unicode: false);
            categoryCode.AddAnnotation("Oracle:ValueGenerationStrategy", OracleValueGenerationStrategy.None);
            categoryCode.AddAnnotation("Relational:ColumnName", "CATEGORY_CODE");

            var createdBy = runtimeEntityType.AddProperty(
                "CreatedBy",
                typeof(string),
                propertyInfo: typeof(PerJobsF).GetProperty("CreatedBy", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(PerJobsF).GetField("<CreatedBy>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                nullable: true,
                maxLength: 50,
                unicode: false);
            createdBy.AddAnnotation("Oracle:ValueGenerationStrategy", OracleValueGenerationStrategy.None);
            createdBy.AddAnnotation("Relational:ColumnName", "CREATED_BY");

            var creationDate = runtimeEntityType.AddProperty(
                "CreationDate",
                typeof(DateTime?),
                propertyInfo: typeof(PerJobsF).GetProperty("CreationDate", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(PerJobsF).GetField("<CreationDate>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                nullable: true);
            creationDate.AddAnnotation("Oracle:ValueGenerationStrategy", OracleValueGenerationStrategy.None);
            creationDate.AddAnnotation("Relational:ColumnName", "CREATION_DATE");
            creationDate.AddAnnotation("Relational:ColumnType", "DATE");

            var effectiveEndDate = runtimeEntityType.AddProperty(
                "EffectiveEndDate",
                typeof(DateTime?),
                propertyInfo: typeof(PerJobsF).GetProperty("EffectiveEndDate", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(PerJobsF).GetField("<EffectiveEndDate>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                nullable: true);
            effectiveEndDate.AddAnnotation("Oracle:ValueGenerationStrategy", OracleValueGenerationStrategy.None);
            effectiveEndDate.AddAnnotation("Relational:ColumnName", "EFFECTIVE_END_DATE");
            effectiveEndDate.AddAnnotation("Relational:ColumnType", "DATE");

            var effectiveStartDate = runtimeEntityType.AddProperty(
                "EffectiveStartDate",
                typeof(DateTime?),
                propertyInfo: typeof(PerJobsF).GetProperty("EffectiveStartDate", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(PerJobsF).GetField("<EffectiveStartDate>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                nullable: true);
            effectiveStartDate.AddAnnotation("Oracle:ValueGenerationStrategy", OracleValueGenerationStrategy.None);
            effectiveStartDate.AddAnnotation("Relational:ColumnName", "EFFECTIVE_START_DATE");
            effectiveStartDate.AddAnnotation("Relational:ColumnType", "DATE");

            var fullPartTime = runtimeEntityType.AddProperty(
                "FullPartTime",
                typeof(string),
                propertyInfo: typeof(PerJobsF).GetProperty("FullPartTime", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(PerJobsF).GetField("<FullPartTime>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                nullable: true,
                maxLength: 50,
                unicode: false);
            fullPartTime.AddAnnotation("Oracle:ValueGenerationStrategy", OracleValueGenerationStrategy.None);
            fullPartTime.AddAnnotation("Relational:ColumnName", "FULL_PART_TIME");

            var gradeLadderId = runtimeEntityType.AddProperty(
                "GradeLadderId",
                typeof(decimal?),
                propertyInfo: typeof(PerJobsF).GetProperty("GradeLadderId", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(PerJobsF).GetField("<GradeLadderId>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                nullable: true);
            gradeLadderId.AddAnnotation("Oracle:ValueGenerationStrategy", OracleValueGenerationStrategy.None);
            gradeLadderId.AddAnnotation("Relational:ColumnName", "GRADE_LADDER_ID");
            gradeLadderId.AddAnnotation("Relational:ColumnType", "NUMBER(38)");

            var jobCode = runtimeEntityType.AddProperty(
                "JobCode",
                typeof(string),
                propertyInfo: typeof(PerJobsF).GetProperty("JobCode", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(PerJobsF).GetField("<JobCode>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                nullable: true,
                maxLength: 50,
                unicode: false);
            jobCode.AddAnnotation("Oracle:ValueGenerationStrategy", OracleValueGenerationStrategy.None);
            jobCode.AddAnnotation("Relational:ColumnName", "JOB_CODE");

            var jobFamilyId = runtimeEntityType.AddProperty(
                "JobFamilyId",
                typeof(decimal?),
                propertyInfo: typeof(PerJobsF).GetProperty("JobFamilyId", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(PerJobsF).GetField("<JobFamilyId>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                nullable: true);
            jobFamilyId.AddAnnotation("Oracle:ValueGenerationStrategy", OracleValueGenerationStrategy.None);
            jobFamilyId.AddAnnotation("Relational:ColumnName", "JOB_FAMILY_ID");
            jobFamilyId.AddAnnotation("Relational:ColumnType", "NUMBER(38)");

            var jobFunctionCode = runtimeEntityType.AddProperty(
                "JobFunctionCode",
                typeof(string),
                propertyInfo: typeof(PerJobsF).GetProperty("JobFunctionCode", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(PerJobsF).GetField("<JobFunctionCode>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                nullable: true,
                maxLength: 50,
                unicode: false);
            jobFunctionCode.AddAnnotation("Oracle:ValueGenerationStrategy", OracleValueGenerationStrategy.None);
            jobFunctionCode.AddAnnotation("Relational:ColumnName", "JOB_FUNCTION_CODE");

            var jobId = runtimeEntityType.AddProperty(
                "JobId",
                typeof(decimal?),
                propertyInfo: typeof(PerJobsF).GetProperty("JobId", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(PerJobsF).GetField("<JobId>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                nullable: true);
            jobId.AddAnnotation("Oracle:ValueGenerationStrategy", OracleValueGenerationStrategy.None);
            jobId.AddAnnotation("Relational:ColumnName", "JOB_ID");
            jobId.AddAnnotation("Relational:ColumnType", "NUMBER(38)");

            var lastUpdateDate = runtimeEntityType.AddProperty(
                "LastUpdateDate",
                typeof(DateTime?),
                propertyInfo: typeof(PerJobsF).GetProperty("LastUpdateDate", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(PerJobsF).GetField("<LastUpdateDate>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                nullable: true);
            lastUpdateDate.AddAnnotation("Oracle:ValueGenerationStrategy", OracleValueGenerationStrategy.None);
            lastUpdateDate.AddAnnotation("Relational:ColumnName", "LAST_UPDATE_DATE");
            lastUpdateDate.AddAnnotation("Relational:ColumnType", "DATE");

            var lastUpdateLogin = runtimeEntityType.AddProperty(
                "LastUpdateLogin",
                typeof(string),
                propertyInfo: typeof(PerJobsF).GetProperty("LastUpdateLogin", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(PerJobsF).GetField("<LastUpdateLogin>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                nullable: true,
                maxLength: 50,
                unicode: false);
            lastUpdateLogin.AddAnnotation("Oracle:ValueGenerationStrategy", OracleValueGenerationStrategy.None);
            lastUpdateLogin.AddAnnotation("Relational:ColumnName", "LAST_UPDATE_LOGIN");

            var lastUpdatedBy = runtimeEntityType.AddProperty(
                "LastUpdatedBy",
                typeof(string),
                propertyInfo: typeof(PerJobsF).GetProperty("LastUpdatedBy", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(PerJobsF).GetField("<LastUpdatedBy>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                nullable: true,
                maxLength: 50,
                unicode: false);
            lastUpdatedBy.AddAnnotation("Oracle:ValueGenerationStrategy", OracleValueGenerationStrategy.None);
            lastUpdatedBy.AddAnnotation("Relational:ColumnName", "LAST_UPDATED_BY");

            var managerLevel = runtimeEntityType.AddProperty(
                "ManagerLevel",
                typeof(string),
                propertyInfo: typeof(PerJobsF).GetProperty("ManagerLevel", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(PerJobsF).GetField("<ManagerLevel>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                nullable: true,
                maxLength: 50,
                unicode: false);
            managerLevel.AddAnnotation("Oracle:ValueGenerationStrategy", OracleValueGenerationStrategy.None);
            managerLevel.AddAnnotation("Relational:ColumnName", "MANAGER_LEVEL");

            var medCheckupReq = runtimeEntityType.AddProperty(
                "MedCheckupReq",
                typeof(string),
                propertyInfo: typeof(PerJobsF).GetProperty("MedCheckupReq", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(PerJobsF).GetField("<MedCheckupReq>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                nullable: true,
                maxLength: 50,
                unicode: false);
            medCheckupReq.AddAnnotation("Oracle:ValueGenerationStrategy", OracleValueGenerationStrategy.None);
            medCheckupReq.AddAnnotation("Relational:ColumnName", "MED_CHECKUP_REQ");

            var objectVersionNumber = runtimeEntityType.AddProperty(
                "ObjectVersionNumber",
                typeof(decimal?),
                propertyInfo: typeof(PerJobsF).GetProperty("ObjectVersionNumber", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(PerJobsF).GetField("<ObjectVersionNumber>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                nullable: true);
            objectVersionNumber.AddAnnotation("Oracle:ValueGenerationStrategy", OracleValueGenerationStrategy.None);
            objectVersionNumber.AddAnnotation("Relational:ColumnName", "OBJECT_VERSION_NUMBER");
            objectVersionNumber.AddAnnotation("Relational:ColumnType", "NUMBER(38)");

            var progressionJobId = runtimeEntityType.AddProperty(
                "ProgressionJobId",
                typeof(decimal?),
                propertyInfo: typeof(PerJobsF).GetProperty("ProgressionJobId", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(PerJobsF).GetField("<ProgressionJobId>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                nullable: true);
            progressionJobId.AddAnnotation("Oracle:ValueGenerationStrategy", OracleValueGenerationStrategy.None);
            progressionJobId.AddAnnotation("Relational:ColumnName", "PROGRESSION_JOB_ID");
            progressionJobId.AddAnnotation("Relational:ColumnType", "NUMBER(38)");

            var regularTemporary = runtimeEntityType.AddProperty(
                "RegularTemporary",
                typeof(string),
                propertyInfo: typeof(PerJobsF).GetProperty("RegularTemporary", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(PerJobsF).GetField("<RegularTemporary>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                nullable: true,
                maxLength: 50,
                unicode: false);
            regularTemporary.AddAnnotation("Oracle:ValueGenerationStrategy", OracleValueGenerationStrategy.None);
            regularTemporary.AddAnnotation("Relational:ColumnName", "REGULAR_TEMPORARY");

            var requisitionTemplateId = runtimeEntityType.AddProperty(
                "RequisitionTemplateId",
                typeof(decimal?),
                propertyInfo: typeof(PerJobsF).GetProperty("RequisitionTemplateId", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(PerJobsF).GetField("<RequisitionTemplateId>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                nullable: true);
            requisitionTemplateId.AddAnnotation("Oracle:ValueGenerationStrategy", OracleValueGenerationStrategy.None);
            requisitionTemplateId.AddAnnotation("Relational:ColumnName", "REQUISITION_TEMPLATE_ID");
            requisitionTemplateId.AddAnnotation("Relational:ColumnType", "NUMBER(38)");

            var setId = runtimeEntityType.AddProperty(
                "SetId",
                typeof(decimal?),
                propertyInfo: typeof(PerJobsF).GetProperty("SetId", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(PerJobsF).GetField("<SetId>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                nullable: true);
            setId.AddAnnotation("Oracle:ValueGenerationStrategy", OracleValueGenerationStrategy.None);
            setId.AddAnnotation("Relational:ColumnName", "SET_ID");
            setId.AddAnnotation("Relational:ColumnType", "NUMBER(38)");

            return runtimeEntityType;
        }

        public static void CreateAnnotations(RuntimeEntityType runtimeEntityType)
        {
            runtimeEntityType.AddAnnotation("Relational:FunctionName", null);
            runtimeEntityType.AddAnnotation("Relational:Schema", "FUSION");
            runtimeEntityType.AddAnnotation("Relational:SqlQuery", null);
            runtimeEntityType.AddAnnotation("Relational:TableName", "PER_JOBS_F");
            runtimeEntityType.AddAnnotation("Relational:ViewName", null);
            runtimeEntityType.AddAnnotation("Relational:ViewSchema", null);

            Customize(runtimeEntityType);
        }

        static partial void Customize(RuntimeEntityType runtimeEntityType);
    }
}
