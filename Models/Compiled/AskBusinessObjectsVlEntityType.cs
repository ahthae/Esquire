// <auto-generated />
using System;
using System.Reflection;
using Microsoft.EntityFrameworkCore.Metadata;
using Oracle.EntityFrameworkCore.Metadata;
using esquire.Models.Fusion;

#pragma warning disable 219, 612, 618
#nullable enable

namespace esquire.Models.Compiled
{
    internal partial class AskBusinessObjectsVlEntityType
    {
        public static RuntimeEntityType Create(RuntimeModel model, RuntimeEntityType? baseEntityType = null)
        {
            var runtimeEntityType = model.AddEntityType(
                "esquire.Models.Fusion.AskBusinessObjectsVl",
                typeof(AskBusinessObjectsVl),
                baseEntityType);

            var active = runtimeEntityType.AddProperty(
                "Active",
                typeof(string),
                propertyInfo: typeof(AskBusinessObjectsVl).GetProperty("Active", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(AskBusinessObjectsVl).GetField("<Active>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                nullable: true,
                maxLength: 50,
                unicode: false);
            active.AddAnnotation("Oracle:ValueGenerationStrategy", OracleValueGenerationStrategy.None);
            active.AddAnnotation("Relational:ColumnName", "ACTIVE");

            var api = runtimeEntityType.AddProperty(
                "Api",
                typeof(string),
                propertyInfo: typeof(AskBusinessObjectsVl).GetProperty("Api", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(AskBusinessObjectsVl).GetField("<Api>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                nullable: true,
                maxLength: 50,
                unicode: false);
            api.AddAnnotation("Oracle:ValueGenerationStrategy", OracleValueGenerationStrategy.None);
            api.AddAnnotation("Relational:ColumnName", "API");

            var apiType = runtimeEntityType.AddProperty(
                "ApiType",
                typeof(string),
                propertyInfo: typeof(AskBusinessObjectsVl).GetProperty("ApiType", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(AskBusinessObjectsVl).GetField("<ApiType>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                nullable: true,
                maxLength: 50,
                unicode: false);
            apiType.AddAnnotation("Oracle:ValueGenerationStrategy", OracleValueGenerationStrategy.None);
            apiType.AddAnnotation("Relational:ColumnName", "API_TYPE");

            var applicationId = runtimeEntityType.AddProperty(
                "ApplicationId",
                typeof(decimal?),
                propertyInfo: typeof(AskBusinessObjectsVl).GetProperty("ApplicationId", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(AskBusinessObjectsVl).GetField("<ApplicationId>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                nullable: true);
            applicationId.AddAnnotation("Oracle:ValueGenerationStrategy", OracleValueGenerationStrategy.None);
            applicationId.AddAnnotation("Relational:ColumnName", "APPLICATION_ID");
            applicationId.AddAnnotation("Relational:ColumnType", "NUMBER(38)");

            var businessAreaId = runtimeEntityType.AddProperty(
                "BusinessAreaId",
                typeof(decimal?),
                propertyInfo: typeof(AskBusinessObjectsVl).GetProperty("BusinessAreaId", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(AskBusinessObjectsVl).GetField("<BusinessAreaId>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                nullable: true);
            businessAreaId.AddAnnotation("Oracle:ValueGenerationStrategy", OracleValueGenerationStrategy.None);
            businessAreaId.AddAnnotation("Relational:ColumnName", "BUSINESS_AREA_ID");
            businessAreaId.AddAnnotation("Relational:ColumnType", "NUMBER(38)");

            var businessObjectDesc = runtimeEntityType.AddProperty(
                "BusinessObjectDesc",
                typeof(string),
                propertyInfo: typeof(AskBusinessObjectsVl).GetProperty("BusinessObjectDesc", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(AskBusinessObjectsVl).GetField("<BusinessObjectDesc>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                nullable: true,
                maxLength: 900,
                unicode: false);
            businessObjectDesc.AddAnnotation("Oracle:ValueGenerationStrategy", OracleValueGenerationStrategy.None);
            businessObjectDesc.AddAnnotation("Relational:ColumnName", "BUSINESS_OBJECT_DESC");

            var businessObjectId = runtimeEntityType.AddProperty(
                "BusinessObjectId",
                typeof(decimal?),
                propertyInfo: typeof(AskBusinessObjectsVl).GetProperty("BusinessObjectId", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(AskBusinessObjectsVl).GetField("<BusinessObjectId>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                nullable: true);
            businessObjectId.AddAnnotation("Oracle:ValueGenerationStrategy", OracleValueGenerationStrategy.None);
            businessObjectId.AddAnnotation("Relational:ColumnName", "BUSINESS_OBJECT_ID");
            businessObjectId.AddAnnotation("Relational:ColumnType", "NUMBER(38)");

            var businessObjectName = runtimeEntityType.AddProperty(
                "BusinessObjectName",
                typeof(string),
                propertyInfo: typeof(AskBusinessObjectsVl).GetProperty("BusinessObjectName", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(AskBusinessObjectsVl).GetField("<BusinessObjectName>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                nullable: true,
                maxLength: 100,
                unicode: false);
            businessObjectName.AddAnnotation("Oracle:ValueGenerationStrategy", OracleValueGenerationStrategy.None);
            businessObjectName.AddAnnotation("Relational:ColumnName", "BUSINESS_OBJECT_NAME");

            var businessObjectShortName = runtimeEntityType.AddProperty(
                "BusinessObjectShortName",
                typeof(string),
                propertyInfo: typeof(AskBusinessObjectsVl).GetProperty("BusinessObjectShortName", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(AskBusinessObjectsVl).GetField("<BusinessObjectShortName>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                nullable: true,
                maxLength: 100,
                unicode: false);
            businessObjectShortName.AddAnnotation("Oracle:ValueGenerationStrategy", OracleValueGenerationStrategy.None);
            businessObjectShortName.AddAnnotation("Relational:ColumnName", "BUSINESS_OBJECT_SHORT_NAME");

            var commitIfWarningFlag = runtimeEntityType.AddProperty(
                "CommitIfWarningFlag",
                typeof(string),
                propertyInfo: typeof(AskBusinessObjectsVl).GetProperty("CommitIfWarningFlag", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(AskBusinessObjectsVl).GetField("<CommitIfWarningFlag>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                nullable: true,
                maxLength: 50,
                unicode: false);
            commitIfWarningFlag.AddAnnotation("Oracle:ValueGenerationStrategy", OracleValueGenerationStrategy.None);
            commitIfWarningFlag.AddAnnotation("Relational:ColumnName", "COMMIT_IF_WARNING_FLAG");

            var createdBy = runtimeEntityType.AddProperty(
                "CreatedBy",
                typeof(string),
                propertyInfo: typeof(AskBusinessObjectsVl).GetProperty("CreatedBy", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(AskBusinessObjectsVl).GetField("<CreatedBy>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                nullable: true,
                maxLength: 50,
                unicode: false);
            createdBy.AddAnnotation("Oracle:ValueGenerationStrategy", OracleValueGenerationStrategy.None);
            createdBy.AddAnnotation("Relational:ColumnName", "CREATED_BY");

            var creationDate = runtimeEntityType.AddProperty(
                "CreationDate",
                typeof(DateTime?),
                propertyInfo: typeof(AskBusinessObjectsVl).GetProperty("CreationDate", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(AskBusinessObjectsVl).GetField("<CreationDate>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                nullable: true);
            creationDate.AddAnnotation("Oracle:ValueGenerationStrategy", OracleValueGenerationStrategy.None);
            creationDate.AddAnnotation("Relational:ColumnName", "CREATION_DATE");
            creationDate.AddAnnotation("Relational:ColumnType", "DATE");

            var dataStorageClass = runtimeEntityType.AddProperty(
                "DataStorageClass",
                typeof(string),
                propertyInfo: typeof(AskBusinessObjectsVl).GetProperty("DataStorageClass", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(AskBusinessObjectsVl).GetField("<DataStorageClass>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                nullable: true,
                maxLength: 50,
                unicode: false);
            dataStorageClass.AddAnnotation("Oracle:ValueGenerationStrategy", OracleValueGenerationStrategy.None);
            dataStorageClass.AddAnnotation("Relational:ColumnName", "DATA_STORAGE_CLASS");

            var denseAttributesFlag = runtimeEntityType.AddProperty(
                "DenseAttributesFlag",
                typeof(string),
                propertyInfo: typeof(AskBusinessObjectsVl).GetProperty("DenseAttributesFlag", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(AskBusinessObjectsVl).GetField("<DenseAttributesFlag>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                nullable: true,
                maxLength: 50,
                unicode: false);
            denseAttributesFlag.AddAnnotation("Oracle:ValueGenerationStrategy", OracleValueGenerationStrategy.None);
            denseAttributesFlag.AddAnnotation("Relational:ColumnName", "DENSE_ATTRIBUTES_FLAG");

            var deploymentDataStore = runtimeEntityType.AddProperty(
                "DeploymentDataStore",
                typeof(string),
                propertyInfo: typeof(AskBusinessObjectsVl).GetProperty("DeploymentDataStore", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(AskBusinessObjectsVl).GetField("<DeploymentDataStore>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                nullable: true,
                maxLength: 50,
                unicode: false);
            deploymentDataStore.AddAnnotation("Oracle:ValueGenerationStrategy", OracleValueGenerationStrategy.None);
            deploymentDataStore.AddAnnotation("Relational:ColumnName", "DEPLOYMENT_DATA_STORE");

            var enterpriseAppShortName = runtimeEntityType.AddProperty(
                "EnterpriseAppShortName",
                typeof(string),
                propertyInfo: typeof(AskBusinessObjectsVl).GetProperty("EnterpriseAppShortName", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(AskBusinessObjectsVl).GetField("<EnterpriseAppShortName>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                nullable: true,
                maxLength: 50,
                unicode: false);
            enterpriseAppShortName.AddAnnotation("Oracle:ValueGenerationStrategy", OracleValueGenerationStrategy.None);
            enterpriseAppShortName.AddAnnotation("Relational:ColumnName", "ENTERPRISE_APP_SHORT_NAME");

            var enterpriseId = runtimeEntityType.AddProperty(
                "EnterpriseId",
                typeof(decimal?),
                propertyInfo: typeof(AskBusinessObjectsVl).GetProperty("EnterpriseId", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(AskBusinessObjectsVl).GetField("<EnterpriseId>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                nullable: true);
            enterpriseId.AddAnnotation("Oracle:ValueGenerationStrategy", OracleValueGenerationStrategy.None);
            enterpriseId.AddAnnotation("Relational:ColumnName", "ENTERPRISE_ID");
            enterpriseId.AddAnnotation("Relational:ColumnType", "NUMBER(38)");

            var entityType = runtimeEntityType.AddProperty(
                "EntityType",
                typeof(string),
                propertyInfo: typeof(AskBusinessObjectsVl).GetProperty("EntityType", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(AskBusinessObjectsVl).GetField("<EntityType>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                nullable: true,
                maxLength: 50,
                unicode: false);
            entityType.AddAnnotation("Oracle:ValueGenerationStrategy", OracleValueGenerationStrategy.None);
            entityType.AddAnnotation("Relational:ColumnName", "ENTITY_TYPE");

            var exceptionAction = runtimeEntityType.AddProperty(
                "ExceptionAction",
                typeof(string),
                propertyInfo: typeof(AskBusinessObjectsVl).GetProperty("ExceptionAction", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(AskBusinessObjectsVl).GetField("<ExceptionAction>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                nullable: true,
                maxLength: 50,
                unicode: false);
            exceptionAction.AddAnnotation("Oracle:ValueGenerationStrategy", OracleValueGenerationStrategy.None);
            exceptionAction.AddAnnotation("Relational:ColumnName", "EXCEPTION_ACTION");

            var exportAllowedFlag = runtimeEntityType.AddProperty(
                "ExportAllowedFlag",
                typeof(string),
                propertyInfo: typeof(AskBusinessObjectsVl).GetProperty("ExportAllowedFlag", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(AskBusinessObjectsVl).GetField("<ExportAllowedFlag>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                nullable: true,
                maxLength: 50,
                unicode: false);
            exportAllowedFlag.AddAnnotation("Oracle:ValueGenerationStrategy", OracleValueGenerationStrategy.None);
            exportAllowedFlag.AddAnnotation("Relational:ColumnName", "EXPORT_ALLOWED_FLAG");

            var filterAllowedFlag = runtimeEntityType.AddProperty(
                "FilterAllowedFlag",
                typeof(string),
                propertyInfo: typeof(AskBusinessObjectsVl).GetProperty("FilterAllowedFlag", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(AskBusinessObjectsVl).GetField("<FilterAllowedFlag>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                nullable: true,
                maxLength: 50,
                unicode: false);
            filterAllowedFlag.AddAnnotation("Oracle:ValueGenerationStrategy", OracleValueGenerationStrategy.None);
            filterAllowedFlag.AddAnnotation("Relational:ColumnName", "FILTER_ALLOWED_FLAG");

            var genericFlag = runtimeEntityType.AddProperty(
                "GenericFlag",
                typeof(string),
                propertyInfo: typeof(AskBusinessObjectsVl).GetProperty("GenericFlag", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(AskBusinessObjectsVl).GetField("<GenericFlag>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                nullable: true,
                maxLength: 50,
                unicode: false);
            genericFlag.AddAnnotation("Oracle:ValueGenerationStrategy", OracleValueGenerationStrategy.None);
            genericFlag.AddAnnotation("Relational:ColumnName", "GENERIC_FLAG");

            var highDataVolume = runtimeEntityType.AddProperty(
                "HighDataVolume",
                typeof(string),
                propertyInfo: typeof(AskBusinessObjectsVl).GetProperty("HighDataVolume", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(AskBusinessObjectsVl).GetField("<HighDataVolume>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                nullable: true,
                maxLength: 50,
                unicode: false);
            highDataVolume.AddAnnotation("Oracle:ValueGenerationStrategy", OracleValueGenerationStrategy.None);
            highDataVolume.AddAnnotation("Relational:ColumnName", "HIGH_DATA_VOLUME");

            var highVolumnType = runtimeEntityType.AddProperty(
                "HighVolumnType",
                typeof(string),
                propertyInfo: typeof(AskBusinessObjectsVl).GetProperty("HighVolumnType", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(AskBusinessObjectsVl).GetField("<HighVolumnType>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                nullable: true,
                maxLength: 50,
                unicode: false);
            highVolumnType.AddAnnotation("Oracle:ValueGenerationStrategy", OracleValueGenerationStrategy.None);
            highVolumnType.AddAnnotation("Relational:ColumnName", "HIGH_VOLUMN_TYPE");

            var holdSetupTasks = runtimeEntityType.AddProperty(
                "HoldSetupTasks",
                typeof(string),
                propertyInfo: typeof(AskBusinessObjectsVl).GetProperty("HoldSetupTasks", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(AskBusinessObjectsVl).GetField("<HoldSetupTasks>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                nullable: true,
                maxLength: 50,
                unicode: false);
            holdSetupTasks.AddAnnotation("Oracle:ValueGenerationStrategy", OracleValueGenerationStrategy.None);
            holdSetupTasks.AddAnnotation("Relational:ColumnName", "HOLD_SETUP_TASKS");

            var importPauseFlag = runtimeEntityType.AddProperty(
                "ImportPauseFlag",
                typeof(string),
                propertyInfo: typeof(AskBusinessObjectsVl).GetProperty("ImportPauseFlag", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(AskBusinessObjectsVl).GetField("<ImportPauseFlag>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                nullable: true,
                maxLength: 50,
                unicode: false);
            importPauseFlag.AddAnnotation("Oracle:ValueGenerationStrategy", OracleValueGenerationStrategy.None);
            importPauseFlag.AddAnnotation("Relational:ColumnName", "IMPORT_PAUSE_FLAG");

            var lastUpdateDate = runtimeEntityType.AddProperty(
                "LastUpdateDate",
                typeof(DateTime?),
                propertyInfo: typeof(AskBusinessObjectsVl).GetProperty("LastUpdateDate", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(AskBusinessObjectsVl).GetField("<LastUpdateDate>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                nullable: true);
            lastUpdateDate.AddAnnotation("Oracle:ValueGenerationStrategy", OracleValueGenerationStrategy.None);
            lastUpdateDate.AddAnnotation("Relational:ColumnName", "LAST_UPDATE_DATE");
            lastUpdateDate.AddAnnotation("Relational:ColumnType", "DATE");

            var lastUpdateLogin = runtimeEntityType.AddProperty(
                "LastUpdateLogin",
                typeof(decimal?),
                propertyInfo: typeof(AskBusinessObjectsVl).GetProperty("LastUpdateLogin", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(AskBusinessObjectsVl).GetField("<LastUpdateLogin>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                nullable: true);
            lastUpdateLogin.AddAnnotation("Oracle:ValueGenerationStrategy", OracleValueGenerationStrategy.None);
            lastUpdateLogin.AddAnnotation("Relational:ColumnName", "LAST_UPDATE_LOGIN");
            lastUpdateLogin.AddAnnotation("Relational:ColumnType", "NUMBER(38)");

            var lastUpdatedBy = runtimeEntityType.AddProperty(
                "LastUpdatedBy",
                typeof(string),
                propertyInfo: typeof(AskBusinessObjectsVl).GetProperty("LastUpdatedBy", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(AskBusinessObjectsVl).GetField("<LastUpdatedBy>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                nullable: true,
                maxLength: 50,
                unicode: false);
            lastUpdatedBy.AddAnnotation("Oracle:ValueGenerationStrategy", OracleValueGenerationStrategy.None);
            lastUpdatedBy.AddAnnotation("Relational:ColumnName", "LAST_UPDATED_BY");

            var lctEntityCode = runtimeEntityType.AddProperty(
                "LctEntityCode",
                typeof(string),
                propertyInfo: typeof(AskBusinessObjectsVl).GetProperty("LctEntityCode", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(AskBusinessObjectsVl).GetField("<LctEntityCode>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                nullable: true,
                maxLength: 50,
                unicode: false);
            lctEntityCode.AddAnnotation("Oracle:ValueGenerationStrategy", OracleValueGenerationStrategy.None);
            lctEntityCode.AddAnnotation("Relational:ColumnName", "LCT_ENTITY_CODE");

            var lctFile = runtimeEntityType.AddProperty(
                "LctFile",
                typeof(string),
                propertyInfo: typeof(AskBusinessObjectsVl).GetProperty("LctFile", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(AskBusinessObjectsVl).GetField("<LctFile>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                nullable: true,
                maxLength: 50,
                unicode: false);
            lctFile.AddAnnotation("Oracle:ValueGenerationStrategy", OracleValueGenerationStrategy.None);
            lctFile.AddAnnotation("Relational:ColumnName", "LCT_FILE");

            var lctLink = runtimeEntityType.AddProperty(
                "LctLink",
                typeof(string),
                propertyInfo: typeof(AskBusinessObjectsVl).GetProperty("LctLink", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(AskBusinessObjectsVl).GetField("<LctLink>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                nullable: true,
                maxLength: 50,
                unicode: false);
            lctLink.AddAnnotation("Oracle:ValueGenerationStrategy", OracleValueGenerationStrategy.None);
            lctLink.AddAnnotation("Relational:ColumnName", "LCT_LINK");

            var lowVolumeRange = runtimeEntityType.AddProperty(
                "LowVolumeRange",
                typeof(string),
                propertyInfo: typeof(AskBusinessObjectsVl).GetProperty("LowVolumeRange", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(AskBusinessObjectsVl).GetField("<LowVolumeRange>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                nullable: true,
                maxLength: 50,
                unicode: false);
            lowVolumeRange.AddAnnotation("Oracle:ValueGenerationStrategy", OracleValueGenerationStrategy.None);
            lowVolumeRange.AddAnnotation("Relational:ColumnName", "LOW_VOLUME_RANGE");

            var manualMigrationFlag = runtimeEntityType.AddProperty(
                "ManualMigrationFlag",
                typeof(string),
                propertyInfo: typeof(AskBusinessObjectsVl).GetProperty("ManualMigrationFlag", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(AskBusinessObjectsVl).GetField("<ManualMigrationFlag>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                nullable: true,
                maxLength: 50,
                unicode: false);
            manualMigrationFlag.AddAnnotation("Oracle:ValueGenerationStrategy", OracleValueGenerationStrategy.None);
            manualMigrationFlag.AddAnnotation("Relational:ColumnName", "MANUAL_MIGRATION_FLAG");

            var milestone = runtimeEntityType.AddProperty(
                "Milestone",
                typeof(string),
                propertyInfo: typeof(AskBusinessObjectsVl).GetProperty("Milestone", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(AskBusinessObjectsVl).GetField("<Milestone>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                nullable: true,
                maxLength: 50,
                unicode: false);
            milestone.AddAnnotation("Oracle:ValueGenerationStrategy", OracleValueGenerationStrategy.None);
            milestone.AddAnnotation("Relational:ColumnName", "MILESTONE");

            var milestoneCode = runtimeEntityType.AddProperty(
                "MilestoneCode",
                typeof(string),
                propertyInfo: typeof(AskBusinessObjectsVl).GetProperty("MilestoneCode", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(AskBusinessObjectsVl).GetField("<MilestoneCode>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                nullable: true,
                maxLength: 50,
                unicode: false);
            milestoneCode.AddAnnotation("Oracle:ValueGenerationStrategy", OracleValueGenerationStrategy.None);
            milestoneCode.AddAnnotation("Relational:ColumnName", "MILESTONE_CODE");

            var moduleId = runtimeEntityType.AddProperty(
                "ModuleId",
                typeof(string),
                propertyInfo: typeof(AskBusinessObjectsVl).GetProperty("ModuleId", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(AskBusinessObjectsVl).GetField("<ModuleId>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                nullable: true,
                maxLength: 50,
                unicode: false);
            moduleId.AddAnnotation("Oracle:ValueGenerationStrategy", OracleValueGenerationStrategy.None);
            moduleId.AddAnnotation("Relational:ColumnName", "MODULE_ID");

            var moduleShortName = runtimeEntityType.AddProperty(
                "ModuleShortName",
                typeof(string),
                propertyInfo: typeof(AskBusinessObjectsVl).GetProperty("ModuleShortName", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(AskBusinessObjectsVl).GetField("<ModuleShortName>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                nullable: true,
                maxLength: 50,
                unicode: false);
            moduleShortName.AddAnnotation("Oracle:ValueGenerationStrategy", OracleValueGenerationStrategy.None);
            moduleShortName.AddAnnotation("Relational:ColumnName", "MODULE_SHORT_NAME");

            var objectVersionNumber = runtimeEntityType.AddProperty(
                "ObjectVersionNumber",
                typeof(decimal?),
                propertyInfo: typeof(AskBusinessObjectsVl).GetProperty("ObjectVersionNumber", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(AskBusinessObjectsVl).GetField("<ObjectVersionNumber>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                nullable: true);
            objectVersionNumber.AddAnnotation("Oracle:ValueGenerationStrategy", OracleValueGenerationStrategy.None);
            objectVersionNumber.AddAnnotation("Relational:ColumnName", "OBJECT_VERSION_NUMBER");
            objectVersionNumber.AddAnnotation("Relational:ColumnType", "NUMBER(38)");

            var obsoleteFlag = runtimeEntityType.AddProperty(
                "ObsoleteFlag",
                typeof(string),
                propertyInfo: typeof(AskBusinessObjectsVl).GetProperty("ObsoleteFlag", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(AskBusinessObjectsVl).GetField("<ObsoleteFlag>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                nullable: true,
                maxLength: 50,
                unicode: false);
            obsoleteFlag.AddAnnotation("Oracle:ValueGenerationStrategy", OracleValueGenerationStrategy.None);
            obsoleteFlag.AddAnnotation("Relational:ColumnName", "OBSOLETE_FLAG");

            var owner = runtimeEntityType.AddProperty(
                "Owner",
                typeof(string),
                propertyInfo: typeof(AskBusinessObjectsVl).GetProperty("Owner", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(AskBusinessObjectsVl).GetField("<Owner>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                nullable: true,
                maxLength: 50,
                unicode: false);
            owner.AddAnnotation("Oracle:ValueGenerationStrategy", OracleValueGenerationStrategy.None);
            owner.AddAnnotation("Relational:ColumnName", "OWNER");

            var parentBusinessObjectId = runtimeEntityType.AddProperty(
                "ParentBusinessObjectId",
                typeof(decimal?),
                propertyInfo: typeof(AskBusinessObjectsVl).GetProperty("ParentBusinessObjectId", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(AskBusinessObjectsVl).GetField("<ParentBusinessObjectId>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                nullable: true);
            parentBusinessObjectId.AddAnnotation("Oracle:ValueGenerationStrategy", OracleValueGenerationStrategy.None);
            parentBusinessObjectId.AddAnnotation("Relational:ColumnName", "PARENT_BUSINESS_OBJECT_ID");
            parentBusinessObjectId.AddAnnotation("Relational:ColumnType", "NUMBER(38)");

            var parentEntityCode = runtimeEntityType.AddProperty(
                "ParentEntityCode",
                typeof(string),
                propertyInfo: typeof(AskBusinessObjectsVl).GetProperty("ParentEntityCode", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(AskBusinessObjectsVl).GetField("<ParentEntityCode>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                nullable: true,
                maxLength: 50,
                unicode: false);
            parentEntityCode.AddAnnotation("Oracle:ValueGenerationStrategy", OracleValueGenerationStrategy.None);
            parentEntityCode.AddAnnotation("Relational:ColumnName", "PARENT_ENTITY_CODE");

            var plShortName = runtimeEntityType.AddProperty(
                "PlShortName",
                typeof(string),
                propertyInfo: typeof(AskBusinessObjectsVl).GetProperty("PlShortName", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(AskBusinessObjectsVl).GetField("<PlShortName>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                nullable: true,
                maxLength: 50,
                unicode: false);
            plShortName.AddAnnotation("Oracle:ValueGenerationStrategy", OracleValueGenerationStrategy.None);
            plShortName.AddAnnotation("Relational:ColumnName", "PL_SHORT_NAME");

            var reportName = runtimeEntityType.AddProperty(
                "ReportName",
                typeof(string),
                propertyInfo: typeof(AskBusinessObjectsVl).GetProperty("ReportName", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(AskBusinessObjectsVl).GetField("<ReportName>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                nullable: true,
                maxLength: 50,
                unicode: false);
            reportName.AddAnnotation("Oracle:ValueGenerationStrategy", OracleValueGenerationStrategy.None);
            reportName.AddAnnotation("Relational:ColumnName", "REPORT_NAME");

            var reportServerName = runtimeEntityType.AddProperty(
                "ReportServerName",
                typeof(string),
                propertyInfo: typeof(AskBusinessObjectsVl).GetProperty("ReportServerName", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(AskBusinessObjectsVl).GetField("<ReportServerName>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                nullable: true,
                maxLength: 50,
                unicode: false);
            reportServerName.AddAnnotation("Oracle:ValueGenerationStrategy", OracleValueGenerationStrategy.None);
            reportServerName.AddAnnotation("Relational:ColumnName", "REPORT_SERVER_NAME");

            var reportServerTestUrl = runtimeEntityType.AddProperty(
                "ReportServerTestUrl",
                typeof(string),
                propertyInfo: typeof(AskBusinessObjectsVl).GetProperty("ReportServerTestUrl", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(AskBusinessObjectsVl).GetField("<ReportServerTestUrl>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                nullable: true,
                maxLength: 50,
                unicode: false);
            reportServerTestUrl.AddAnnotation("Oracle:ValueGenerationStrategy", OracleValueGenerationStrategy.None);
            reportServerTestUrl.AddAnnotation("Relational:ColumnName", "REPORT_SERVER_TEST_URL");

            var reviewExistingData = runtimeEntityType.AddProperty(
                "ReviewExistingData",
                typeof(string),
                propertyInfo: typeof(AskBusinessObjectsVl).GetProperty("ReviewExistingData", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(AskBusinessObjectsVl).GetField("<ReviewExistingData>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                nullable: true,
                maxLength: 50,
                unicode: false);
            reviewExistingData.AddAnnotation("Oracle:ValueGenerationStrategy", OracleValueGenerationStrategy.None);
            reviewExistingData.AddAnnotation("Relational:ColumnName", "REVIEW_EXISTING_DATA");

            var reviewPrioritizer = runtimeEntityType.AddProperty(
                "ReviewPrioritizer",
                typeof(string),
                propertyInfo: typeof(AskBusinessObjectsVl).GetProperty("ReviewPrioritizer", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(AskBusinessObjectsVl).GetField("<ReviewPrioritizer>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                nullable: true,
                maxLength: 50,
                unicode: false);
            reviewPrioritizer.AddAnnotation("Oracle:ValueGenerationStrategy", OracleValueGenerationStrategy.None);
            reviewPrioritizer.AddAnnotation("Relational:ColumnName", "REVIEW_PRIORITIZER");

            var reviewPriority = runtimeEntityType.AddProperty(
                "ReviewPriority",
                typeof(string),
                propertyInfo: typeof(AskBusinessObjectsVl).GetProperty("ReviewPriority", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(AskBusinessObjectsVl).GetField("<ReviewPriority>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                nullable: true,
                maxLength: 50,
                unicode: false);
            reviewPriority.AddAnnotation("Oracle:ValueGenerationStrategy", OracleValueGenerationStrategy.None);
            reviewPriority.AddAnnotation("Relational:ColumnName", "REVIEW_PRIORITY");

            var seedDataRequestor = runtimeEntityType.AddProperty(
                "SeedDataRequestor",
                typeof(string),
                propertyInfo: typeof(AskBusinessObjectsVl).GetProperty("SeedDataRequestor", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(AskBusinessObjectsVl).GetField("<SeedDataRequestor>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                nullable: true,
                maxLength: 50,
                unicode: false);
            seedDataRequestor.AddAnnotation("Oracle:ValueGenerationStrategy", OracleValueGenerationStrategy.None);
            seedDataRequestor.AddAnnotation("Relational:ColumnName", "SEED_DATA_REQUESTOR");

            var seedDataReviewer = runtimeEntityType.AddProperty(
                "SeedDataReviewer",
                typeof(string),
                propertyInfo: typeof(AskBusinessObjectsVl).GetProperty("SeedDataReviewer", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(AskBusinessObjectsVl).GetField("<SeedDataReviewer>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                nullable: true,
                maxLength: 50,
                unicode: false);
            seedDataReviewer.AddAnnotation("Oracle:ValueGenerationStrategy", OracleValueGenerationStrategy.None);
            seedDataReviewer.AddAnnotation("Relational:ColumnName", "SEED_DATA_REVIEWER");

            var seedDataType = runtimeEntityType.AddProperty(
                "SeedDataType",
                typeof(string),
                propertyInfo: typeof(AskBusinessObjectsVl).GetProperty("SeedDataType", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(AskBusinessObjectsVl).GetField("<SeedDataType>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                nullable: true,
                maxLength: 50,
                unicode: false);
            seedDataType.AddAnnotation("Oracle:ValueGenerationStrategy", OracleValueGenerationStrategy.None);
            seedDataType.AddAnnotation("Relational:ColumnName", "SEED_DATA_TYPE");

            var seedReviewProcessFusion = runtimeEntityType.AddProperty(
                "SeedReviewProcessFusion",
                typeof(string),
                propertyInfo: typeof(AskBusinessObjectsVl).GetProperty("SeedReviewProcessFusion", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(AskBusinessObjectsVl).GetField("<SeedReviewProcessFusion>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                nullable: true,
                maxLength: 50,
                unicode: false);
            seedReviewProcessFusion.AddAnnotation("Oracle:ValueGenerationStrategy", OracleValueGenerationStrategy.None);
            seedReviewProcessFusion.AddAnnotation("Relational:ColumnName", "SEED_REVIEW_PROCESS_FUSION");

            var seedReviewProcessToday = runtimeEntityType.AddProperty(
                "SeedReviewProcessToday",
                typeof(string),
                propertyInfo: typeof(AskBusinessObjectsVl).GetProperty("SeedReviewProcessToday", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(AskBusinessObjectsVl).GetField("<SeedReviewProcessToday>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                nullable: true,
                maxLength: 50,
                unicode: false);
            seedReviewProcessToday.AddAnnotation("Oracle:ValueGenerationStrategy", OracleValueGenerationStrategy.None);
            seedReviewProcessToday.AddAnnotation("Relational:ColumnName", "SEED_REVIEW_PROCESS_TODAY");

            var serviceAm = runtimeEntityType.AddProperty(
                "ServiceAm",
                typeof(string),
                propertyInfo: typeof(AskBusinessObjectsVl).GetProperty("ServiceAm", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(AskBusinessObjectsVl).GetField("<ServiceAm>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                nullable: true,
                maxLength: 50,
                unicode: false);
            serviceAm.AddAnnotation("Oracle:ValueGenerationStrategy", OracleValueGenerationStrategy.None);
            serviceAm.AddAnnotation("Relational:ColumnName", "SERVICE_AM");

            var serviceId = runtimeEntityType.AddProperty(
                "ServiceId",
                typeof(decimal?),
                propertyInfo: typeof(AskBusinessObjectsVl).GetProperty("ServiceId", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(AskBusinessObjectsVl).GetField("<ServiceId>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                nullable: true);
            serviceId.AddAnnotation("Oracle:ValueGenerationStrategy", OracleValueGenerationStrategy.None);
            serviceId.AddAnnotation("Relational:ColumnName", "SERVICE_ID");
            serviceId.AddAnnotation("Relational:ColumnType", "NUMBER(38)");

            var serviceName = runtimeEntityType.AddProperty(
                "ServiceName",
                typeof(string),
                propertyInfo: typeof(AskBusinessObjectsVl).GetProperty("ServiceName", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(AskBusinessObjectsVl).GetField("<ServiceName>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                nullable: true,
                maxLength: 50,
                unicode: false);
            serviceName.AddAnnotation("Oracle:ValueGenerationStrategy", OracleValueGenerationStrategy.None);
            serviceName.AddAnnotation("Relational:ColumnName", "SERVICE_NAME");

            var serviceSdo = runtimeEntityType.AddProperty(
                "ServiceSdo",
                typeof(string),
                propertyInfo: typeof(AskBusinessObjectsVl).GetProperty("ServiceSdo", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(AskBusinessObjectsVl).GetField("<ServiceSdo>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                nullable: true,
                maxLength: 50,
                unicode: false);
            serviceSdo.AddAnnotation("Oracle:ValueGenerationStrategy", OracleValueGenerationStrategy.None);
            serviceSdo.AddAnnotation("Relational:ColumnName", "SERVICE_SDO");

            var serviceSdoVo = runtimeEntityType.AddProperty(
                "ServiceSdoVo",
                typeof(string),
                propertyInfo: typeof(AskBusinessObjectsVl).GetProperty("ServiceSdoVo", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(AskBusinessObjectsVl).GetField("<ServiceSdoVo>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                nullable: true,
                maxLength: 50,
                unicode: false);
            serviceSdoVo.AddAnnotation("Oracle:ValueGenerationStrategy", OracleValueGenerationStrategy.None);
            serviceSdoVo.AddAnnotation("Relational:ColumnName", "SERVICE_SDO_VO");

            var serviceType = runtimeEntityType.AddProperty(
                "ServiceType",
                typeof(string),
                propertyInfo: typeof(AskBusinessObjectsVl).GetProperty("ServiceType", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(AskBusinessObjectsVl).GetField("<ServiceType>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                nullable: true,
                maxLength: 50,
                unicode: false);
            serviceType.AddAnnotation("Oracle:ValueGenerationStrategy", OracleValueGenerationStrategy.None);
            serviceType.AddAnnotation("Relational:ColumnName", "SERVICE_TYPE");

            var serviceVisibility = runtimeEntityType.AddProperty(
                "ServiceVisibility",
                typeof(string),
                propertyInfo: typeof(AskBusinessObjectsVl).GetProperty("ServiceVisibility", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(AskBusinessObjectsVl).GetField("<ServiceVisibility>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                nullable: true,
                maxLength: 50,
                unicode: false);
            serviceVisibility.AddAnnotation("Oracle:ValueGenerationStrategy", OracleValueGenerationStrategy.None);
            serviceVisibility.AddAnnotation("Relational:ColumnName", "SERVICE_VISIBILITY");

            var setupComments = runtimeEntityType.AddProperty(
                "SetupComments",
                typeof(string),
                propertyInfo: typeof(AskBusinessObjectsVl).GetProperty("SetupComments", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(AskBusinessObjectsVl).GetField("<SetupComments>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                nullable: true,
                maxLength: 50,
                unicode: false);
            setupComments.AddAnnotation("Oracle:ValueGenerationStrategy", OracleValueGenerationStrategy.None);
            setupComments.AddAnnotation("Relational:ColumnName", "SETUP_COMMENTS");

            var storeSeedData = runtimeEntityType.AddProperty(
                "StoreSeedData",
                typeof(string),
                propertyInfo: typeof(AskBusinessObjectsVl).GetProperty("StoreSeedData", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(AskBusinessObjectsVl).GetField("<StoreSeedData>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                nullable: true,
                maxLength: 50,
                unicode: false);
            storeSeedData.AddAnnotation("Oracle:ValueGenerationStrategy", OracleValueGenerationStrategy.None);
            storeSeedData.AddAnnotation("Relational:ColumnName", "STORE_SEED_DATA");

            var subDiscriminatorValue = runtimeEntityType.AddProperty(
                "SubDiscriminatorValue",
                typeof(string),
                propertyInfo: typeof(AskBusinessObjectsVl).GetProperty("SubDiscriminatorValue", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(AskBusinessObjectsVl).GetField("<SubDiscriminatorValue>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                nullable: true,
                maxLength: 50,
                unicode: false);
            subDiscriminatorValue.AddAnnotation("Oracle:ValueGenerationStrategy", OracleValueGenerationStrategy.None);
            subDiscriminatorValue.AddAnnotation("Relational:ColumnName", "SUB_DISCRIMINATOR_VALUE");

            var subtypeDiscriminator = runtimeEntityType.AddProperty(
                "SubtypeDiscriminator",
                typeof(string),
                propertyInfo: typeof(AskBusinessObjectsVl).GetProperty("SubtypeDiscriminator", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(AskBusinessObjectsVl).GetField("<SubtypeDiscriminator>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                nullable: true,
                maxLength: 50,
                unicode: false);
            subtypeDiscriminator.AddAnnotation("Oracle:ValueGenerationStrategy", OracleValueGenerationStrategy.None);
            subtypeDiscriminator.AddAnnotation("Relational:ColumnName", "SUBTYPE_DISCRIMINATOR");

            var subtypeDiscriminatorId = runtimeEntityType.AddProperty(
                "SubtypeDiscriminatorId",
                typeof(decimal?),
                propertyInfo: typeof(AskBusinessObjectsVl).GetProperty("SubtypeDiscriminatorId", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(AskBusinessObjectsVl).GetField("<SubtypeDiscriminatorId>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                nullable: true);
            subtypeDiscriminatorId.AddAnnotation("Oracle:ValueGenerationStrategy", OracleValueGenerationStrategy.None);
            subtypeDiscriminatorId.AddAnnotation("Relational:ColumnName", "SUBTYPE_DISCRIMINATOR_ID");
            subtypeDiscriminatorId.AddAnnotation("Relational:ColumnType", "NUMBER(38)");

            var supertypeBusinessObjectId = runtimeEntityType.AddProperty(
                "SupertypeBusinessObjectId",
                typeof(decimal?),
                propertyInfo: typeof(AskBusinessObjectsVl).GetProperty("SupertypeBusinessObjectId", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(AskBusinessObjectsVl).GetField("<SupertypeBusinessObjectId>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                nullable: true);
            supertypeBusinessObjectId.AddAnnotation("Oracle:ValueGenerationStrategy", OracleValueGenerationStrategy.None);
            supertypeBusinessObjectId.AddAnnotation("Relational:ColumnName", "SUPERTYPE_BUSINESS_OBJECT_ID");
            supertypeBusinessObjectId.AddAnnotation("Relational:ColumnType", "NUMBER(38)");

            var supportEmbedUi = runtimeEntityType.AddProperty(
                "SupportEmbedUi",
                typeof(string),
                propertyInfo: typeof(AskBusinessObjectsVl).GetProperty("SupportEmbedUi", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(AskBusinessObjectsVl).GetField("<SupportEmbedUi>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                nullable: true,
                maxLength: 50,
                unicode: false);
            supportEmbedUi.AddAnnotation("Oracle:ValueGenerationStrategy", OracleValueGenerationStrategy.None);
            supportEmbedUi.AddAnnotation("Relational:ColumnName", "SUPPORT_EMBED_UI");

            var supportMobile = runtimeEntityType.AddProperty(
                "SupportMobile",
                typeof(string),
                propertyInfo: typeof(AskBusinessObjectsVl).GetProperty("SupportMobile", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(AskBusinessObjectsVl).GetField("<SupportMobile>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                nullable: true,
                maxLength: 50,
                unicode: false);
            supportMobile.AddAnnotation("Oracle:ValueGenerationStrategy", OracleValueGenerationStrategy.None);
            supportMobile.AddAnnotation("Relational:ColumnName", "SUPPORT_MOBILE");

            var supportPlsqlApi = runtimeEntityType.AddProperty(
                "SupportPlsqlApi",
                typeof(string),
                propertyInfo: typeof(AskBusinessObjectsVl).GetProperty("SupportPlsqlApi", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(AskBusinessObjectsVl).GetField("<SupportPlsqlApi>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                nullable: true,
                maxLength: 50,
                unicode: false);
            supportPlsqlApi.AddAnnotation("Oracle:ValueGenerationStrategy", OracleValueGenerationStrategy.None);
            supportPlsqlApi.AddAnnotation("Relational:ColumnName", "SUPPORT_PLSQL_API");

            var supportPubTableView = runtimeEntityType.AddProperty(
                "SupportPubTableView",
                typeof(string),
                propertyInfo: typeof(AskBusinessObjectsVl).GetProperty("SupportPubTableView", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(AskBusinessObjectsVl).GetField("<SupportPubTableView>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                nullable: true,
                maxLength: 50,
                unicode: false);
            supportPubTableView.AddAnnotation("Oracle:ValueGenerationStrategy", OracleValueGenerationStrategy.None);
            supportPubTableView.AddAnnotation("Relational:ColumnName", "SUPPORT_PUB_TABLE_VIEW");

            var supportReplication = runtimeEntityType.AddProperty(
                "SupportReplication",
                typeof(string),
                propertyInfo: typeof(AskBusinessObjectsVl).GetProperty("SupportReplication", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(AskBusinessObjectsVl).GetField("<SupportReplication>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                nullable: true,
                maxLength: 50,
                unicode: false);
            supportReplication.AddAnnotation("Oracle:ValueGenerationStrategy", OracleValueGenerationStrategy.None);
            supportReplication.AddAnnotation("Relational:ColumnName", "SUPPORT_REPLICATION");

            var supportServiceOper = runtimeEntityType.AddProperty(
                "SupportServiceOper",
                typeof(string),
                propertyInfo: typeof(AskBusinessObjectsVl).GetProperty("SupportServiceOper", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(AskBusinessObjectsVl).GetField("<SupportServiceOper>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                nullable: true,
                maxLength: 50,
                unicode: false);
            supportServiceOper.AddAnnotation("Oracle:ValueGenerationStrategy", OracleValueGenerationStrategy.None);
            supportServiceOper.AddAnnotation("Relational:ColumnName", "SUPPORT_SERVICE_OPER");

            var svp = runtimeEntityType.AddProperty(
                "Svp",
                typeof(string),
                propertyInfo: typeof(AskBusinessObjectsVl).GetProperty("Svp", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(AskBusinessObjectsVl).GetField("<Svp>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                nullable: true,
                maxLength: 50,
                unicode: false);
            svp.AddAnnotation("Oracle:ValueGenerationStrategy", OracleValueGenerationStrategy.None);
            svp.AddAnnotation("Relational:ColumnName", "SVP");

            var switchableEo = runtimeEntityType.AddProperty(
                "SwitchableEo",
                typeof(string),
                propertyInfo: typeof(AskBusinessObjectsVl).GetProperty("SwitchableEo", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(AskBusinessObjectsVl).GetField("<SwitchableEo>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                nullable: true,
                maxLength: 50,
                unicode: false);
            switchableEo.AddAnnotation("Oracle:ValueGenerationStrategy", OracleValueGenerationStrategy.None);
            switchableEo.AddAnnotation("Relational:ColumnName", "SWITCHABLE_EO");

            var switchableVo = runtimeEntityType.AddProperty(
                "SwitchableVo",
                typeof(string),
                propertyInfo: typeof(AskBusinessObjectsVl).GetProperty("SwitchableVo", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(AskBusinessObjectsVl).GetField("<SwitchableVo>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                nullable: true,
                maxLength: 50,
                unicode: false);
            switchableVo.AddAnnotation("Oracle:ValueGenerationStrategy", OracleValueGenerationStrategy.None);
            switchableVo.AddAnnotation("Relational:ColumnName", "SWITCHABLE_VO");

            var testUrl = runtimeEntityType.AddProperty(
                "TestUrl",
                typeof(string),
                propertyInfo: typeof(AskBusinessObjectsVl).GetProperty("TestUrl", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(AskBusinessObjectsVl).GetField("<TestUrl>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                nullable: true,
                maxLength: 50,
                unicode: false);
            testUrl.AddAnnotation("Oracle:ValueGenerationStrategy", OracleValueGenerationStrategy.None);
            testUrl.AddAnnotation("Relational:ColumnName", "TEST_URL");

            var transformAllowedFlag = runtimeEntityType.AddProperty(
                "TransformAllowedFlag",
                typeof(string),
                propertyInfo: typeof(AskBusinessObjectsVl).GetProperty("TransformAllowedFlag", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(AskBusinessObjectsVl).GetField("<TransformAllowedFlag>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                nullable: true,
                maxLength: 50,
                unicode: false);
            transformAllowedFlag.AddAnnotation("Oracle:ValueGenerationStrategy", OracleValueGenerationStrategy.None);
            transformAllowedFlag.AddAnnotation("Relational:ColumnName", "TRANSFORM_ALLOWED_FLAG");

            var updateAllowedFlag = runtimeEntityType.AddProperty(
                "UpdateAllowedFlag",
                typeof(string),
                propertyInfo: typeof(AskBusinessObjectsVl).GetProperty("UpdateAllowedFlag", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(AskBusinessObjectsVl).GetField("<UpdateAllowedFlag>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                nullable: true,
                maxLength: 50,
                unicode: false);
            updateAllowedFlag.AddAnnotation("Oracle:ValueGenerationStrategy", OracleValueGenerationStrategy.None);
            updateAllowedFlag.AddAnnotation("Relational:ColumnName", "UPDATE_ALLOWED_FLAG");

            var vp = runtimeEntityType.AddProperty(
                "Vp",
                typeof(string),
                propertyInfo: typeof(AskBusinessObjectsVl).GetProperty("Vp", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(AskBusinessObjectsVl).GetField("<Vp>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                nullable: true,
                maxLength: 50,
                unicode: false);
            vp.AddAnnotation("Oracle:ValueGenerationStrategy", OracleValueGenerationStrategy.None);
            vp.AddAnnotation("Relational:ColumnName", "VP");

            var xmlFileName = runtimeEntityType.AddProperty(
                "XmlFileName",
                typeof(string),
                propertyInfo: typeof(AskBusinessObjectsVl).GetProperty("XmlFileName", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(AskBusinessObjectsVl).GetField("<XmlFileName>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                nullable: true,
                maxLength: 100,
                unicode: false);
            xmlFileName.AddAnnotation("Oracle:ValueGenerationStrategy", OracleValueGenerationStrategy.None);
            xmlFileName.AddAnnotation("Relational:ColumnName", "XML_FILE_NAME");

            var xmlNodePath = runtimeEntityType.AddProperty(
                "XmlNodePath",
                typeof(string),
                propertyInfo: typeof(AskBusinessObjectsVl).GetProperty("XmlNodePath", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(AskBusinessObjectsVl).GetField("<XmlNodePath>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                nullable: true,
                maxLength: 350,
                unicode: false);
            xmlNodePath.AddAnnotation("Oracle:ValueGenerationStrategy", OracleValueGenerationStrategy.None);
            xmlNodePath.AddAnnotation("Relational:ColumnName", "XML_NODE_PATH");

            return runtimeEntityType;
        }

        public static void CreateAnnotations(RuntimeEntityType runtimeEntityType)
        {
            runtimeEntityType.AddAnnotation("Relational:FunctionName", null);
            runtimeEntityType.AddAnnotation("Relational:Schema", "FUSION");
            runtimeEntityType.AddAnnotation("Relational:SqlQuery", null);
            runtimeEntityType.AddAnnotation("Relational:TableName", "ASK_BUSINESS_OBJECTS_VL");
            runtimeEntityType.AddAnnotation("Relational:ViewName", null);
            runtimeEntityType.AddAnnotation("Relational:ViewSchema", null);

            Customize(runtimeEntityType);
        }

        static partial void Customize(RuntimeEntityType runtimeEntityType);
    }
}
